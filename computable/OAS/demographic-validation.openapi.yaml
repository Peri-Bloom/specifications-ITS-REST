openapi: 3.0.3
info:
  title: Demographic API
  version: latest
  x-status: DRAFT
  x-spec: ehr
  contact:
    name: Specifications Editorial Committee openEHR
    url: https://specifications.openehr.org/
    email: info@openehr.org
  license:
    name: Creative Commons Attribution-NoDerivs 3.0 Unported
    url: https://creativecommons.org/licenses/by-nd/3.0/
servers:
  - url: https://{baseUrl}/v1
    description: An example openEHR server URL.
    variables:
      baseUrl:
        default: openEHRSys.example.com
        description: The (example) server base URL prefix providing openEHR services. This may contain server name, port and base path prefix.
security: []
tags:
  - name: PARTY
    description: |
      Management of the [directory](https://specifications.openehr.org/releases/RM/latest/ehr.html#_directory) [FOLDER](https://specifications.openehr.org/releases/RM/latest/common.html#_folder_class) resource.
      Actions upon resources of this group are also formally described in the [I_EHR_DIRECTORY](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_directory_interface) Abstract Service Model interface.
  - name: CONTRIBUTION
    description: |
      Management of [CONTRIBUTION](https://specifications.openehr.org/releases/RM/latest/common.html#_contribution_class) resource.
      Actions upon resources of this group are also formally described in the [I_EHR_CONTRIBUTION](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_contribution_interface) Abstract Service Model interface.
paths:
  /demographic/actor:
    post:
      operationId: party_create
      summary: Create PARTY
      description: |
        Creates the first version of a new PARTY.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/Prefer'
      requestBody:
        description: |
          The PARTY.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UParty'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201_PARTY'
        '400':
          $ref: '#/components/responses/400_PARTY'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422_PARTY'
  /demographic/party/{uid_based_id}:
    get:
      operationId: party_get
      summary: Get PARTY
      description: |
        Retrieves a version of the PARTY identified by `uid_based_id`.

        The `uid_based_id` can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
        The former is used to retrieve a specific known version of the PARTY (e.g. one identified by `8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1`), whereas the later (e.g. an identifier like `8849182c-82ad-4088-a07f-48ead4180515`) is be used to retrieve a version from the version container whenever the _version_tree_id_ is unknown or irrelevant (such as when most recent version is requested).

        When the `uid_based_id` has the form of a HIER_OBJECT_ID, if the `version_at_time` is supplied, retrieves the version extant _at specified time_, otherwise retrieves the _latest_ PARTY version.

        See [Resource identification](overview.html#tag/Resources/Resource-identification) for more details about the identifiers usage and meaning.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/uid_based_id'
        - $ref: '#/components/parameters/version_at_time'
      responses:
        '200':
          $ref: '#/components/responses/200_PARTY_retrieved'
        '204':
          $ref: '#/components/responses/204_because_deleted_at_time'
        '404':
          $ref: '#/components/responses/404_not_found_or_no_version_at_time'
    put:
      operationId: party_update
      summary: Update PARTY
      description: |
        Updates PARTY identified by `uid_based_id`.

        The `uid_based_id` can take only a form of an HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).

        If the request body already contains a PARTY.uid.value, it must match the `uid_based_id` in the URL. 

        The existing latest `version_uid` of PARTY resource (i.e. the `preceding_version_uid`) must be specified in the `If-Match` header.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/uid_based_id_as_versioned_object_uid'
        - $ref: '#/components/parameters/If-Match'
        - $ref: '#/components/parameters/Prefer'
      requestBody:
        description: |
          The new PARTY.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UParty'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200_PARTY_updated'
        '400':
          $ref: '#/components/responses/400_PARTY'
        '404':
          $ref: '#/components/responses/404'
        '412':
          $ref: '#/components/responses/412_PARTY'
        '422':
          $ref: '#/components/responses/422_PARTY'
    delete:
      operationId: party_delete
      summary: Delete PARTY
      description: |
        Deletes the PARTY identified by `uid_based_id`.

        The `uid_based_id` MUST be in a form of an OBJECT_VERSION_ID identifier taken from the last (most recent) VERSION.uid.value, representing the `preceding_version_uid` to be deleted.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/uid_based_id_as_version_uid'
      responses:
        '204':
          $ref: '#/components/responses/204_PARTY_deleted'
        '400':
          $ref: '#/components/responses/400_already_deleted'
        '404':
          $ref: '#/components/responses/404'
        '409':
          $ref: '#/components/responses/409_PARTY_with_uid_based_id'
  /demographic/versioned_party/{versioned_object_uid}:
    get:
      operationId: versioned_party_get
      summary: Get versioned PARTY
      description: |
        Retrieves a VERSIONED_PARTY identified by `versioned_object_uid`.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/versioned_object_uid_PARTY'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSIONED_PARTY'
        '404':
          $ref: '#/components/responses/404'
  /demographic/versioned_party/{versioned_object_uid}/revision_history:
    get:
      operationId: versioned_party_revision_history
      summary: Get versioned PARTY revision history
      description: |
        Retrieves revision history of the VERSIONED_PARTY identified by `versioned_object_uid`.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/versioned_object_uid_PARTY'
      responses:
        '200':
          $ref: '#/components/responses/200_REVISION_HISTORY'
        '404':
          $ref: '#/components/responses/404'
  /demographic/versioned_party/{versioned_object_uid}/version:
    get:
      operationId: versioned_party_version_get_at_time
      summary: Get versioned PARTY version at time
      description: |
        Retrieves a VERSION from the VERSIONED_PARTY identified by `versioned_object_uid`.

        If `version_at_time` is supplied, retrieves the VERSION extant _at specified time_, otherwise retrieves the _latest_ VERSION.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/versioned_object_uid_PARTY'
        - $ref: '#/components/parameters/version_at_time'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSION_of_PARTY_at_time'
        '404':
          $ref: '#/components/responses/404_not_found_or_no_version_at_time'
  /demographic/versioned_party/{versioned_object_uid}/version/{version_uid}:
    get:
      operationId: versioned_composition_version_get_by_id
      summary: Get versioned PARTY version by id
      description: |
        Retrieves a VERSION identified by `version_uid` of a VERSIONED_PARTY identified by `versioned_object_uid`.
      tags:
        - PARTY
      parameters:
        - $ref: '#/components/parameters/versioned_object_uid_PARTY'
        - $ref: '#/components/parameters/version_uid'
      responses:
        '200':
          $ref: '#/components/responses/200_VERSION_of_PARTY_by_id'
        '404':
          $ref: '#/components/responses/404'
  /demographic/contribution:
    post:
      operationId: contribution_create
      summary: Create CONTRIBUTION
      description: |
        We will use the relaxed CONTRIBUTION with the following optional attributes:
          - `uid`: when provided, it will be accepted in case is not in-use, otherwise error will be returned
          - `audit.time_committed`: server will always set it
          - `audit.system_id`: when provided, it will be validated
      tags:
        - CONTRIBUTION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/Prefer'
      requestBody:
        description: |
          The CONTRIBUTION.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewContribution'
        required: true
      responses:
        '201':
          $ref: '#/components/responses/201_CONTRIBUTION'
        '400':
          $ref: '#/components/responses/400_CONTRIBUTION'
        '404':
          $ref: '#/components/responses/404_unknown_ehr_id'
        '409':
          $ref: '#/components/responses/409'
  /demographic/contribution/{contribution_uid}:
    get:
      operationId: contribution_get
      summary: Get CONTRIBUTION by id
      description: |
        Retrieves a CONTRIBUTION identified by `contribution_uid` and associated with the EHR identified by `ehr_id`.
      tags:
        - CONTRIBUTION
      parameters:
        - $ref: '#/components/parameters/ehr_id'
        - $ref: '#/components/parameters/contribution_uid'
      responses:
        '200':
          $ref: '#/components/responses/200_CONTRIBUTION'
        '404':
          $ref: '#/components/responses/404_CONTRIBUTION'
components:
  schemas:
    UAbstractItemStructure:
      title: ITEM_STRUCTURE
      type: object
    UMDvUri:
      title: DV_URI
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_URI
          type: string
        value:
          type: string
      x-discriminator-value: DV_URI
    DvEhrUri:
      title: DV_EHR_URI
      type: object
      properties:
        _type:
          type: string
          default: DV_EHR_URI
        value:
          type: string
      example:
        _type: DV_EHR_URI
        value: ehr://system_id/ehr_id/top_level_structure_locator/path_inside_top_level_structure
      x-discriminator-value: DV_EHR_URI
      required:
        - value
    UMDvEhrUri:
      title: DV_EHR_URI
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_EHR_URI
          type: string
        value:
          type: string
      x-discriminator-value: DV_EHR_URI
      example:
        _type: DV_EHR_URI
        value: ehr://system_id/ehr_id/top_level_structure_locator/path_inside_top_level_structure
    UDvUri:
      title: DV_URI
      oneOf:
        - $ref: '#/components/schemas/UMDvUri'
        - $ref: '#/components/schemas/UMDvEhrUri'
      discriminator:
        propertyName: _type
        mapping:
          DV_URI: '#/components/schemas/UMDvUri'
          DV_EHR_URI: '#/components/schemas/UMDvEhrUri'
      example:
        _type: DV_URI
        value: https://www.example.com
    TerminologyId:
      title: TERMINOLOGY_ID
      type: object
      properties:
        _type:
          type: string
          default: TERMINOLOGY_ID
        value:
          type: string
      x-discriminator-value: TERMINOLOGY_ID
      required:
        - value
    CodePhrase:
      title: CODE_PHRASE
      required:
        - terminology_id
        - code_string
      type: object
      properties:
        terminology_id:
          $ref: '#/components/schemas/TerminologyId'
        code_string:
          type: string
        preferred_term:
          type: string
      example:
        terminology_id:
          value: local
        code_string: at0001
    DvCodedText:
      title: DV_CODED_TEXT
      required:
        - value
        - defining_code
      type: object
      properties:
        _type:
          type: string
          default: DV_CODED_TEXT
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/UDvUri'
        formatting:
          type: string
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TermMapping'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        defining_code:
          $ref: '#/components/schemas/CodePhrase'
      example:
        value: Coded text value
        defining_code:
          terminology_id:
            value: local
          code_string: at0001
      x-discriminator-value: DV_CODED_TEXT
    TermMapping:
      title: TERM_MAPPING
      required:
        - match
        - target
      type: object
      properties:
        match:
          pattern: /^[><=?]$/
          type: string
        purpose:
          $ref: '#/components/schemas/DvCodedText'
        target:
          $ref: '#/components/schemas/CodePhrase'
    UMDvText:
      title: DV_TEXT
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_TEXT
          type: string
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/UDvUri'
        formatting:
          type: string
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TermMapping'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
      x-discriminator-value: DV_TEXT
    UMDvCodedText:
      title: DV_CODED_TEXT
      required:
        - value
        - defining_code
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_CODED_TEXT
          type: string
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/UDvUri'
        formatting:
          type: string
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TermMapping'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        defining_code:
          $ref: '#/components/schemas/CodePhrase'
      x-discriminator-value: DV_CODED_TEXT
      example:
        value: Coded text value
        defining_code:
          terminology_id:
            value: local
          code_string: at0001
    UDvText:
      title: DV_TEXT
      oneOf:
        - $ref: '#/components/schemas/UMDvText'
        - $ref: '#/components/schemas/UMDvCodedText'
      discriminator:
        propertyName: _type
        mapping:
          DV_TEXT: '#/components/schemas/UMDvText'
          DV_CODED_TEXT: '#/components/schemas/UMDvCodedText'
      example:
        _type: DV_TEXT
        value: Text value
    HierObjectId:
      title: HIER_OBJECT_ID
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: UID_BASED_ID
        value:
          type: string
          format: uuid
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b
      x-discriminator-value: HIER_OBJECT_ID
    UMHierObjectId:
      title: HIER_OBJECT_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - HIER_OBJECT_ID
          type: string
        value:
          type: string
          format: uuid
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b
      example:
        _type: HIER_OBJECT_ID
        value: 6cb19121-4307-4648-9da0-d62e4d51f19b
      x-discriminator-value: HIER_OBJECT_ID
    ObjectVersionId:
      title: OBJECT_VERSION_ID
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: UID_BASED_ID
        value:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      x-discriminator-value: OBJECT_VERSION_ID
    UMObjectVersionId:
      title: OBJECT_VERSION_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - OBJECT_VERSION_ID
          type: string
        value:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      example:
        _type: OBJECT_VERSION_ID
        value: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      x-discriminator-value: OBJECT_VERSION_ID
    UUidBasedId:
      title: UID_BASED_ID
      oneOf:
        - $ref: '#/components/schemas/UMHierObjectId'
        - $ref: '#/components/schemas/UMObjectVersionId'
      discriminator:
        propertyName: _type
        mapping:
          HIER_OBJECT_ID: '#/components/schemas/UMHierObjectId'
          OBJECT_VERSION_ID: '#/components/schemas/UMObjectVersionId'
    Link:
      title: LINK
      required:
        - meaning
        - type
        - target
      type: object
      properties:
        meaning:
          $ref: '#/components/schemas/UDvText'
        type:
          $ref: '#/components/schemas/UDvText'
        target:
          $ref: '#/components/schemas/DvEhrUri'
    ArchetypeId:
      title: ARCHETYPE_ID
      type: object
      properties:
        _type:
          type: string
          default: ARCHETYPE_ID
        value:
          type: string
      x-discriminator-value: ARCHETYPE_ID
      required:
        - value
    TemplateId:
      title: TEMPLATE_ID
      type: object
      properties:
        _type:
          type: string
          default: TEMPLATE_ID
        value:
          type: string
      x-discriminator-value: TEMPLATE_ID
      required:
        - value
    Archetyped:
      title: ARCHETYPED
      required:
        - archetype_id
        - rm_version
      type: object
      properties:
        archetype_id:
          $ref: '#/components/schemas/ArchetypeId'
        template_id:
          $ref: '#/components/schemas/TemplateId'
        rm_version:
          type: string
      example:
        archetype_id:
          value: openEHR-EHR-COMPOSITION.encounter.v1
        template_id:
          value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
        rm_version: 1.0.2
      additionalProperties: false
    DvIdentifier:
      title: DV_IDENTIFIER
      required:
        - id
      type: object
      properties:
        issuer:
          type: string
        assigner:
          type: string
        id:
          type: string
        type:
          type: string
      description: |
        Type for representing identifiers of real-world entities. Typical identifiers include drivers licence number, social security number, veterans affairs number, prescription id, order id, and so on.

        DV_IDENTIFIER is used to represent any identifier of a real thing, issued by some authority or agency.
      example:
        id: 16b74749-e6aa-4945-b760-b42bdc07098a
        type: Patient
      x-discriminator-value: DV_IDENTIFIER
    DvMultimedia:
      title: DV_MULTIMEDIA
      required:
        - _type
        - media_type
        - size
      type: object
      properties:
        _type:
          type: string
          default: DV_MULTIMEDIA
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        alternate_text:
          type: string
        uri:
          $ref: '#/components/schemas/UDvUri'
        data:
          type: string
        media_type:
          $ref: '#/components/schemas/CodePhrase'
        compression_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        integrity_check:
          type: string
        integrity_check_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        thumbnail:
          $ref: '#/components/schemas/DvMultimedia'
        size:
          type: integer
      x-discriminator-value: DV_MULTIMEDIA
    UMDvMultimedia:
      title: DV_MULTIMEDIA
      required:
        - _type
        - media_type
        - size
      type: object
      properties:
        _type:
          enum:
            - DV_MULTIMEDIA
          type: string
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        alternate_text:
          type: string
        uri:
          $ref: '#/components/schemas/UDvUri'
        data:
          type: string
        media_type:
          $ref: '#/components/schemas/CodePhrase'
        compression_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        integrity_check:
          type: string
        integrity_check_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        thumbnail:
          $ref: '#/components/schemas/DvMultimedia'
        size:
          type: integer
      x-discriminator-value: DV_MULTIMEDIA
    DvParsable:
      title: DV_PARSABLE
      required:
        - _type
        - value
        - formalism
      type: object
      properties:
        _type:
          type: string
          default: DV_PARSABLE
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        value:
          type: string
        formalism:
          type: string
      x-discriminator-value: DV_PARSABLE
    UMDvParsable:
      title: DV_PARSABLE
      required:
        - _type
        - value
        - formalism
      type: object
      properties:
        _type:
          enum:
            - DV_PARSABLE
          type: string
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        value:
          type: string
        formalism:
          type: string
      x-discriminator-value: DV_PARSABLE
    UDvEncapsulated:
      title: DV_ENCAPSULATED
      oneOf:
        - $ref: '#/components/schemas/UMDvMultimedia'
        - $ref: '#/components/schemas/UMDvParsable'
      discriminator:
        propertyName: _type
        mapping:
          DV_MULTIMEDIA: '#/components/schemas/UMDvMultimedia'
          DV_PARSABLE: '#/components/schemas/UMDvParsable'
    UMArchetypeId:
      title: ARCHETYPE_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - ARCHETYPE_ID
          type: string
        value:
          type: string
      x-discriminator-value: ARCHETYPE_ID
    UMTemplateId:
      title: TEMPLATE_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - TEMPLATE_ID
          type: string
        value:
          type: string
      x-discriminator-value: TEMPLATE_ID
    UMTerminologyId:
      title: TERMINOLOGY_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - TERMINOLOGY_ID
          type: string
        value:
          type: string
      x-discriminator-value: TERMINOLOGY_ID
    UMGenericId:
      title: GENERIC_ID
      required:
        - value
        - scheme
        - _type
      type: object
      properties:
        _type:
          enum:
            - GENERIC_ID
          type: string
        value:
          type: string
        scheme:
          type: string
      example:
        _type: GENERIC_ID
        value: c7ec861c-c413-39ff-9965-a198ebf44747
        scheme: pid
      x-discriminator-value: GENERIC_ID
    UObjectId:
      title: OBJECT_ID
      oneOf:
        - $ref: '#/components/schemas/UMArchetypeId'
        - $ref: '#/components/schemas/UMTemplateId'
        - $ref: '#/components/schemas/UMTerminologyId'
        - $ref: '#/components/schemas/UMGenericId'
        - $ref: '#/components/schemas/UMHierObjectId'
        - $ref: '#/components/schemas/UMObjectVersionId'
      discriminator:
        propertyName: _type
        mapping:
          ARCHETYPE_ID: '#/components/schemas/UMArchetypeId'
          TEMPLATE_ID: '#/components/schemas/UMTemplateId'
          TERMINOLOGY_ID: '#/components/schemas/UMTerminologyId'
          GENERIC_ID: '#/components/schemas/UMGenericId'
          HIER_OBJECT_ID: '#/components/schemas/UMHierObjectId'
          OBJECT_VERSION_ID: '#/components/schemas/UMObjectVersionId'
    PartyRef:
      title: PARTY_REF
      required:
        - namespace
        - type
        - id
      type: object
      properties:
        namespace:
          type: string
        type:
          pattern: ^PERSON|ORGANISATION|GROUP|AGENT|ROLE|PARTY|ACTOR$
          type: string
        id:
          $ref: '#/components/schemas/UObjectId'
      description: Identifier for parties in a demographic or identity service.
      example:
        id:
          _type: OBJECT_VERSION_ID
          value: b52b9408-7048-4ec8-94bd-831fb0727e67::openEHRSys.example.com::1
        namespace: local
        type: PERSON
    UMPartyIdentified:
      title: PARTY_IDENTIFIED
      required:
        - _type
      type: object
      properties:
        _type:
          enum:
            - PARTY_IDENTIFIED
          type: string
        external_ref:
          $ref: '#/components/schemas/PartyRef'
        name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
      x-discriminator-value: PARTY_IDENTIFIED
      example:
        _type: PARTY_IDENTIFIED
        external_ref:
          id:
            _type: GENERIC_ID
            value: 16b74749-e6aa-4945-b760-b42bdc07098a
            scheme: pid
          namespace: openEHRSys.example.com
          type: PERSON
        name: A name
    UMPartyRelated:
      title: PARTY_RELATED
      required:
        - _type
        - relationship
      type: object
      properties:
        _type:
          enum:
            - PARTY_RELATED
          type: string
        external_ref:
          $ref: '#/components/schemas/PartyRef'
        name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        relationship:
          $ref: '#/components/schemas/DvCodedText'
      x-discriminator-value: PARTY_RELATED
      example:
        _type: PARTY_IDENTIFIED
        external_ref:
          id:
            _type: GENERIC_ID
            value: 16b74749-e6aa-4945-b760-b42bdc07098a
            scheme: pid
          namespace: openEHRSys.example.com
          type: PERSON
        name: A name
    UPartyIdentified:
      title: PARTY_IDENTIFIED
      oneOf:
        - $ref: '#/components/schemas/UMPartyIdentified'
        - $ref: '#/components/schemas/UMPartyRelated'
      discriminator:
        propertyName: _type
        mapping:
          PARTY_IDENTIFIED: '#/components/schemas/UMPartyIdentified'
          PARTY_RELATED: '#/components/schemas/UMPartyRelated'
    UMPartySelf:
      title: PARTY_SELF
      required:
        - _type
      type: object
      properties:
        _type:
          enum:
            - PARTY_SELF
          type: string
        external_ref:
          $ref: '#/components/schemas/PartyRef'
      x-discriminator-value: PARTY_SELF
    UPartyProxy:
      title: PARTY_PROXY
      oneOf:
        - $ref: '#/components/schemas/UMPartySelf'
        - $ref: '#/components/schemas/UMPartyIdentified'
        - $ref: '#/components/schemas/UMPartyRelated'
      discriminator:
        propertyName: _type
        mapping:
          PARTY_SELF: '#/components/schemas/UMPartySelf'
          PARTY_IDENTIFIED: '#/components/schemas/UMPartyIdentified'
          PARTY_RELATED: '#/components/schemas/UMPartyRelated'
    DvInterval:
      title: DV_INTERVAL
      required:
        - lower_unbounded
        - upper_unbounded
        - lower_included
        - upper_included
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower_unbounded:
          type: boolean
        upper_unbounded:
          type: boolean
        lower_included:
          type: boolean
        upper_included:
          type: boolean
      x-discriminator-value: DV_INTERVAL
    ReferenceRange:
      title: REFERENCE_RANGE
      required:
        - meaning
        - range
      type: object
      properties:
        meaning:
          $ref: '#/components/schemas/UDvText'
        range:
          $ref: '#/components/schemas/DvInterval'
    DvDuration:
      title: DV_DURATION
      type: object
      properties:
        _type:
          type: string
          default: DV_DURATION
      x-discriminator-value: DV_DURATION
    DvDateTime:
      title: DV_DATE_TIME
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: DV_DATE_TIME
        value:
          type: string
          format: date-time
      example:
        _type: DV_DATE_TIME
        value: '2017-08-15T10:37:15.422+02:00'
      x-discriminator-value: DV_DATE_TIME
    UMDvBoolean:
      title: DV_BOOLEAN
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_BOOLEAN
          type: string
        value:
          type: boolean
      x-discriminator-value: DV_BOOLEAN
    UMDvCount:
      title: DV_COUNT
      required:
        - magnitude
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_COUNT
          type: string
        magnitude:
          type: integer
      x-discriminator-value: DV_COUNT
    DvDate:
      title: DV_DATE
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: DV_DATE
        value:
          type: string
          format: date
      example:
        _type: DV_DATE
        value: '2017-08-15'
      x-discriminator-value: DV_DATE
    UMDvDate:
      title: DV_DATE
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_DATE
          type: string
        value:
          type: string
          format: date
      x-discriminator-value: DV_DATE
      example:
        _type: DV_DATE
        value: '2017-08-15'
    UMDvDateTime:
      title: DV_DATE_TIME
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_DATE_TIME
          type: string
        value:
          type: string
          format: date-time
      x-discriminator-value: DV_DATE_TIME
      example:
        _type: DV_DATE_TIME
        value: '2017-08-15T10:37:15.422+02:00'
    UMDvDuration:
      title: DV_DURATION
      required:
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_DURATION
          type: string
      x-discriminator-value: DV_DURATION
    UMDvIdentifier:
      title: DV_IDENTIFIER
      required:
        - id
        - _type
      type: object
      properties:
        issuer:
          type: string
        assigner:
          type: string
        id:
          type: string
        type:
          type: string
        _type:
          enum:
            - DV_IDENTIFIER
          type: string
      x-discriminator-value: DV_IDENTIFIER
      example:
        id: 16b74749-e6aa-4945-b760-b42bdc07098a
        type: Patient
    UMDvOrdinal:
      title: DV_ORDINAL
      required:
        - symbol
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_ORDINAL
          type: string
        symbol:
          $ref: '#/components/schemas/DvCodedText'
        value:
          type: integer
      x-discriminator-value: DV_ORDINAL
    UMDvProportion:
      title: DV_PROPORTION
      required:
        - numerator
        - denominator
        - semantic_type
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_PROPORTION
          type: string
        numerator:
          type: number
        denominator:
          type: number
        semantic_type:
          type: integer
        precision:
          type: integer
      x-discriminator-value: DV_PROPORTION
    UMDvQuantity:
      title: DV_QUANTITY
      required:
        - magnitude
        - units
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_QUANTITY
          type: string
        magnitude:
          type: number
        precision:
          type: integer
        units:
          type: string
        units_system:
          type: string
        units_display_name:
          type: string
      x-discriminator-value: DV_QUANTITY
    UMDvScale:
      title: DV_SCALE
      required:
        - symbol
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_SCALE
          type: string
        symbol:
          $ref: '#/components/schemas/DvCodedText'
        value:
          type: number
      x-discriminator-value: DV_SCALE
    UMDvState:
      title: DV_STATE
      required:
        - value
        - is_terminal
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_STATE
          type: string
        value:
          $ref: '#/components/schemas/DvCodedText'
        is_terminal:
          type: boolean
      x-discriminator-value: DV_STATE
    UMDvTime:
      title: DV_TIME
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_TIME
          type: string
        value:
          type: string
          format: time
      x-discriminator-value: DV_TIME
      example:
        _type: DV_DATE
        value: '2017-08-15'
    UDataValue:
      title: DATA_VALUE
      oneOf:
        - $ref: '#/components/schemas/UMDvBoolean'
        - $ref: '#/components/schemas/UMDvCodedText'
        - $ref: '#/components/schemas/UMDvCount'
        - $ref: '#/components/schemas/UMDvDate'
        - $ref: '#/components/schemas/UMDvDateTime'
        - $ref: '#/components/schemas/UMDvDuration'
        - $ref: '#/components/schemas/UMDvEhrUri'
        - $ref: '#/components/schemas/UMDvIdentifier'
        - $ref: '#/components/schemas/UMDvMultimedia'
        - $ref: '#/components/schemas/UMDvOrdinal'
        - $ref: '#/components/schemas/UMDvParsable'
        - $ref: '#/components/schemas/UMDvProportion'
        - $ref: '#/components/schemas/UMDvQuantity'
        - $ref: '#/components/schemas/UMDvScale'
        - $ref: '#/components/schemas/UMDvState'
        - $ref: '#/components/schemas/UMDvText'
        - $ref: '#/components/schemas/UMDvUri'
      discriminator:
        propertyName: _type
        mapping:
          DV_BOOLEAN: '#/components/schemas/UMDvBoolean'
          DV_CODED_TEXT: '#/components/schemas/UMDvCodedText'
          DV_COUNT: '#/components/schemas/UMDvCount'
          DV_DATE: '#/components/schemas/UMDvDate'
          DV_DATE_TIME: '#/components/schemas/UMDvDateTime'
          DV_DURATION: '#/components/schemas/UMDvDuration'
          DV_EHR_URI: '#/components/schemas/UMDvEhrUri'
          DV_IDENTIFIER: '#/components/schemas/UMDvIdentifier'
          DV_MULTIMEDIA: '#/components/schemas/UMDvMultimedia'
          DV_ORDINAL: '#/components/schemas/UMDvOrdinal'
          DV_PARSABLE: '#/components/schemas/UMDvParsable'
          DV_PROPORTION: '#/components/schemas/UMDvProportion'
          DV_QUANTITY: '#/components/schemas/UMDvQuantity'
          DV_SCALE: '#/components/schemas/UMDvScale'
          DV_STATE: '#/components/schemas/UMDvState'
          DV_TEXT: '#/components/schemas/UMDvText'
          DV_TIME: '#/components/schemas/UMDvTime'
          DV_URI: '#/components/schemas/UMDvUri'
    Element:
      title: ELEMENT
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ELEMENT
        null_flavour:
          $ref: '#/components/schemas/DvCodedText'
        value:
          $ref: '#/components/schemas/UDataValue'
        null_reason:
          $ref: '#/components/schemas/UDvText'
      x-discriminator-value: ELEMENT
      required:
        - name
        - archetype_node_id
    ItemSingle:
      title: ITEM_SINGLE
      required:
        - name
        - archetype_node_id
        - item
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_SINGLE
        item:
          $ref: '#/components/schemas/Element'
      x-discriminator-value: ITEM_SINGLE
    ItemList:
      title: ITEM_LIST
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_LIST
        items:
          type: array
          items:
            $ref: '#/components/schemas/Element'
      x-discriminator-value: ITEM_LIST
      required:
        - name
        - archetype_node_id
    Clstr:
      title: CLUSTER
      required:
        - name
        - archetype_node_id
        - items
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: CLUSTER
        items:
          type: array
          items:
            $ref: '#/components/schemas/UItem'
      x-discriminator-value: CLUSTER
    UItem:
      title: ITEM
      oneOf:
        - $ref: '#/components/schemas/Element'
        - $ref: '#/components/schemas/Clstr'
      discriminator:
        propertyName: _type
        mapping:
          ELEMENT: '#/components/schemas/Element'
          CLUSTER: '#/components/schemas/Clstr'
    ItemTable:
      title: ITEM_TABLE
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_TABLE
        items:
          type: array
          items:
            $ref: '#/components/schemas/Clstr'
      x-discriminator-value: ITEM_TABLE
      required:
        - name
        - archetype_node_id
    ItemTree:
      title: ITEM_TREE
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_TREE
        items:
          type: array
          items:
            $ref: '#/components/schemas/UItem'
      x-discriminator-value: ITEM_TREE
      required:
        - name
        - archetype_node_id
    UItemStructure:
      title: ITEM_STRUCTURE
      oneOf:
        - $ref: '#/components/schemas/ItemSingle'
        - $ref: '#/components/schemas/ItemList'
        - $ref: '#/components/schemas/ItemTable'
        - $ref: '#/components/schemas/ItemTree'
      discriminator:
        propertyName: _type
        mapping:
          ITEM_SINGLE: '#/components/schemas/ItemSingle'
          ITEM_LIST: '#/components/schemas/ItemList'
          ITEM_TABLE: '#/components/schemas/ItemTable'
          ITEM_TREE: '#/components/schemas/ItemTree'
    FeederAuditDetails:
      title: FEEDER_AUDIT_DETAILS
      required:
        - system_id
      type: object
      properties:
        system_id:
          type: string
        location:
          $ref: '#/components/schemas/UPartyIdentified'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyIdentified'
        time:
          $ref: '#/components/schemas/DvDateTime'
        version_id:
          type: string
        other_details:
          $ref: '#/components/schemas/UItemStructure'
    FeederAudit:
      title: FEEDER_AUDIT
      required:
        - originating_system_audit
      type: object
      properties:
        originating_system_item_ids:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        feeder_system_item_ids:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        original_content:
          $ref: '#/components/schemas/UDvEncapsulated'
        originating_system_audit:
          $ref: '#/components/schemas/FeederAuditDetails'
        feeder_system_audit:
          $ref: '#/components/schemas/FeederAuditDetails'
    PartyIdentity:
      title: PARTY_IDENTITY
      required:
        - name
        - archetype_node_id
        - details
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        details:
          $ref: '#/components/schemas/UItemStructure'
    Address:
      title: ADDRESS
      required:
        - name
        - archetype_node_id
        - details
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        details:
          $ref: '#/components/schemas/UItemStructure'
    DvIntervalOfDate:
      title: DV_INTERVAL_of_DATE
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower_unbounded:
          type: boolean
        upper_unbounded:
          type: boolean
        lower_included:
          type: boolean
        upper_included:
          type: boolean
        lower:
          $ref: '#/components/schemas/UMDvDate'
        upper:
          $ref: '#/components/schemas/UMDvDate'
      x-discriminator-value: DV_INTERVAL_of_DATE
      required:
        - lower_unbounded
        - upper_unbounded
        - lower_included
        - upper_included
    Contact:
      title: CONTACT
      required:
        - name
        - archetype_node_id
        - addresses
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        time_validity:
          $ref: '#/components/schemas/DvIntervalOfDate'
    PartyRelationship:
      title: PARTY_RELATIONSHIP
      required:
        - name
        - archetype_node_id
        - source
        - target
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        source:
          $ref: '#/components/schemas/PartyRef'
        target:
          $ref: '#/components/schemas/PartyRef'
        details:
          $ref: '#/components/schemas/UItemStructure'
        time_validity:
          $ref: '#/components/schemas/DvIntervalOfDate'
    Party:
      title: PARTY
      required:
        - name
        - archetype_node_id
        - identities
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
    Capability:
      title: CAPABILITY
      required:
        - name
        - archetype_node_id
        - credentials
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        credentials:
          $ref: '#/components/schemas/UItemStructure'
        time_validity:
          $ref: '#/components/schemas/DvIntervalOfDate'
    Role:
      title: ROLE
      required:
        - name
        - archetype_node_id
        - identities
        - performer
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        _type:
          type: string
          default: ROLE
        time_validity:
          $ref: '#/components/schemas/DvIntervalOfDate'
        performer:
          $ref: '#/components/schemas/PartyRef'
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
      x-discriminator-value: ROLE
    UMRole:
      title: ROLE
      required:
        - name
        - archetype_node_id
        - identities
        - performer
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        _type:
          enum:
            - ROLE
          type: string
        time_validity:
          $ref: '#/components/schemas/DvIntervalOfDate'
        performer:
          $ref: '#/components/schemas/PartyRef'
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
      x-discriminator-value: ROLE
    Actor:
      title: ACTOR
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
      required:
        - name
        - archetype_node_id
        - identities
    Person:
      title: PERSON
      required:
        - name
        - archetype_node_id
        - identities
        - data
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          type: string
          default: PERSON
      x-discriminator-value: PERSON
    UMPerson:
      title: PERSON
      required:
        - name
        - archetype_node_id
        - identities
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          enum:
            - PERSON
          type: string
      x-discriminator-value: PERSON
    Agent:
      title: AGENT
      required:
        - name
        - archetype_node_id
        - identities
        - data
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          type: string
          default: AGENT
      x-discriminator-value: AGENT
    UMAgent:
      title: AGENT
      required:
        - name
        - archetype_node_id
        - identities
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          enum:
            - AGENT
          type: string
      x-discriminator-value: AGENT
    Group:
      title: GROUP
      required:
        - name
        - archetype_node_id
        - identities
        - data
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          type: string
          default: GROUP
      x-discriminator-value: GROUP
    UMGroup:
      title: GROUP
      required:
        - name
        - archetype_node_id
        - identities
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          enum:
            - GROUP
          type: string
      x-discriminator-value: GROUP
    Organisation:
      title: GROUP
      required:
        - name
        - archetype_node_id
        - identities
        - data
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          type: string
          default: GROUP
      x-discriminator-value: GROUP
    UMOrganisation:
      title: ORGANISATION
      required:
        - name
        - archetype_node_id
        - identities
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/PartyIdentity'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        details:
          $ref: '#/components/schemas/UItemStructure'
        relationships:
          type: array
          items:
            $ref: '#/components/schemas/PartyRelationship'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/PartyRef'
        _type:
          enum:
            - ORGANISATION
          type: string
      x-discriminator-value: ORGANISATION
    UParty:
      title: PARTY
      oneOf:
        - $ref: '#/components/schemas/UMRole'
        - $ref: '#/components/schemas/UMPerson'
        - $ref: '#/components/schemas/UMAgent'
        - $ref: '#/components/schemas/UMGroup'
        - $ref: '#/components/schemas/UMOrganisation'
      discriminator:
        propertyName: _type
        mapping:
          ROLE: '#/components/schemas/UMRole'
          PERSON: '#/components/schemas/UMPerson'
          AGENT: '#/components/schemas/UMAgent'
          GROUP: '#/components/schemas/UMGroup'
          ORGANISATION: '#/components/schemas/UMOrganisation'
    Error:
      title: Error
      required:
        - message
        - validationErrors
      type: object
      properties:
        message:
          type: string
        validationErrors:
          type: array
          items:
            type: string
          description: ''
      example:
        message: Error message
        validationErrors:
          - error1
          - error2
    ObjectRef:
      title: OBJECT_REF
      required:
        - namespace
        - type
        - id
      type: object
      properties:
        namespace:
          type: string
        type:
          type: string
        id:
          $ref: '#/components/schemas/UObjectId'
      example:
        id:
          _type: OBJECT_VERSION_ID
          value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
        namespace: local
        type: COMPOSITION
    VersionedParty:
      title: VERSIONED_PARTY
      type: object
      properties:
        _type:
          type: string
          default: VERSIONED_PARTY
        uid:
          $ref: '#/components/schemas/HierObjectId'
        owner_id:
          $ref: '#/components/schemas/ObjectRef'
        time_created:
          $ref: '#/components/schemas/DvDateTime'
      description: A VERSIONED_PARTY resource
      example:
        uid:
          value: 8849182c-82ad-4088-a07f-48ead4180515
        owner_id:
          id:
            _type: HIER_OBJECT_ID
            value: 7d44b88c-4199-4bad-97dc-d78268e01398
          namespace: local
          type: EHR
        time_created:
          value: '2015-01-20T19:30:22.765+01:00'
      x-discriminator-value: VERSIONED_PARTY
      required:
        - uid
        - owner_id
        - time_created
    AuditDetails:
      title: AUDIT_DETAILS
      required:
        - system_id
        - time_committed
        - change_type
        - committer
      type: object
      properties:
        _type:
          type: string
          default: AUDIT_DETAILS
        system_id:
          type: string
        time_committed:
          $ref: '#/components/schemas/DvDateTime'
        change_type:
          $ref: '#/components/schemas/DvCodedText'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
      description: The set of attributes required to document the committal of an information item to a repository.
      example:
        system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
        time_committed:
          value: '2017-08-15T10:37:15.422+02:00'
        change_type:
          value: creation
          defining_code:
            terminology_id:
              value: openehr
            code_string: '249'
        description:
          value: Description text
      x-discriminator-value: AUDIT_DETAILS
    RevisionHistoryItem:
      title: REVISION_HISTORY_ITEM
      required:
        - version_id
        - audits
      type: object
      properties:
        version_id:
          $ref: '#/components/schemas/ObjectVersionId'
        audits:
          type: array
          items:
            $ref: '#/components/schemas/AuditDetails'
      description: A REVISION_HISTORY_ITEM resource
      example:
        version_id:
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        audits:
          - system_id: d60e2348-b083-48ce-93b9-916cef1d3a5a
            time_committed:
              value: '2015-01-20T19:30:22.765+01:00'
            change_type:
              value: creation
              defining_code:
                terminology_id:
                  value: openehr
                code_string: '249'
            description:
              value: An optional description string
            committer:
              _type: PARTY_IDENTIFIED
              name: A user name
    RevisionHistory:
      title: REVISION_HISTORY
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RevisionHistoryItem'
      description: A REVISION_HISTORY resource
    DvIntervalOfDateTime:
      title: DV_INTERVAL_of_DATE_TIME
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower_unbounded:
          type: boolean
        upper_unbounded:
          type: boolean
        lower_included:
          type: boolean
        upper_included:
          type: boolean
        lower:
          $ref: '#/components/schemas/UMDvDateTime'
        upper:
          $ref: '#/components/schemas/UMDvDateTime'
      x-discriminator-value: DV_INTERVAL_of_DATE_TIME
      required:
        - lower_unbounded
        - upper_unbounded
        - lower_included
        - upper_included
    Participation:
      title: PARTICIPATION
      required:
        - function
        - performer
      type: object
      properties:
        function:
          $ref: '#/components/schemas/UDvText'
        mode:
          $ref: '#/components/schemas/DvCodedText'
        performer:
          $ref: '#/components/schemas/UPartyProxy'
        time:
          $ref: '#/components/schemas/DvIntervalOfDateTime'
    EventContext:
      title: EVENT_CONTEXT
      required:
        - start_time
        - setting
      type: object
      properties:
        start_time:
          $ref: '#/components/schemas/DvDateTime'
        end_time:
          $ref: '#/components/schemas/DvDateTime'
        location:
          type: string
        setting:
          $ref: '#/components/schemas/DvCodedText'
        other_context:
          $ref: '#/components/schemas/UItemStructure'
        health_care_facility:
          $ref: '#/components/schemas/UPartyIdentified'
        participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
      x-discriminator-value: EVENT_CONTEXT
    UMAdminEntry:
      title: ADMIN_ENTRY
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        _type:
          enum:
            - ADMIN_ENTRY
          type: string
        data:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: ADMIN_ENTRY
    Event:
      title: EVENT
      required:
        - name
        - archetype_node_id
        - time
        - data
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: EVENT
        time:
          $ref: '#/components/schemas/DvDateTime'
        state:
          $ref: '#/components/schemas/UItemStructure'
        data:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: EVENT
    History:
      title: HISTORY
      required:
        - name
        - archetype_node_id
        - origin
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: HISTORY
        origin:
          $ref: '#/components/schemas/DvDateTime'
        period:
          $ref: '#/components/schemas/DvDuration'
        duration:
          $ref: '#/components/schemas/DvDuration'
        summary:
          $ref: '#/components/schemas/UItemStructure'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      x-discriminator-value: HISTORY
    UMObservation:
      title: OBSERVATION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - OBSERVATION
          type: string
        data:
          $ref: '#/components/schemas/History'
        state:
          $ref: '#/components/schemas/History'
      x-discriminator-value: OBSERVATION
    UMEvaluation:
      title: EVALUATION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - EVALUATION
          type: string
        data:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: EVALUATION
    Activity:
      title: ACTIVITY
      required:
        - name
        - archetype_node_id
        - action_archetype_id
        - description
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ACTIVITY
        timing:
          $ref: '#/components/schemas/DvParsable'
        action_archetype_id:
          type: string
        description:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: ACTIVITY
    UMInstruction:
      title: INSTRUCTION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - narrative
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - INSTRUCTION
          type: string
        narrative:
          $ref: '#/components/schemas/UDvText'
        expiry_time:
          $ref: '#/components/schemas/DvDateTime'
        wf_definition:
          $ref: '#/components/schemas/DvParsable'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
      x-discriminator-value: INSTRUCTION
    IsmTransition:
      title: ISM_TRANSITION
      required:
        - current_state
      type: object
      properties:
        _type:
          type: string
          default: ISM_TRANSITION
        current_state:
          $ref: '#/components/schemas/DvCodedText'
        transition:
          $ref: '#/components/schemas/DvCodedText'
        careflow_step:
          $ref: '#/components/schemas/DvCodedText'
        reason:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
      x-discriminator-value: ISM_TRANSITION
    LocatableRef:
      title: LOCATABLE_REF
      required:
        - namespace
        - type
        - id
      type: object
      properties:
        namespace:
          type: string
        type:
          type: string
        id:
          $ref: '#/components/schemas/UUidBasedId'
        path:
          type: string
    InstructionDetails:
      title: INSTRUCTION_DETAILS
      required:
        - instruction_id
        - activity_id
      type: object
      properties:
        _type:
          type: string
          default: INSTRUCTION_DETAILS
        instruction_id:
          $ref: '#/components/schemas/LocatableRef'
        activity_id:
          type: string
        wf_details:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: INSTRUCTION_DETAILS
    UMAction:
      title: ACTION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - time
        - ism_transition
        - description
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - ACTION
          type: string
        time:
          $ref: '#/components/schemas/DvDateTime'
        ism_transition:
          $ref: '#/components/schemas/IsmTransition'
        instruction_details:
          $ref: '#/components/schemas/InstructionDetails'
        description:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: ACTION
    UContentItem:
      title: CONTENT_ITEM
      oneOf:
        - $ref: '#/components/schemas/UMAdminEntry'
        - $ref: '#/components/schemas/UMObservation'
        - $ref: '#/components/schemas/UMEvaluation'
        - $ref: '#/components/schemas/UMInstruction'
        - $ref: '#/components/schemas/UMAction'
      discriminator:
        propertyName: _type
        mapping:
          ADMIN_ENTRY: '#/components/schemas/UMAdminEntry'
          OBSERVATION: '#/components/schemas/UMObservation'
          EVALUATION: '#/components/schemas/UMEvaluation'
          INSTRUCTION: '#/components/schemas/UMInstruction'
          ACTION: '#/components/schemas/UMAction'
    Composition:
      title: COMPOSITION
      required:
        - name
        - archetype_node_id
        - language
        - territory
        - category
        - context
        - composer
        - content
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: COMPOSITION
        language:
          $ref: '#/components/schemas/CodePhrase'
        territory:
          $ref: '#/components/schemas/CodePhrase'
        category:
          $ref: '#/components/schemas/DvCodedText'
        context:
          $ref: '#/components/schemas/EventContext'
        composer:
          $ref: '#/components/schemas/UPartyProxy'
        content:
          type: array
          items:
            $ref: '#/components/schemas/UContentItem'
      description: A COMPOSITION resource
      example:
        archetype_node_id: openEHR-EHR-COMPOSITION.encounter.v1
        name:
          value: Vital Signs
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        archetype_details:
          archetype_id:
            value: openEHR-EHR-COMPOSITION.encounter.v1
          template_id:
            value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
          rm_version: 1.0.2
        language:
          terminology_id:
            value: ISO_639-1
          code_string: en
        territory:
          terminology_id:
            value: ISO_3166-1
          code_string: NL
        category:
          value: event
          defining_code:
            terminology_id:
              value: openehr
            code_string: '433'
        composer:
          _type: PARTY_IDENTIFIED
          external_ref:
            id:
              _type: GENERIC_ID
              value: 16b74749-e6aa-4945-b760-b42bdc07098a
              scheme: pid
            namespace: openEHRSys.example.com
            type: PERSON
          name: A name
        context:
          start_time:
            value: '2014-11-18T09:50:35.000+01:00'
          setting:
            value: other care
            defining_code:
              terminology_id:
                value: openehr
              code_string: '238'
        content: []
      x-discriminator-value: COMPOSITION
    EhrStatus:
      title: EHR_STATUS
      required:
        - name
        - archetype_node_id
        - subject
        - is_queryable
        - is_modifiable
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: EHR_STATUS
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        is_queryable:
          type: boolean
          default: true
        is_modifiable:
          type: boolean
          default: true
        other_details:
          $ref: '#/components/schemas/UItemStructure'
      description: An EHR_STATUS resource
      example:
        archetype_node_id: openEHR-EHR-EHR_STATUS.generic.v1
        name:
          value: EHR status
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        subject:
          _type: PARTY_SELF
        is_queryable: true
        is_modifiable: true
      x-discriminator-value: EHR_STATUS
    UVersionable:
      title: Versionable
      oneOf:
        - $ref: '#/components/schemas/Composition'
        - $ref: '#/components/schemas/EhrStatus'
      discriminator:
        propertyName: _type
        mapping:
          COMPOSITION: '#/components/schemas/Composition'
          EHR_STATUS: '#/components/schemas/EhrStatus'
    Attestation:
      title: ATTESTATION
      required:
        - system_id
        - time_committed
        - change_type
        - committer
        - reason
        - is_pending
      type: object
      properties:
        _type:
          type: string
          default: ATTESTATION
        system_id:
          type: string
        time_committed:
          $ref: '#/components/schemas/DvDateTime'
        change_type:
          $ref: '#/components/schemas/DvCodedText'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
        attested_view:
          $ref: '#/components/schemas/DvMultimedia'
        proof:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/DvEhrUri'
        reason:
          $ref: '#/components/schemas/UDvText'
        is_pending:
          type: boolean
      x-discriminator-value: ATTESTATION
      example:
        system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
        time_committed:
          value: '2017-08-15T10:37:15.422+02:00'
        change_type:
          value: creation
          defining_code:
            terminology_id:
              value: openehr
            code_string: '249'
        description:
          value: Description text
    OriginalVersion:
      title: ORIGINAL_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - uid
        - lifecycle_state
      type: object
      properties:
        _type:
          type: string
          default: ORIGINAL_VERSION
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/UVersionable'
        uid:
          $ref: '#/components/schemas/ObjectVersionId'
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        other_input_version_uids:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersionId'
        lifecycle_state:
          $ref: '#/components/schemas/DvCodedText'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
      x-discriminator-value: ORIGINAL_VERSION
    UMOriginalVersionOfParty:
      title: ORIGINAL_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - uid
        - lifecycle_state
        - _type
      type: object
      properties:
        _type:
          enum:
            - ORIGINAL_VERSION
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/UParty'
        uid:
          $ref: '#/components/schemas/ObjectVersionId'
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        other_input_version_uids:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersionId'
        lifecycle_state:
          $ref: '#/components/schemas/DvCodedText'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
      x-discriminator-value: ORIGINAL_VERSION
    UMImportedVersionOfParty:
      title: IMPORTED_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - item
        - _type
      type: object
      properties:
        _type:
          enum:
            - IMPORTED_VERSION
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/UParty'
        item:
          $ref: '#/components/schemas/UMOriginalVersionOfParty'
      x-discriminator-value: IMPORTED_VERSION
    UVersionOfParty:
      title: VERSION
      oneOf:
        - $ref: '#/components/schemas/UMOriginalVersionOfParty'
        - $ref: '#/components/schemas/UMImportedVersionOfParty'
      discriminator:
        propertyName: _type
        mapping:
          ORIGINAL_VERSION: '#/components/schemas/UMOriginalVersionOfParty'
          IMPORTED_VERSION: '#/components/schemas/UMImportedVersionOfParty'
    TerminologyCode:
      title: TERMINOLOGY_CODE
      required:
        - terminology_id
        - code_string
      type: object
      properties:
        terminology_id:
          type: string
        terminology_version:
          type: string
        code_string:
          type: string
        uri:
          type: string
          format: uri
      example:
        terminology_id: snomed_ct
        code_string: '308335008'
    UpdateAudit:
      title: UPDATE_AUDIT
      required:
        - change_type
        - committer
      type: object
      properties:
        _type:
          type: string
          default: UPDATE_AUDIT
        change_type:
          $ref: '#/components/schemas/TerminologyCode'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
      description: The set of attributes required to document the committal of an information item to a repository. Used by the server to create an AUDIT_DETAILS object.
      example:
        change_type:
          value: creation
          defining_code:
            terminology_id: openehr
            code_string: '249'
        description: Description text
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
      x-discriminator-value: UPDATE_AUDIT
    UpdateAttestation:
      title: UPDATE_ATTESTATION
      required:
        - change_type
        - committer
        - reason
        - is_pending
      type: object
      properties:
        _type:
          type: string
          default: UPDATE_ATTESTATION
        change_type:
          $ref: '#/components/schemas/TerminologyCode'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
        attested_view:
          $ref: '#/components/schemas/DvMultimedia'
        proof:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/DvEhrUri'
        reason:
          $ref: '#/components/schemas/UDvText'
        is_pending:
          type: boolean
      x-discriminator-value: UPDATE_ATTESTATION
      example:
        change_type:
          value: creation
          defining_code:
            terminology_id: openehr
            code_string: '249'
        description: Description text
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
    UpdateVersion:
      title: UPDATE_VERSION
      required:
        - lifecycle_state
        - data
        - commit_audit
      type: object
      properties:
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        signature:
          type: string
        lifecycle_state:
          $ref: '#/components/schemas/TerminologyCode'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAttestation'
        data:
          $ref: '#/components/schemas/UVersionable'
        commit_audit:
          $ref: '#/components/schemas/UpdateAudit'
    NewContribution:
      title: NewContribution
      required:
        - versions
        - audit
      type: object
      properties:
        uid:
          $ref: '#/components/schemas/HierObjectId'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/UpdateVersion'
        audit:
          $ref: '#/components/schemas/UpdateAudit'
      description: A new (un-committed) CONTRIBUTION resource
    Contribution:
      title: CONTRIBUTION
      required:
        - uid
        - versions
        - audit
      type: object
      properties:
        uid:
          $ref: '#/components/schemas/HierObjectId'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        audit:
          $ref: '#/components/schemas/AuditDetails'
      description: A CONTRIBUTION resource
      example:
        uid:
          value: 0826851c-c4c2-4d61-92b9-410fb8275ff0
        versions:
          - _type: OBJECT_REF
            id:
              _type: OBJECT_VERSION_ID
              value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
            namespace: local
            type: COMPOSITION
          - _type: OBJECT_REF
            id:
              _type: OBJECT_VERSION_ID
              value: abcdefgh-1323-42bc-b7f8-787f3660a0ba::openEHRSys.example.com::1
            namespace: local
            type: FOLDER
        audit:
          system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
          committer:
            _type: PARTY_IDENTIFIED
            name: A user name
          time_committed:
            value: '2017-08-15T10:37:15.422+02:00'
          change_type:
            value: creation
            defining_code:
              terminology_id:
                value: openehr
              code_string: '249'
          description:
            value: Description text
  parameters:
    Prefer:
      name: Prefer
      in: header
      description: |
        Request header to indicate the preference over response details.
        The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
      required: false
      style: simple
      schema:
        type: string
        enum:
          - return=representation
          - return=minimal
        default: return=minimal
    uid_based_id:
      name: uid_based_id
      in: path
      description: |
        An abstract identifier: it can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
      required: true
      style: simple
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    version_at_time:
      name: version_at_time
      in: query
      description: |
        A given time in the extended ISO 8601 format.
      style: form
      explode: true
      schema:
        type: string
        example: '2015-01-20T19:30:22.765+01:00'
    uid_based_id_as_versioned_object_uid:
      name: uid_based_id
      in: path
      description: |
        An identifier in a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
      required: true
      style: simple
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515
    If-Match:
      name: If-Match
      in: header
      description: |
        Header to make the request conditional. 
        Together with `ETag` request tag, it helps to prevent simultaneous updates of a resource from overwriting each other ("mid-air collisions").
        The format is always an `version_uid` identifier enclosed by double quotes.
        The operation will be performed only if the existing latest `version_uid` of the resource (i.e. the `preceding_version_uid`) matches this header's value.
      required: true
      style: simple
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
    uid_based_id_as_version_uid:
      name: uid_based_id
      in: path
      description: |
        An identifier in a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`).
      required: true
      style: simple
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    versioned_object_uid_PARTY:
      name: versioned_object_uid
      in: path
      description: |
        VERSIONED_PARTY identifier taken from VERSIONED_PARTY.uid.value.
      required: true
      style: simple
      schema:
        type: string
        example: 6cb19121-4307-4648-9da0-d62e4d51f19b
    version_uid:
      name: version_uid
      in: path
      description: |
        VERSION identifier taken from VERSION.uid.value.
      required: true
      style: simple
      schema:
        type: string
        example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
    ehr_id:
      name: ehr_id
      in: path
      description: |
        EHR identifier taken from EHR.ehr_id.value.
      required: true
      style: simple
      schema:
        type: string
        example: 7d44b88c-4199-4bad-97dc-d78268e01398
    contribution_uid:
      name: contribution_uid
      in: path
      description: |
        The CONTRIBUTION uid.
      required: true
      style: simple
      schema:
        type: string
        example: 0826851c-c4c2-4d61-92b9-410fb8275ff0
  headers:
    ETag:
      description: |
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a `version_uid` enclosed by double quotes) for a specific version of a resource.
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2"'
    Location_PARTY:
      description: |
        The `Location` response header indicates the URL of the PARTY resource.
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/demographic/party/6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
    ETag_VERSION:
      description: |
        The `ETag` (i.e. entity tag) response header is the VERSION identifier (i.e. the `version_uid`) enclosed by double quotes.
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2"'
    Location_VERSIONED_PARTY_VERSION:
      description: |
        The `Location` response header indicates the URL of the VERSION resource.
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/demographic/versioned_party/6cb19121-4307-4648-9da0-d62e4d51f19b/version/6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1
    ETag_CONTRIBUTION:
      description: |
        The `ETag` (i.e. entity tag) response header is the `contribution_uid` identifier, enclosed by double quotes.
      schema:
        type: string
        example: '"0826851c-c4c2-4d61-92b9-410fb8275ff0"'
    Location_CONTRIBUTION:
      description: |
        The `Location` response header indicates the URL of the CONTRIBUTION resource.
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/contribution/0826851c-c4c2-4d61-92b9-410fb8275ff0
  responses:
    '404':
      description: |
        `404 Not Found` is returned when either the URL configured doesn't exist at all, or the targeted resource doesn't exist.
    '409':
      description: |
        `409 Conflict` is returned when a resource with same identifier(s) already exists.
    201_PARTY:
      description: |
        `201 Created` is returned when the PARTY was created. 
        Content body is only returned when `Prefer` header has `return=representation`, otherwise only headers are returned.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_PARTY'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UParty'
    400_PARTY:
      description: |
        `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. the body of the request could not be read, or could not be converted to a valid PARTY object).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    422_PARTY:
      description: |
        `422 Unprocessable Entity` is returned when the content could be converted to a PARTY, but there are semantic validation errors, such as the underlying template is not known or is not validating the supplied PARTY.
    200_PARTY_retrieved:
      description: |
        `200 OK` is returned when the requested PARTY is successfully retrieved.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_PARTY'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UParty'
    204_because_deleted_at_time:
      description: |
        `204 No Content` is returned when the resource identified by the request parameters (at specified `version_at_time`) time has been deleted.
    404_not_found_or_no_version_at_time:
      description: |
        `404 Not Found` is returned when either the URL configured doesn't exist at all, or the targeted resource doesn't exist, or when a version of the resource does not exist at the specified `version_at_time`.
    200_PARTY_updated:
      description: |
        `200 OK` is returned when the UPDATE is successfully updated and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_PARTY'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UParty'
    412_PARTY:
      description: |
        `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
        Returns also latest `version_uid` in the `Location` and `ETag` headers.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_PARTY'
    204_PARTY_deleted:
      description: |
        `204 No Content` is returned when PARTY was deleted.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_PARTY'
    400_already_deleted:
      description: |
        `400 Bad Request` is returned when the request URL could not be parsed (i.e. invalid format of request parameters) or when the resource identified by the request parameters is already deleted.
    409_PARTY_with_uid_based_id:
      description: |
        `409 Conflict` is returned when supplied `uid_based_id` doesn't match the latest version.
        Returns also latest version in the `Location` and `ETag` headers.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_PARTY'
    200_VERSIONED_PARTY:
      description: |
        `200 OK` is returned when the requested VERSIONED_PARTY is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VersionedParty'
    200_REVISION_HISTORY:
      description: |
        `200 OK` is returned when the requested REVISION_HISTORY is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevisionHistory'
    200_VERSION_of_PARTY_at_time:
      description: |
        `200 OK` is returned when the requested VERSION is successfully retrieved.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_VERSION'
        Location:
          $ref: '#/components/headers/Location_VERSIONED_PARTY_VERSION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UVersionOfParty'
    200_VERSION_of_PARTY_by_id:
      description: |
        `200 OK` is returned when the requested VERSION is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UVersionOfParty'
    201_CONTRIBUTION:
      description: |
        `201 Created` is returned when the CONTRIBUTION was created. 
        Content body is only returned when `Prefer` header has `return=representation`, otherwise only headers are returned.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_CONTRIBUTION'
        Location:
          $ref: '#/components/headers/Location_CONTRIBUTION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contribution'
    400_CONTRIBUTION:
      description: |
        `400 Bad Request` is returned when the request URL or body could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request not be converted to a valid CONTRIBUTION object, or the modification type doesn’t match the operation - i.e. first version of a composition with MODIFICATION).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404_unknown_ehr_id:
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
    200_CONTRIBUTION:
      description: |
        `200 OK` is returned when the CONTRIBUTION is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contribution'
    404_CONTRIBUTION:
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a CONTRIBUTION with `contribution_uid` does not exist.
