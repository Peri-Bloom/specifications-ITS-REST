openapi: 3.0.3
info:
  title: APIs Overview
  version: latest
  x-status: STABLE
  x-spec: overview
  contact:
    name: Specifications Editorial Committee openEHR
    url: https://specifications.openehr.org/
    email: info@openehr.org
  license:
    name: Creative Commons Attribution-NoDerivs 3.0 Unported
    url: https://creativecommons.org/licenses/by-nd/3.0/
  description: |+
    <table>
        <colgroup>
            <col style="width: 20%;">
            <col style="width: 80%;">
        </colgroup>
        <thead>
        <tr>
            <th colspan="2">© 2018 - 2023 The openEHR Foundation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td colspan="2">
                The <a href="https://www.openEHR.org" target="_blank" rel="noopener">openEHR Foundation</a> is an independent, non-profit foundation, facilitating the sharing of health records by consumers and clinicians via open specifications, clinical models and open platform implementations.
            </td>
        </tr>
        <tr>
            <td><strong>Licence</strong></td>
            <td><span class="image"><img src="https://specifications.openehr.org/images/cc-by-nd-88x31.png" alt="image"></span> Creative Commons Attribution-NoDerivs 3.0 Unported.
                <a href="https://creativecommons.org/licenses/by-nd/3.0/" class="bare">https://creativecommons.org/licenses/by-nd/3.0/</a>
            </td>
        </tr>
        <tr>
            <td><strong>Support</strong></td>
            <td>Issues: <a href="https://specifications.openehr.org/components/ITS/open_issues" target="_blank" rel="noopener">Problem Reports</a><br>
                Web: <a href="https://specifications.openehr.org" target="_blank" rel="noopener">specifications.openEHR.org</a>
            </td>
        </tr>
        </tbody>
    </table>

    ### Amendment Record

    <table>
        <colgroup>
            <col style="width: 9%;">
            <col style="width: 55%;">
            <col style="width: 18%;">
            <col style="width: 18%;">
        </colgroup>
        <thead>
        <tr>
            <th>Issue</th>
            <th>Details</th>
            <th>Raiser, Implementer</th>
            <th>Completed</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/latest" target="_blank" rel="noopener">Release-1.0.3</a></th>
        </tr>
        <tr>
            <td>4.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-66" target="_blank" rel="noopener">SPECITS-66</a>:
                Migrate REST API specs to OpenAPI Specification</td>
            <td>S Iancu</td>
            <td>19 Dec 2022</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.2" target="_blank" rel="noopener">Release-1.0.2</a></th>
        </tr>
        <tr>
            <td>3.4</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-59" target="_blank" rel="noopener">SPECITS-59</a>:
                Specify mimeType used by adl2 template</td>
            <td>S Iancu</td>
            <td>26 Mar 2021</td>
        </tr>
        <tr>
            <td>3.3</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-41" target="_blank" rel="noopener">SPECITS-41</a>:
                Add double quotes to ETag and If-Match headers</td>
            <td>S Iancu</td>
            <td>21 Mar 2021</td>
        </tr>
        <tr>
            <td>3.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-56" target="_blank" rel="noopener">SPECITS-56</a>:
                Fixing typos, formatting and minor documentary errors</td>
            <td>S Iancu</td>
            <td>15 Mar 2021</td>
        </tr>
        <tr>
            <td>3.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-45" target="_blank" rel="noopener">SPECITS-45</a>:
                Describe more clearly the datetime format for REST API</td>
            <td>P Pazos, S Iancu</td>
            <td>15 Mar 2021</td>
        </tr>
        <tr>
            <td>3.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-57" target="_blank" rel="noopener">SPECITS-57</a>:
                Updating info about simplified JSON formats</td>
            <td>E Sundvall, S Iancu</td>
            <td>13 Mar 2021</td>
        </tr>
        <tr>
            <td>3.0</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-49" target="_blank" rel="noopener">SPECITS-49</a>:
                Describing Resource Identification; add clarification over getting COMPOSITIONs by with `version_uid` vs `versioned_object_uid`</td>
            <td>J Smolka, M Polajnar, S Iancu</td>
            <td>08 Mar 2021</td>
        </tr>
        <tr>
            <th colspan="43"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.1" target="_blank" rel="noopener">Release-1.0.1</a></th>
        </tr>
        <tr>
            <td>2.4</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-33" target="_blank" rel="noopener">SPECITS-33</a>: Add reference to Simplified Data Template (SDT) format specification</td>
            <td>I McNicoll, T Beale, S Iancu</td>
            <td>17 Oct 2019</td>
        </tr>
        <tr>
            <td>2.3</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-32" target="_blank" rel="noopener">SPECITS-32</a>: Fix typos and minor documentary errors</td>
            <td>J Smolka, P Pazos, T Beale, S Iancu</td>
            <td>19 Jul 2019</td>
        </tr>
        <tr>
            <td>2.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-24" target="_blank" rel="noopener">SPECITS-24</a>: Added changelog</td>
            <td>J Smolka, S Iancu</td>
            <td>12 May 2019</td>
        </tr>
        <tr>
            <td></td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-25" target="_blank" rel="noopener">SPECITS-25</a>,
                <a href="https://specifications.openehr.org/tickets/SPECITS-29" target="_blank" rel="noopener">SPECITS-29</a>: Change layout and structure</td>
            <td>J Smolka, S Iancu</td>
            <td>12 May 2019</td>
        </tr>
        <tr>
            <td>2.1</td>
            <td>Update links to new openEHR specifications website</td>
            <td>S Iancu</td>
            <td>16 Dec 2018</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.0" target="_blank" rel="noopener">Release-1.0.0</a></th>
        </tr>
        </tbody>
    </table>


    # Intro


    ## Acknowledgements

    ### Editor
    - Sebastian Iancu, Architect, Code24, Netherlands

    ### Contributors
    This specification benefited from wide formal and informal input from the openEHR and wider health informatics community. The openEHR Foundation would like to recognise the following people for their contributions.
    - Birger Haarbrandt, MSc, Peter L. Reichertz Institut for Medical Informatics (PLRI), Germany
    - Bjørn Næss, DIPS, Norway
    - Bostjan Lah, Senior Architect, Better, Slovenia
    - Erik Sundvall, Information Architect at Karolinska University Hospital, Sweden
    - Heath Frankel, Ocean Informatics, Australia
    - Ian McNicoll MD, FreshEHR, UK
    - Jake Smolka, Software Engineer, Better, Slovenia
    - Matija Polajnar, PhD, Software Engineer, Better, Slovenia
    - Pablo Pazos Gutierrez, Senior engineer, CaboLabs, Uruguay
    - Rong Chen MD, PhD, Cambio Healthcare Systems, Sweden
    - Sebastian Iancu, Architect, Code24, Netherlands
    - Seref Arikan, MEcon, Ocean Informatics UK, Centre for Health Informatics and Multi-professional Education (CHIME) UK
    - Thomas Beale, Ars Semantica UK, openEHR Foundation Management Board

    ### Trademarks
    - 'openEHR' is a trademark of the [openEHR Foundation](https://www.openEHR.org)
    - 'OpenAPI' is a trademark of the [The Linux Foundation](https://www.linuxfoundation.org)


    ## Preface

    ### Purpose

    This specification describes service endpoints, resources and operations as well as details of requests and responses that interacts with an openEHR API in a RESTful manner.

    ### Related Documents

    Prerequisite documents for reading this document include:

    - The [openEHR Architecture Overview](https://specifications.openehr.org/releases/BASE/latest/architecture_overview.html)

    Related documents include:

    - The [openEHR Global Class Index](https://specifications.openehr.org/classes)
    - The [XML-Schemas (XSD)](https://specifications.openehr.org/releases/ITS-XML/latest)
    - The [JSON-Schemas](https://specifications.openehr.org/releases/ITS-JSON/latest) and [Simplified Data Template (SDT)](simplified_data_template.html)
    - The [openEHR Platform Abstract Service Model](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html)

    ### Status

    This specification is in the `STABLE` state, and can be downloaded as [OpenAPI specification](https://spec.openapis.org/oas/v3.0.3) file (in YAML format) [for validation](computable/OAS/overview-validation.openapi.yaml), or [for code generators](computable/OAS/overview-codegen.openapi.yaml).
    Users are encouraged to comment on and/or advise on these paragraphs as well as the main content.

    The development version of this document can be found at <https://specifications.openehr.org/releases/ITS-REST/latest/overview.html>.

    ### Feedback

    Feedback may be provided on the [Implementation Technology Specifications forum](https://discourse.openehr.org/c/specifications/its/41).

    Issues may be raised on the [specifications Problem Report tracker](https://openehr.atlassian.net/browse/SPECPR).

    To see changes made due to previously reported issues, see the [ITS component Change Request tracker](https://specifications.openehr.org/components/ITS/history).

    ### Conformance

    tbd.

    ### Requirements

    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL"
    in this document are to be interpreted as described in [BCP 14](https://tools.ietf.org/html/bcp14) [[RFC 2119](https://tools.ietf.org/html/rfc2119)],
    [[RFC 8174](https://tools.ietf.org/html/rfc8174)] when, and only when, they appear in all capitals, as shown here.

servers:
  - url: https://{baseUrl}/v1
    description: An example openEHR server URL.
    variables:
      baseUrl:
        default: openEHRSys.example.com
        description: The (example) server base URL prefix providing openEHR services. This may contain server name, port and base path prefix.
security: []
tags:
  - name: Glossary_and_conventions
    x-displayName: Glossary and conventions
    description: |
      [comment]: # (title: Glossary and conventions)

      Throughout this specification, a set of short terms is being used as described below:

      | <div style="width:180px">Term</div> | Description                                                                                                                                                                                                                                        |
      |-------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
      | API                                 | Application Programmer Interface                                                                                                                                                                                                                   |
      | REST                                | [Representational state transfer](https://en.wikipedia.org/wiki/Representational_state_transfer), a type of Web service that allows clients to access and manipulate textual representations of Web resources.                                     |
      | OAS                                 | An acronym for [OpenAPI Specification](https://spec.openapis.org/oas/v3.0.3)                                                                                                                                                                       |
      | AQL                                 | openEHR's [Archetype Query Language](https://specifications.openehr.org/releases/QUERY/latest/AQL.html)                                                                                                                                            |
      | RM                                  | openEHR's [Reference Model](https://specifications.openehr.org/releases/RM/latest)                                                                                                                                                                 |
      | SEMVER                              | [Semantic Versioning 2.0.0](https://semver.org/)                                                                                                                                                                                                   |
      | `UUID`                              | A universally unique identifier as described by [RFC 4122](https://tools.ietf.org/html/rfc4122) (e.g. 8849182c-82ad-4088-a07f-48ead4180515)                                                                                                        |
      | `ehr_id`                            | The value for an EHR identifier, stored under EHR.ehr_id.value, in a form of a HIER_OBJECT_ID, usually an `UUID` or a `GUID` (e.g. 7d44b88c-4199-4bad-97dc-d78268e01398)                                                                           |
      | `versioned_object_uid`              | The value of a VERSIONED_OBJECT unique identifier, stored under VERSIONED_OBJECT.uid.value, in a form of a HIER_OBJECT_ID (e.g. 8849182c-82ad-4088-a07f-48ead4180515)                                                                              |
      | `version_uid`                       | The value of a VERSION unique identifier, stored under VERSION.uid.value, in a form of an OBJECT_VERSION_ID (e.g. 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2)                                                                 |
      | `uid_based_id`                      | An abstract identifier: it can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`). |
      | `preceding_version_uid`             | The value of a previous VERSION unique identifier, used usually for PUT or DELETE methods (e.g. 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1)                                                                                   |
      | `version_at_time`                   | Time specifier used to retrieve the VERSION at a given time; the value is in the extended ISO 8601 format (e.g. 2015-01-20T19:30:22.765+01:00)                                                                                                     |
      <br>

      ### OpenAPI Specification files

      This openEHR REST specifications can be downloaded as YAML files in [OpenAPI Specification 3.0](https://spec.openapis.org/oas/v3.0.3) format.

      For each API there are two flavours provided: 
      - a file optimized for code generators, with the file name having the `-codegen.openapi.yaml` suffix; this file can be used with tools like [OpenAPI Generator](https://github.com/openapitools/openapi-generator), or [Swagger codegen](https://github.com/swagger-api/swagger-codegen),
      - a file optimized for data validation, with the file name having the `-validation.openapi.yaml` suffix; this file can be used by (mock-)servers or applications to validate openEHR request and response payloads.

      The main difference between these files (aside of schema model names) is that the codegen flavour is defining and using inheritance in model schemas, with the use of `allOf` property and discriminators, whereas the validation variant is flattening all these requirements (each model contains all RM-inherited properties), and is using `oneOf` property to define union-types. See [Polymorphism](https://spec.openapis.org/oas/v3.0.3#composition-and-inheritance-polymorphism) specification. 

      The latest OpenAPI Specification files are available in GitHub at [openEHR/specifications-ITS-REST/computable/OAS](https://github.com/openEHR/specifications-ITS-REST/tree/master/computable/OAS).
  - name: Requests_and_responses
    x-displayName: Requests and responses
    description: |
      [comment]: # (title: Requests and Responses)

      The following describes in details how HTTP [headers](#tag/Requests_and_responses/HTTP-headers) and [status codes](#tag/Requests_and_responses/HTTP-status-codes)
      MUST be used by an openEHR REST API implementation in order to achieve good interaction between services and clients in the spirit of this specification.

      Furthermore, general details about resources, [data representation](#tag/Resources/Data-representation) and content negotiation are described in this specification.

      > NOTE: **JSON** format is used in many of the example below, but this does not imply that **XML** might not be supported by the same service endpoint.


      # HTTP Methods

      HTTP Methods are described by [RFC 7231](https://tools.ietf.org/html/rfc7231#section-4)
      and by [IANA HTTP Method Registry](https://www.iana.org/assignments/http-methods/http-methods.xhtml).
      The following subset is being used in this specification:

      | Method  | Description                                                                              |
      | ------- | ---------------------------------------------------------------------------------------- |
      | GET     | Transfer a current representation of the target resource.                                |
      | HEAD    | Check existence of target resource and return the status, but does not transfer content. |
      | POST    | Perform resource-specific processing on the request payload.                             |
      | PUT     | Replace all current representations of the target resource with the request payload.     |
      | DELETE  | Remove all current representations of the target resource.                               |
      | OPTIONS | Describe the communication options for the target resource.                              |


      # Authentication and authorization

      Services SHOULD implement and support an HTTP Authentication and Authorization framework
      (which can support various schemes) but there is no assumption or recommendation being made
      in this specification about which authentication scheme should be used by services and clients.
      See [RFC 7235](https://tools.ietf.org/html/rfc7235) or [Mozilla's HTTP Authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)
      for details on this subject.

      If an Authentication and Authorisation framework is present, services MUST properly use `WWW-Authenticate` and/or
      `Proxy-Authenticate` response headers and return HTTP status code `403 Forbidden` or `401 Unauthorized` or
      `407 Proxy Authentication` whenever applicable, and clients MUST properly use `Authorization` and `Proxy-Authorization`
      in their request headers.


      # HTTP headers

      Standard HTTP Request and Response headers are described by [RFC 7231](https://tools.ietf.org/html/rfc7231)
      and by the [IANA Message Headers](http://www.iana.org/assignments/message-headers/message-headers.xhtml).
      The following describes the use of a subset of these headers, as well as the custom headers used by an openEHR API.

      ## openEHR-VERSION and openEHR-AUDIT_DETAILS

      When it comes to committing content to an openEHR system, for all change-controlled resources (e.g. COMPOSITION, EHR_STATUS, FOLDER, etc.) the services are
      [performing versioning](https://specifications.openehr.org/releases/RM/latest/common.html#\_change_control_package) under the hood.
      The 'native' way of committing is to use a [CONTRIBUTION](https://specifications.openehr.org/releases/RM/latest/common.html#\_contributions)
      and wrap the content as a [VERSION](https://specifications.openehr.org/releases/RM/latest/common.html#\_version_class).
      To keep things simpler and consistent, services MUST also allow `PUT`, `POST` and `DELETE` methods directly on these change-controlled resources.
      However, these operations MUST internally be executed using the 'native' way.

      In order to allow clients to provide committal metadata, services MUST accept `openEHR-VERSION` and `openEHR-AUDIT_DETAILS` custom request headers.
      For clients, it is RECOMMENDED to provision these headers based on [authentication and authorization](#tag/Requests_and_responses/Authentication-and-authorization) runtime data.
      Below is a complex example of these request headers used in a `PUT` action to update a COMPOSITION:

      ```http
      openEHR-VERSION.lifecycle_state: code_string="532"
      openEHR-AUDIT_DETAILS.change_type: code_string="251"
      openEHR-AUDIT_DETAILS.description: value="An updated composition contribution description"
      openEHR-AUDIT_DETAILS.committer: name="John Doe", external_ref.id="BC8132EA-8F4A-11E7-BB31-BE2E44B06B34", external_ref.namespace="demographic", external_ref.type="PERSON"
      ```

      None of these headers are mandatory, but whatever is provided it MUST be merged with the default VERSION and VERSION.audit_details attributes on commit runtime.

      Below a list of `code_string` values and their meaning (taken from [openEHR terminology](https://raw.githubusercontent.com/openEHR/terminology/Release-2.0.0/openEHR_RM/en/openehr_terminology.xml)):

      | header                            | code | value / meaning |
      | --------------------------------- | ---- | --------------- |
      | openEHR-VERSION.lifecycle_state   | 532  | complete        |
      | openEHR-VERSION.lifecycle_state   | 553  | incomplete      |
      | openEHR-VERSION.lifecycle_state   | 523  | deleted         |
      | openEHR-AUDIT_DETAILS.change_type | 249  | creation        |
      | openEHR-AUDIT_DETAILS.change_type | 250  | amendment       |
      | openEHR-AUDIT_DETAILS.change_type | 251  | modification    |
      | openEHR-AUDIT_DETAILS.change_type | 252  | synthesis       |
      | openEHR-AUDIT_DETAILS.change_type | 523  | deleted         |
      | openEHR-AUDIT_DETAILS.change_type | 666  | attestation     |
      | openEHR-AUDIT_DETAILS.change_type | 253  | unknown         |

      ## If-Match and accidental overwrites

      The `If-Match` request header SHOULD be used by the clients to prevent accidental overwrites when multiple user
      agents might be acting in parallel on the same resource. This is only required by a small set of versioned resources of this specification.
      In case a service receives this header, and the condition evaluates to `false`, it MUST NOT perform the requested method and instead MUST respond with
      HTTP status code `412 Precondition Failed`, and SHOULD return also latest `version_uid` in the `Location` and `ETag` response headers.

      Example:
      ```http
      If-Match: "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"
      ```

      See also details for `If-Match` described by [RFC 7232](https://tools.ietf.org/html/rfc7232#section-3.1).

      ## openEHR-TEMPLATE_ID

      The `openEHR-TEMPLATE_ID` request header MUST be used whenever committing COMPOSITION (via `PUT` or `POST` methods)
      using a [simplified data format](#header-alternative-data-formats) which does not support TEMPLATE_ID value
      under an equivalent `LOCATABLE.archetype_details.template_id` attribute of contained data.

      ## Location and openEHR-uri

      The `Location` response header indicates the resource location (URL).
      According to [RFC 7231](https://tools.ietf.org/html/rfc7231#section-7.1.2), it is used to refer to a specific resource in relation to the response.
      The type of relationship is defined by the combination of request method and status code semantics.
      The identifiers part of this URI-reference SHOULD comply with [resource identification](#tag/Resources/Resource-identification) semantics of this specification.

      Services MUST return this header whenever a create or update operation was performed, but it MAY
      return this header on other operation or action. Example:

      ```http
      Location: https://openEHRSys.example.com/v1/ehr/347a5490-55ee-4da9-b91a-9bba710f730e/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2
      ```

      See [representation details negotiation](#tag/Requests_and_responses/Representation-details-negotiation) section
      for more details on how use this header.

      If services have support to generate resource URL as specified by the DV_URI/DV_EHR_URI format, then they MAY send also `openEHR-uri` response header. Example:

      ```http
      openEHR-uri: ehr:/347a5490-55ee-4da9-b91a-9bba710f730e/compositions/87284370-2D4B-4e3d-A3F3-F303D2F4F34B
      ```

      ## Prefer

      The `Prefer` request header MAY be used by clients for resource representation negotiation.
      See more details on [representation details negotiation](#tag/Requests_and_responses/Representation-details-negotiation) section.

      ## ETag and Last-Modified

      These headers are mainly related to whether or not a returned resource may be cacheable.
      Their purpose is to give clients information about the state of the requested resources.

      According to [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3),

      > The "ETag" header field in a response provides the current entity-tag
      for the selected representation, as determined at the conclusion of
      handling the request.  An entity-tag is an opaque validator for
      differentiating between multiple representations of the same
      resource, regardless of whether those multiple representations are
      due to resource state changes over time, content negotiation
      resulting in multiple representations being valid at the same time,
      or both.

      The `ETag` response HTTP header contains a string token that the server associates with a resource in order to
      uniquely identify the state of that resource over its lifetime. The value of the token changes as soon as the resource changes.
      An example of such header value format is:

      ```http
      ETag: "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"
      ```

      Servers MAY choose their own format for this header, but the recommended value is the unique identifier of the requested resource
      (e.g. VERSIONED_OBJECT.uid.value, VERSION.uid.value, EHR.ehr_id.value, etc).

      The `Last-Modified` response HTTP header contains the datetime of the last modification of targeted resource
      which should be taken from VERSION.commit_audit.time_committed.value.
      An example of such header value format is:

      ```http
      Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
      ```

      These two headers SHOULD be present in all responses targeting VERSION, VERSIONED_OBJECT or other resources
      that have similar unique identifier.


      # HTTP status codes 

      HTTP Status codes are described by [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6)
      and by the [IANA Status Code Registry](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml).
      The following subset of the is being used in this specification:

      | Code | Reason-Phrase          | Meaning, usecase and details                                                                                                                                               |
      | ---- | ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
      | 200  | OK                     | The request succeeded, payload sent in a 200 response depends on the request method                                                                                        |
      | 201  | Created                | The request has been fulfilled and has resulted in one or more new resources being created                                                                                 |
      | 204  | No content             | The request has been fulfilled and there is no additional content to send in the response payload body                                                                     |
      | 400  | Bad request            | The service cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, syntactically invalid content) |
      | 401  | Unauthorized           | If the service requires authorization, this indicates that the request has not been applied because it lacks valid authentication credentials for the target resource      |
      | 403  | Forbidden              | The service understood the request but refuses to authorize it                                                                                                             |
      | 404  | Not found              | The origin service did not find the target resource or is not willing to disclose that one exists                                                                          |
      | 405  | Method Not Allowed     | The method received in the request-line is known by the origin service but not supported by the target resource                                                            |
      | 406  | Not Acceptable         | The target resource does not have a current representation that would be acceptable to the user                                                                            |
      | 408  | Request Timeout        | Request maximum execution time is reached, therefore the server aborted the request                                                                                        |
      | 409  | Conflict               | Indicates that the request could not be processed because it might generate a duplicate or a conflict                                                                      |
      | 412  | Precondition Failed    | One or more conditions given in the request header fields evaluated to false when tested on the server                                                                     |
      | 415  | Unsupported Media Type | The service is refusing the request because the payload is in a format not supported by this method on the target resource                                                 |
      | 422  | Unprocessable Entity   | The request was well-formed but was unable to be followed due to semantic errors                                                                                           |
      | 500  | Internal Server Error  | The service encountered an unexpected condition that prevented it from fulfilling the request                                                                              |
      | 501  | Not Implemented        | The service does not support the functionality required to fulfill the request                                                                                             |

      To indicate the status of the request, or the executed operation, one of the HTTP status codes MUST be used, as described [above](#header-glossary-and-conventions).
      Meaning of these codes may be further detailed (nuanced) in this specification by particular responses.
      If required, other status codes MAY be used by implementations as long as their usecase is not conflicting or overlapping with above codes.

      Status code `400` indicates a bad request or generic client-side error, used when no other `4xx` error code is appropriate.
      The client SHOULD NOT repeat the request without modifications.

      In case of errors (HTTP status codes `400`-`500`), the services MAY return more details (if `Prefer: return=representation` request header is present).
      Example:

      > some codes/messages <https://github.com/ppazos/cabolabs-ehrserver/wiki/API-error-codes-and-messages> and
      > <http://veratechnas1.synology.me:13606/InstanceValidator/rules.html>

      ```json
      {
          "message": "Error message",
          "code": 90000,
          "errors": [
              {
                  "_type": "DV_CODED_TEXT",
                  "value": "Error message",
                  "defining_code": {
                      "terminology_id": {
                          "value": "local"
                      },
                      "code_string": "9000"
                  }
              },
              {
                  "_type": "DV_CODED_TEXT",
                  "value": "Secondary error message",
                  "defining_code": {
                      "terminology_id": {
                          "value": "local"
                      },
                      "code_string": "8000"
                  }
              }
          ]
      }
      ```

      # Representation details negotiation

      When using the `POST` and `PUT` HTTP methods to create or update a resource, the service SHOULD give clients the option of returning either a complete
      representation of the (modified) resource, or a minimal or no content in the payload response (assuming the operation was successfully completed).
      See [RFC 7240](https://tools.ietf.org/html/rfc7240#section-4.2) for more details on how achieve this using `Prefer` header.
      The client MAY choose any of the following:

      - send `Prefer: return=minimal` to inform the service that prefers only a minimal response to a successful request.

      A `Location` header indicating the direct URL to access the resource MUST be part of the service response.
      If there is no payload content to be returned, the service SHOULD use HTTP status code `204 No Content`.

      - send `Prefer: return=representation` to inform the service that prefers a full representation response to a successful request.

      A `Location` header indicating the direct URL to access the resource MAY be part of the service response,
      and the payload content SHOULD include a full representation.

      In case no `Prefer` header is present in request, the default response policy is `return=minimal`.

      Another preference is related to following and resolving OBJECT_REF identifiers. Under some circumstances a client
      MAY indicate that prefers response containing full or partial resource representation instead of references to resources using OBJECT_REF.
      A typical case is a list of COMPOSITIONs part of an EHR, which, strictly following RM specification, should always return
      list of OBJECT_REF, but sometimes clients prefers to get COMPOSITIONs.
      Services that have this capability implemented SHOULD accept and honor `Prefer: resolve_refs` request header.

      ```http
      Prefer: return=representation, resolve_refs
      ```
  - name: Resources
    description: |
      [comment]: # (title: Resources)

      For the openEHR API, a Resource is an instance object of a specific openEHR class (type) that can be identified, addressed, handled or managed by the service.
      The following are examples of openEHR resources and their types:

      - top-level content structure types, such as COMPOSITION, EHR_STATUS, FOLDER, PARTY, etc.
      - version containers, such as VERSIONED_COMPOSITION, VERSIONED_EHR_STATUS, etc. or their containing VERSION
      - other non-versioned resources, such as EHR, CONTRIBUTION, RESULT_SET, etc.
      - definitions, such as TEMPLATE, ARCHETYPE, QUERY

      Types defined by openEHR specification are always capitalized when used in this specification.
      For a list of all available types or a particular type definition please refer to the [class index](https://specifications.openehr.org/classes).

      # Resource identification

      An important aspect of a RESTful service is to be able to address resources via URIs/URLs using HTTP verbs (methods).
      Each resource has an identifier which is unique within the system for that resource type, usually consisting of at least a globally unique identifier and sometimes associated also with a version identifier.
      Once the resource is persisted by the service, the identifier is assigned and will never change for that resource instance.

      Depending on the resource type and on the use-cases, there are several identifier types (and formats):

      - a `versioned_object_uid` for identifying a VERSIONED_OBJECT (i.e. a version container), stored under VERSIONED_OBJECT.uid.value, in a form of a HIER_OBJECT_ID,
      - a `version_uid` for identifying a VERSION from the version container, stored under VERSION.uid.value, in a form of an OBJECT_VERSION_ID,
      - an `ehr_id` to identify an EHR,
      - a `template_id` to identify a Template definition.
      - a `qualified_query_name` to identify Query definition.

      The `version_uid` is the unique identifier of a VERSION, in the lexical form of `object_id :: creating_system_id :: version_tree_id`,
      where the `object_id` has the same value as the containing VERSIONED_OBJECT identifier taken from VERSIONED_OBJECT.uid.value (i.e. the `versioned_object_uid`).

      As examples of identifiers, the following request:

      ```http
      GET https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      ```

      is using an URI that contains an EHR identifier `7d44b88c-4199-4bad-97dc-d78268e01398`, taken from EHR.ehr_id.value,
      and a COMPOSITION identifier `8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1`, taken from COMPOSITION.uid.value,
      serviced by an openEHR API (of version `v1`), located at `https://openEHRSys.example.com`.

      There are circumstances when resources can be uniquely identified by two different identifiers. For example, assuming that a VERSIONED_COMPOSITION container has the _versioned_object_uid_ identifier `8849182c-82ad-4088-a07f-48ead4180515`, and the latest version is `5` (taken from _version_tree_id_), then that COMPOSITION can be identified either by following explicit URI:

      ```http
      https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com:5
      ```

      using the _version_uid_ identifier, as well as by the following implicit URI:

      ```http
      https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515
      ```

      However, the latter will only reference the same resource as the former as long as there are no more changes or modifications on that specific version container (i.e. the latest version remains `5`).

      - **NOTE:** Since [RM Release 1.0.4](https://specifications.openehr.org/releases/RM/Release-1.0.4) it is strongly recommended that the inherited attribute `uid` be populated in COMPOSITIONs, using the UID copied from the object_id() of the `uid` field of the enclosing VERSION object.
        For example, the ORIGINAL_VERSION.uid `87284370-2D4B-4e3d-A3F3-F303D2F4F34B::uk.nhs.ehr1::2` would be copied to the `uid` field of the COMPOSITION.
        See [Levels of identification](https://specifications.openehr.org/releases/BASE/latest/architecture_overview.html#\_levels_of_identification) chapter of Architecture Overview for more details.

      # Data representation

      Services MUST support at least one of the openEHR **XML** or **JSON** formats for resource representation.
      Alternative formats MAY be also supported, such as a **Simplified Data Template (SDT)** format.
      These formats and their associated negotiation protocol is described below.

      ## XML Format

      When resources representation is serialized as XML, the request payload as well as the result MUST be valid against [published XSDs](https://specifications.openehr.org/releases/ITS-XML/latest).

      A client MAY use the header `Content-Type: application/xml` in the requests to specify the XML payload format.
      If the service cannot process the request payload as XML format is not supported, it MUST respond with HTTP status code `415 Unsupported Media Type`.

      The client SHOULD use the `Accept: application/xml` request header in order to specify the expected XML response format.
      If the service cannot fulfill this aspect of the request, it MUST respond with HTTP status code `406 Not Acceptable`.
      Proper header `Content-Type: application/xml` MUST be present in the response of the service
      unless the response has no content body (HTTP status code `204`).

      ## JSON Format

      When resources representation is serialized as JSON, the request payload as well as the result SHOULD be valid against [published JSON-Schemas](https://specifications.openehr.org/releases/ITS-JSON/latest).

      > Note: The JSON-Schema project is under development.

      Attribute names must be lowercase _snake_case_ names as specified in the equivalent RM type. For example:

      ```json
      {
          "category": {
              "value": "event",
              "defining_code": {
                  "terminology_id": {
                      "value": "openehr"
                  },
                  "code_string": "433"
              }
          }
      }
      ```

      Metadata attributes (those that are not also RM attributes) will always be prefixed by a `'_'`.

      One example is the `_type` attribute, which should be used to specify the RM type whenever polymorphism
      is involved, or when the underlying definition in RM type is abstract
      (dynamic type is different from the static type).
      This follows same rule as for XML typing.
      The value of this attribute MUST be the uppercase class name from the RM specification. For example:

      ```json
      {
          "_type": "DV_TEXT",
          "value": "Hello world!"
      }
      ```

      The RM attributes (even required ones) that are `Null`, empty list or empty arrays SHOULD be absent when serialized as JSON.

      The order of attributes in the resource MAY follow the order of attributes in the RM specification of the type of the resource, but this is not mandatory.

      A client MAY use the header `Content-Type: application/json` in the requests to specify the JSON payload format.
      If the service cannot process the request payload as JSON format is not supported, it MUST respond with HTTP status code `415 Unsupported Media Type`.

      The client SHOULD use the `Accept: application/json` request header in order to specify the expected JSON response format.
      If the service cannot fulfill this aspect of the request, it MUST respond with HTTP status code `406 Not Acceptable`.
      Proper header `Content-Type: application/json` MUST be present in the response of the service
      unless the response has no content body (HTTP status code `204`).

      ## Alternative data formats

      Creating data instances according to canonical XML or JSON format is not always straightforward,
      particularly for developers with minimal exposure to openEHR, and various alternatives
      have been used in the past to simplify the job of content creation and committal for application developers.

      There is an initiative exploring and documenting these alternative formats, which specifications can be consulted at
      [Simplified Data Template (SDT)](simplified_data_template.html) page.

      > Note: The specification of Simplified Data Template is under development.

      In order to use these formats, content negotiation SHOULD be done in the same manner as for the canonical XML or JSON format above,
      but instead of `application/xml` or `application/json`, clients and servers MUST use:

      - `application/openehr.wt.flat+json` for the simplified IM Simplified Data Template (simSDT) as JSON,

      based on the 'FLAT' version of the ['web template' format](https://www.ehrscape.com/reference.html), originally created by Marand for the Better platform.
      More information can be found also in their ['examples'](https://www.ehrscape.com/examples.html) page, as well as in their [open-source implementation](https://github.com/better-care/web-template)
      and [conformance tests](https://github.com/better-care/web-template-tests).

      ```
      EHRbase also has support for this format, and provides information in their [documentation](https://ehrbase.readthedocs.io/en/latest/02_getting_started/05_load_data/index.html#flat-format). 
      ```

      - `application/openehr.wt.structured+json` for the structured IM Simplified Data Template (structSDT) as JSON,

      based on the 'STRUCTURED' version of the ['web template' format](https://www.ehrscape.com/reference.html) originally created by Marand for the Better platform
      (see also their ['examples'](https://www.ehrscape.com/examples.html)).

      - `text/plain` for all textual ADL2 templates or AQL queries,
      - `application/openehr.nc.flat+json` for near-canonical RM Simplified Data Template (ncSDT) as JSON, based on the

      [ECISFLAT format](https://github.com/ethercis/ethercis/blob/master/doc/flat%20json.md), originally devised for the EtherCIS project,

      - `application/openehr.tds2+xml` for TDS simplification of RM as XML,

      based on the 'TDS/TDD' format originally created by [Ocean Health Systems](http://oceanhealthsystems.com/)
      (see [this wiki page](https://openehr.atlassian.net/wiki/spaces/spec/pages/30408770/Template+Data+Schema+TDS+Specification+and+associated+Template+Data+Document+TDD)
      and the [TDD2canonical](https://github.com/openEHR/openEHR-TDD2canonical) project).

      > Note: Other alternative formats may be added in the future, depending on innovative impact, simplicity, popular demand or adoption rate.

      Current alternative formats might not be supported once they become obsolete or superseded by newer formats.

      A client MAY use the header `Content-Type` in the requests to specify the simplified payload format.
      If the service cannot process the request payload as the simplified format is not supported, it MUST respond with HTTP status code `415 Unsupported Media Type`.

      The client SHOULD use the `Accept` request header in order to specify the expected simplified response format.
      If the service cannot fulfill this aspect of the request, it MUST respond with HTTP status code `406 Not Acceptable`.
      Proper header `Content-Type` MUST be present in the response of the service
      unless the response has no content body (HTTP status code `204`).

      ## Datetime format

      The format of the date, time and datetime types should comply with the [ISO 8601 Date and Time](https://en.wikipedia.org/wiki/ISO\_8601) format specification.
      The ISO 8601 semantics assumed by openEHR is defined in the classes of the [base.foundation_types.time package](https://specifications.openehr.org/releases/BASE/latest/foundation_types.html#\_time_types).
      It is strongly recommended using the _extended_ format for dates, times and datetimes.
      This greatly aids human readability, and reduces the need for special date/time parsing and formatting.

      HTTP query parameters and path segments that are dates, datetimes, or times, MUST always use the _extended_ ISO 8601 format.
      The general form of a datetime is `YYYY-MM-DDThh:mm:ss.sss[Z|±hh:mm]`, e.g. `2016-06-23T13:42:16.117+02:00`.\
      Timezone SHOULD be only supplied when needed, otherwise the local timezone is assumed.

      Any date, datetime or time value provided as part of the HTTP message body, when creating or updating a resource (e.g. a DV_DATE_TIME value inside the COMPOSITION content),
      will be preserved as it was sent by the client, and passed to the underlying backend engine as is.
      Retrieval or querying those resources SHOULD return date, datetime, or time values in the (original) format provided by underlying backend engine, avoiding any format change.


      # EHR resources

      ## EHR
      <SchemaDefinition schemaRef="#/components/schemas/Ehr" />

      ## EHR_STATUS
      <SchemaDefinition schemaRef="#/components/schemas/EhrStatus" />

      ### VERSIONED_EHR_STATUS
      <SchemaDefinition schemaRef="#/components/schemas/VersionedEhrStatus" />

      ### a VERSION of VERSIONED_EHR_STATUS
      <SchemaDefinition schemaRef="#/components/schemas/UVersionOfEhrStatus" />

      ## COMPOSITION
      <SchemaDefinition schemaRef="#/components/schemas/Composition" />

      ### CONTENT_ITEM
      <SchemaDefinition schemaRef="#/components/schemas/UContentItem" />

      ### VERSIONED_COMPOSITION
      <SchemaDefinition schemaRef="#/components/schemas/VersionedComposition" />

      ### a VERSION of VERSIONED_COMPOSITION
      <SchemaDefinition schemaRef="#/components/schemas/UVersionOfComposition" />

      ## FOLDER
      <SchemaDefinition schemaRef="#/components/schemas/Folder" />


      # Structures

      ## ITEM_STRUCTURE
      The following types are formally specified in the Reference Model as the [Item Structure Package](https://specifications.openehr.org/releases/RM/latest/data_structures.html#_item_structure_package).
      <SchemaDefinition schemaRef="#/components/schemas/UItemStructure" />


      # QUERY resources
  - name: Options
    description: Retrieving system options and conformance information.
paths:
  /:
    options:
      operationId: options
      summary: System Options and Conformance
      description: |
        The `OPTIONS` HTTP method allows a client to determine the options and/or requirements associated with a resource, service or with the system, without implying a resource action.
        Services SHOULD respond to this method with at least appropriate HTTP codes, headers and potentially with a payload revealing more details about themselves.

        Another use-case for this method is related to exposing service capabilities for a conformance manifest.
      tags:
        - Options
      responses:
        '200':
          $ref: '#/components/responses/200_options'
components:
  schemas:
    UAbstractItemStructure:
      title: ITEM_STRUCTURE
      type: object
    UAbstractContentItem:
      title: CONTENT_ITEM
      type: object
    Ehr:
      title: EHR
      type: object
      properties:
        system_id:
          $ref: '#/components/schemas/HierObjectId'
        ehr_id:
          $ref: '#/components/schemas/HierObjectId'
        ehr_status:
          $ref: '#/components/schemas/ObjectRef'
        ehr_access:
          $ref: '#/components/schemas/ObjectRef'
        time_created:
          $ref: '#/components/schemas/DvDateTime'
      description: An EHR resource
      example:
        system_id:
          value: 9624982A-9F42-41A5-9318-AE13D5F5031F
        ehr_id:
          value: 7d44b88c-4199-4bad-97dc-d78268e01398
        ehr_status:
          id:
            _type: OBJECT_VERSION_ID
            value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
          namespace: local
          type: EHR_STATUS
        ehr_access:
          id:
            _type: OBJECT_VERSION_ID
            value: 59a8d0ac-140e-4feb-b2d6-af99f8e68af8::openEHRSys.example.com::1
          namespace: local
          type: EHR_ACCESS
        time_created:
          value: '2015-01-20T19:30:22.765+01:00'
    EhrStatus:
      title: EHR_STATUS
      required:
        - name
        - archetype_node_id
        - subject
        - is_queryable
        - is_modifiable
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: EHR_STATUS
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        is_queryable:
          type: boolean
          default: true
        is_modifiable:
          type: boolean
          default: true
        other_details:
          $ref: '#/components/schemas/UItemStructure'
      description: An EHR_STATUS resource
      example:
        archetype_node_id: openEHR-EHR-EHR_STATUS.generic.v1
        name:
          value: EHR status
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        subject:
          _type: PARTY_SELF
        is_queryable: true
        is_modifiable: true
      x-discriminator-value: EHR_STATUS
    VersionedEhrStatus:
      title: VERSIONED_EHR_STATUS
      type: object
      properties:
        _type:
          type: string
          default: VERSIONED_EHR_STATUS
        uid:
          $ref: '#/components/schemas/HierObjectId'
        owner_id:
          $ref: '#/components/schemas/ObjectRef'
        time_created:
          $ref: '#/components/schemas/DvDateTime'
      description: A VERSIONED_EHR_STATUS resource
      example:
        uid:
          value: 6cb19121-4307-4648-9da0-d62e4d51f19b
        owner_id:
          id:
            _type: HIER_OBJECT_ID
            value: 7d44b88c-4199-4bad-97dc-d78268e01398
          namespace: local
          type: EHR
        time_created:
          value: '2015-01-20T19:30:22.765+01:00'
      x-discriminator-value: VERSIONED_EHR_STATUS
      required:
        - uid
        - owner_id
        - time_created
    UVersionOfEhrStatus:
      title: VERSION
      oneOf:
        - $ref: '#/components/schemas/UMOriginalVersionOfEhrStatus'
        - $ref: '#/components/schemas/UMImportedVersionOfEhrStatus'
      discriminator:
        propertyName: _type
        mapping:
          ORIGINAL_VERSION: '#/components/schemas/UMOriginalVersionOfEhrStatus'
          IMPORTED_VERSION: '#/components/schemas/UMImportedVersionOfEhrStatus'
    Composition:
      title: COMPOSITION
      required:
        - name
        - archetype_node_id
        - language
        - territory
        - category
        - context
        - composer
        - content
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: COMPOSITION
        language:
          $ref: '#/components/schemas/CodePhrase'
        territory:
          $ref: '#/components/schemas/CodePhrase'
        category:
          $ref: '#/components/schemas/DvCodedText'
        context:
          $ref: '#/components/schemas/EventContext'
        composer:
          $ref: '#/components/schemas/UPartyProxy'
        content:
          type: array
          items:
            $ref: '#/components/schemas/UContentItem'
      description: A COMPOSITION resource
      example:
        archetype_node_id: openEHR-EHR-COMPOSITION.encounter.v1
        name:
          value: Vital Signs
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        archetype_details:
          archetype_id:
            value: openEHR-EHR-COMPOSITION.encounter.v1
          template_id:
            value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
          rm_version: 1.0.2
        language:
          terminology_id:
            value: ISO_639-1
          code_string: en
        territory:
          terminology_id:
            value: ISO_3166-1
          code_string: NL
        category:
          value: event
          defining_code:
            terminology_id:
              value: openehr
            code_string: '433'
        composer:
          _type: PARTY_IDENTIFIED
          external_ref:
            id:
              _type: GENERIC_ID
              value: 16b74749-e6aa-4945-b760-b42bdc07098a
              scheme: pid
            namespace: openEHRSys.example.com
            type: PERSON
          name: A name
        context:
          start_time:
            value: '2014-11-18T09:50:35.000+01:00'
          setting:
            value: other care
            defining_code:
              terminology_id:
                value: openehr
              code_string: '238'
        content: []
      x-discriminator-value: COMPOSITION
    VersionedComposition:
      title: VERSIONED_COMPOSITION
      type: object
      properties:
        _type:
          type: string
          default: VERSIONED_COMPOSITION
        uid:
          $ref: '#/components/schemas/HierObjectId'
        owner_id:
          $ref: '#/components/schemas/ObjectRef'
        time_created:
          $ref: '#/components/schemas/DvDateTime'
      description: A VERSIONED_COMPOSITION resource
      example:
        uid:
          value: 8849182c-82ad-4088-a07f-48ead4180515
        owner_id:
          id:
            _type: HIER_OBJECT_ID
            value: 7d44b88c-4199-4bad-97dc-d78268e01398
          namespace: local
          type: EHR
        time_created:
          value: '2015-01-20T19:30:22.765+01:00'
      x-discriminator-value: VERSIONED_COMPOSITION
      required:
        - uid
        - owner_id
        - time_created
    UVersionOfComposition:
      title: VERSION
      oneOf:
        - $ref: '#/components/schemas/UMOriginalVersionOfComposition'
        - $ref: '#/components/schemas/UMImportedVersionOfComposition'
      discriminator:
        propertyName: _type
        mapping:
          ORIGINAL_VERSION: '#/components/schemas/UMOriginalVersionOfComposition'
          IMPORTED_VERSION: '#/components/schemas/UMImportedVersionOfComposition'
    Folder:
      title: FOLDER
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: FOLDER
        items:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
        details:
          $ref: '#/components/schemas/UItemStructure'
      description: A FOLDER resource
      example:
        archetype_node_id: openEHR-EHR-FOLDER.directory.v1
        name:
          value: Directory
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        items: []
        folders: []
      x-discriminator-value: FOLDER
      required:
        - name
        - archetype_node_id
    Contribution:
      title: CONTRIBUTION
      required:
        - uid
        - versions
        - audit
      type: object
      properties:
        uid:
          $ref: '#/components/schemas/HierObjectId'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        audit:
          $ref: '#/components/schemas/AuditDetails'
      description: A CONTRIBUTION resource
      example:
        uid:
          value: 0826851c-c4c2-4d61-92b9-410fb8275ff0
        versions:
          - _type: OBJECT_REF
            id:
              _type: OBJECT_VERSION_ID
              value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
            namespace: local
            type: COMPOSITION
          - _type: OBJECT_REF
            id:
              _type: OBJECT_VERSION_ID
              value: abcdefgh-1323-42bc-b7f8-787f3660a0ba::openEHRSys.example.com::1
            namespace: local
            type: FOLDER
        audit:
          system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
          committer:
            _type: PARTY_IDENTIFIED
            name: A user name
          time_committed:
            value: '2017-08-15T10:37:15.422+02:00'
          change_type:
            value: creation
            defining_code:
              terminology_id:
                value: openehr
              code_string: '249'
          description:
            value: Description text
    NewContribution:
      title: NewContribution
      required:
        - versions
        - audit
      type: object
      properties:
        uid:
          $ref: '#/components/schemas/HierObjectId'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/UpdateVersion'
        audit:
          $ref: '#/components/schemas/UpdateAudit'
      description: A new (un-committed) CONTRIBUTION resource
    Options:
      title: Options
      type: object
      properties:
        solution:
          type: string
        solution_version:
          type: string
        vendor:
          type: string
        restapi_specs_version:
          type: string
        conformance_profile:
          type: string
        endpoints:
          type: array
          items:
            type: string
      example:
        solution: openEHRSys
        solution_version: v0.9
        vendor: My-openEHR
        restapi_specs_version: v1.0.3
        conformance_profile: STANDARD
        endpoints:
          - /ehr
          - /definition
          - /query
    HierObjectId:
      title: HIER_OBJECT_ID
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: UID_BASED_ID
        value:
          type: string
          format: uuid
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b
      x-discriminator-value: HIER_OBJECT_ID
    ArchetypeId:
      title: ARCHETYPE_ID
      type: object
      properties:
        _type:
          type: string
          default: ARCHETYPE_ID
        value:
          type: string
      x-discriminator-value: ARCHETYPE_ID
      required:
        - value
    UMArchetypeId:
      title: ARCHETYPE_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - ARCHETYPE_ID
          type: string
        value:
          type: string
      x-discriminator-value: ARCHETYPE_ID
    TemplateId:
      title: TEMPLATE_ID
      type: object
      properties:
        _type:
          type: string
          default: TEMPLATE_ID
        value:
          type: string
      x-discriminator-value: TEMPLATE_ID
      required:
        - value
    UMTemplateId:
      title: TEMPLATE_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - TEMPLATE_ID
          type: string
        value:
          type: string
      x-discriminator-value: TEMPLATE_ID
    TerminologyId:
      title: TERMINOLOGY_ID
      type: object
      properties:
        _type:
          type: string
          default: TERMINOLOGY_ID
        value:
          type: string
      x-discriminator-value: TERMINOLOGY_ID
      required:
        - value
    UMTerminologyId:
      title: TERMINOLOGY_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - TERMINOLOGY_ID
          type: string
        value:
          type: string
      x-discriminator-value: TERMINOLOGY_ID
    UMGenericId:
      title: GENERIC_ID
      required:
        - value
        - scheme
        - _type
      type: object
      properties:
        _type:
          enum:
            - GENERIC_ID
          type: string
        value:
          type: string
        scheme:
          type: string
      example:
        _type: GENERIC_ID
        value: c7ec861c-c413-39ff-9965-a198ebf44747
        scheme: pid
      x-discriminator-value: GENERIC_ID
    UMHierObjectId:
      title: HIER_OBJECT_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - HIER_OBJECT_ID
          type: string
        value:
          type: string
          format: uuid
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b
      example:
        _type: HIER_OBJECT_ID
        value: 6cb19121-4307-4648-9da0-d62e4d51f19b
      x-discriminator-value: HIER_OBJECT_ID
    ObjectVersionId:
      title: OBJECT_VERSION_ID
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: UID_BASED_ID
        value:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      x-discriminator-value: OBJECT_VERSION_ID
    UMObjectVersionId:
      title: OBJECT_VERSION_ID
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - OBJECT_VERSION_ID
          type: string
        value:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      example:
        _type: OBJECT_VERSION_ID
        value: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      x-discriminator-value: OBJECT_VERSION_ID
    UObjectId:
      title: OBJECT_ID
      oneOf:
        - $ref: '#/components/schemas/UMArchetypeId'
        - $ref: '#/components/schemas/UMTemplateId'
        - $ref: '#/components/schemas/UMTerminologyId'
        - $ref: '#/components/schemas/UMGenericId'
        - $ref: '#/components/schemas/UMHierObjectId'
        - $ref: '#/components/schemas/UMObjectVersionId'
      discriminator:
        propertyName: _type
        mapping:
          ARCHETYPE_ID: '#/components/schemas/UMArchetypeId'
          TEMPLATE_ID: '#/components/schemas/UMTemplateId'
          TERMINOLOGY_ID: '#/components/schemas/UMTerminologyId'
          GENERIC_ID: '#/components/schemas/UMGenericId'
          HIER_OBJECT_ID: '#/components/schemas/UMHierObjectId'
          OBJECT_VERSION_ID: '#/components/schemas/UMObjectVersionId'
    ObjectRef:
      title: OBJECT_REF
      required:
        - namespace
        - type
        - id
      type: object
      properties:
        namespace:
          type: string
        type:
          type: string
        id:
          $ref: '#/components/schemas/UObjectId'
      example:
        id:
          _type: OBJECT_VERSION_ID
          value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
        namespace: local
        type: COMPOSITION
    CodePhrase:
      title: CODE_PHRASE
      required:
        - terminology_id
        - code_string
      type: object
      properties:
        terminology_id:
          $ref: '#/components/schemas/TerminologyId'
        code_string:
          type: string
        preferred_term:
          type: string
      example:
        terminology_id:
          value: local
        code_string: at0001
    DvInterval:
      title: DV_INTERVAL
      required:
        - lower_unbounded
        - upper_unbounded
        - lower_included
        - upper_included
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower_unbounded:
          type: boolean
        upper_unbounded:
          type: boolean
        lower_included:
          type: boolean
        upper_included:
          type: boolean
      x-discriminator-value: DV_INTERVAL
    UMDvUri:
      title: DV_URI
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_URI
          type: string
        value:
          type: string
      x-discriminator-value: DV_URI
    DvEhrUri:
      title: DV_EHR_URI
      type: object
      properties:
        _type:
          type: string
          default: DV_EHR_URI
        value:
          type: string
      example:
        _type: DV_EHR_URI
        value: ehr://system_id/ehr_id/top_level_structure_locator/path_inside_top_level_structure
      x-discriminator-value: DV_EHR_URI
      required:
        - value
    UMDvEhrUri:
      title: DV_EHR_URI
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_EHR_URI
          type: string
        value:
          type: string
      x-discriminator-value: DV_EHR_URI
      example:
        _type: DV_EHR_URI
        value: ehr://system_id/ehr_id/top_level_structure_locator/path_inside_top_level_structure
    UDvUri:
      title: DV_URI
      oneOf:
        - $ref: '#/components/schemas/UMDvUri'
        - $ref: '#/components/schemas/UMDvEhrUri'
      discriminator:
        propertyName: _type
        mapping:
          DV_URI: '#/components/schemas/UMDvUri'
          DV_EHR_URI: '#/components/schemas/UMDvEhrUri'
      example:
        _type: DV_URI
        value: https://www.example.com
    DvCodedText:
      title: DV_CODED_TEXT
      required:
        - value
        - defining_code
      type: object
      properties:
        _type:
          type: string
          default: DV_CODED_TEXT
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/UDvUri'
        formatting:
          type: string
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TermMapping'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        defining_code:
          $ref: '#/components/schemas/CodePhrase'
      example:
        value: Coded text value
        defining_code:
          terminology_id:
            value: local
          code_string: at0001
      x-discriminator-value: DV_CODED_TEXT
    TermMapping:
      title: TERM_MAPPING
      required:
        - match
        - target
      type: object
      properties:
        match:
          pattern: /^[><=?]$/
          type: string
        purpose:
          $ref: '#/components/schemas/DvCodedText'
        target:
          $ref: '#/components/schemas/CodePhrase'
    UMDvText:
      title: DV_TEXT
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_TEXT
          type: string
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/UDvUri'
        formatting:
          type: string
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TermMapping'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
      x-discriminator-value: DV_TEXT
    UMDvCodedText:
      title: DV_CODED_TEXT
      required:
        - value
        - defining_code
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_CODED_TEXT
          type: string
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/UDvUri'
        formatting:
          type: string
        mappings:
          type: array
          items:
            $ref: '#/components/schemas/TermMapping'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        defining_code:
          $ref: '#/components/schemas/CodePhrase'
      x-discriminator-value: DV_CODED_TEXT
      example:
        value: Coded text value
        defining_code:
          terminology_id:
            value: local
          code_string: at0001
    UDvText:
      title: DV_TEXT
      oneOf:
        - $ref: '#/components/schemas/UMDvText'
        - $ref: '#/components/schemas/UMDvCodedText'
      discriminator:
        propertyName: _type
        mapping:
          DV_TEXT: '#/components/schemas/UMDvText'
          DV_CODED_TEXT: '#/components/schemas/UMDvCodedText'
      example:
        _type: DV_TEXT
        value: Text value
    ReferenceRange:
      title: REFERENCE_RANGE
      required:
        - meaning
        - range
      type: object
      properties:
        meaning:
          $ref: '#/components/schemas/UDvText'
        range:
          $ref: '#/components/schemas/DvInterval'
    DvDuration:
      title: DV_DURATION
      type: object
      properties:
        _type:
          type: string
          default: DV_DURATION
      x-discriminator-value: DV_DURATION
    DvDateTime:
      title: DV_DATE_TIME
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: DV_DATE_TIME
        value:
          type: string
          format: date-time
      example:
        _type: DV_DATE_TIME
        value: '2017-08-15T10:37:15.422+02:00'
      x-discriminator-value: DV_DATE_TIME
    UUidBasedId:
      title: UID_BASED_ID
      oneOf:
        - $ref: '#/components/schemas/UMHierObjectId'
        - $ref: '#/components/schemas/UMObjectVersionId'
      discriminator:
        propertyName: _type
        mapping:
          HIER_OBJECT_ID: '#/components/schemas/UMHierObjectId'
          OBJECT_VERSION_ID: '#/components/schemas/UMObjectVersionId'
    Link:
      title: LINK
      required:
        - meaning
        - type
        - target
      type: object
      properties:
        meaning:
          $ref: '#/components/schemas/UDvText'
        type:
          $ref: '#/components/schemas/UDvText'
        target:
          $ref: '#/components/schemas/DvEhrUri'
    Archetyped:
      title: ARCHETYPED
      required:
        - archetype_id
        - rm_version
      type: object
      properties:
        archetype_id:
          $ref: '#/components/schemas/ArchetypeId'
        template_id:
          $ref: '#/components/schemas/TemplateId'
        rm_version:
          type: string
      example:
        archetype_id:
          value: openEHR-EHR-COMPOSITION.encounter.v1
        template_id:
          value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
        rm_version: 1.0.2
      additionalProperties: false
    DvIdentifier:
      title: DV_IDENTIFIER
      required:
        - id
      type: object
      properties:
        issuer:
          type: string
        assigner:
          type: string
        id:
          type: string
        type:
          type: string
      description: |
        Type for representing identifiers of real-world entities. Typical identifiers include drivers licence number, social security number, veterans affairs number, prescription id, order id, and so on.

        DV_IDENTIFIER is used to represent any identifier of a real thing, issued by some authority or agency.
      example:
        id: 16b74749-e6aa-4945-b760-b42bdc07098a
        type: Patient
      x-discriminator-value: DV_IDENTIFIER
    DvMultimedia:
      title: DV_MULTIMEDIA
      required:
        - _type
        - media_type
        - size
      type: object
      properties:
        _type:
          type: string
          default: DV_MULTIMEDIA
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        alternate_text:
          type: string
        uri:
          $ref: '#/components/schemas/UDvUri'
        data:
          type: string
        media_type:
          $ref: '#/components/schemas/CodePhrase'
        compression_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        integrity_check:
          type: string
        integrity_check_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        thumbnail:
          $ref: '#/components/schemas/DvMultimedia'
        size:
          type: integer
      x-discriminator-value: DV_MULTIMEDIA
    UMDvMultimedia:
      title: DV_MULTIMEDIA
      required:
        - _type
        - media_type
        - size
      type: object
      properties:
        _type:
          enum:
            - DV_MULTIMEDIA
          type: string
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        alternate_text:
          type: string
        uri:
          $ref: '#/components/schemas/UDvUri'
        data:
          type: string
        media_type:
          $ref: '#/components/schemas/CodePhrase'
        compression_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        integrity_check:
          type: string
        integrity_check_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        thumbnail:
          $ref: '#/components/schemas/DvMultimedia'
        size:
          type: integer
      x-discriminator-value: DV_MULTIMEDIA
    DvParsable:
      title: DV_PARSABLE
      required:
        - _type
        - value
        - formalism
      type: object
      properties:
        _type:
          type: string
          default: DV_PARSABLE
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        value:
          type: string
        formalism:
          type: string
      x-discriminator-value: DV_PARSABLE
    UMDvParsable:
      title: DV_PARSABLE
      required:
        - _type
        - value
        - formalism
      type: object
      properties:
        _type:
          enum:
            - DV_PARSABLE
          type: string
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
        value:
          type: string
        formalism:
          type: string
      x-discriminator-value: DV_PARSABLE
    UDvEncapsulated:
      title: DV_ENCAPSULATED
      oneOf:
        - $ref: '#/components/schemas/UMDvMultimedia'
        - $ref: '#/components/schemas/UMDvParsable'
      discriminator:
        propertyName: _type
        mapping:
          DV_MULTIMEDIA: '#/components/schemas/UMDvMultimedia'
          DV_PARSABLE: '#/components/schemas/UMDvParsable'
    PartyRef:
      title: PARTY_REF
      required:
        - namespace
        - type
        - id
      type: object
      properties:
        namespace:
          type: string
        type:
          pattern: ^PERSON|ORGANISATION|GROUP|AGENT|ROLE|PARTY|ACTOR$
          type: string
        id:
          $ref: '#/components/schemas/UObjectId'
      description: Identifier for parties in a demographic or identity service.
      example:
        id:
          _type: OBJECT_VERSION_ID
          value: b52b9408-7048-4ec8-94bd-831fb0727e67::openEHRSys.example.com::1
        namespace: local
        type: PERSON
    UMPartyIdentified:
      title: PARTY_IDENTIFIED
      required:
        - _type
      type: object
      properties:
        _type:
          enum:
            - PARTY_IDENTIFIED
          type: string
        external_ref:
          $ref: '#/components/schemas/PartyRef'
        name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
      x-discriminator-value: PARTY_IDENTIFIED
      example:
        _type: PARTY_IDENTIFIED
        external_ref:
          id:
            _type: GENERIC_ID
            value: 16b74749-e6aa-4945-b760-b42bdc07098a
            scheme: pid
          namespace: openEHRSys.example.com
          type: PERSON
        name: A name
    UMPartyRelated:
      title: PARTY_RELATED
      required:
        - _type
        - relationship
      type: object
      properties:
        _type:
          enum:
            - PARTY_RELATED
          type: string
        external_ref:
          $ref: '#/components/schemas/PartyRef'
        name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        relationship:
          $ref: '#/components/schemas/DvCodedText'
      x-discriminator-value: PARTY_RELATED
      example:
        _type: PARTY_IDENTIFIED
        external_ref:
          id:
            _type: GENERIC_ID
            value: 16b74749-e6aa-4945-b760-b42bdc07098a
            scheme: pid
          namespace: openEHRSys.example.com
          type: PERSON
        name: A name
    UPartyIdentified:
      title: PARTY_IDENTIFIED
      oneOf:
        - $ref: '#/components/schemas/UMPartyIdentified'
        - $ref: '#/components/schemas/UMPartyRelated'
      discriminator:
        propertyName: _type
        mapping:
          PARTY_IDENTIFIED: '#/components/schemas/UMPartyIdentified'
          PARTY_RELATED: '#/components/schemas/UMPartyRelated'
    UMPartySelf:
      title: PARTY_SELF
      required:
        - _type
      type: object
      properties:
        _type:
          enum:
            - PARTY_SELF
          type: string
        external_ref:
          $ref: '#/components/schemas/PartyRef'
      x-discriminator-value: PARTY_SELF
    UPartyProxy:
      title: PARTY_PROXY
      oneOf:
        - $ref: '#/components/schemas/UMPartySelf'
        - $ref: '#/components/schemas/UMPartyIdentified'
        - $ref: '#/components/schemas/UMPartyRelated'
      discriminator:
        propertyName: _type
        mapping:
          PARTY_SELF: '#/components/schemas/UMPartySelf'
          PARTY_IDENTIFIED: '#/components/schemas/UMPartyIdentified'
          PARTY_RELATED: '#/components/schemas/UMPartyRelated'
    UMDvBoolean:
      title: DV_BOOLEAN
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_BOOLEAN
          type: string
        value:
          type: boolean
      x-discriminator-value: DV_BOOLEAN
    UMDvCount:
      title: DV_COUNT
      required:
        - magnitude
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_COUNT
          type: string
        magnitude:
          type: integer
      x-discriminator-value: DV_COUNT
    DvDate:
      title: DV_DATE
      required:
        - value
      type: object
      properties:
        _type:
          type: string
          default: DV_DATE
        value:
          type: string
          format: date
      example:
        _type: DV_DATE
        value: '2017-08-15'
      x-discriminator-value: DV_DATE
    UMDvDate:
      title: DV_DATE
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_DATE
          type: string
        value:
          type: string
          format: date
      x-discriminator-value: DV_DATE
      example:
        _type: DV_DATE
        value: '2017-08-15'
    UMDvDateTime:
      title: DV_DATE_TIME
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_DATE_TIME
          type: string
        value:
          type: string
          format: date-time
      x-discriminator-value: DV_DATE_TIME
      example:
        _type: DV_DATE_TIME
        value: '2017-08-15T10:37:15.422+02:00'
    UMDvDuration:
      title: DV_DURATION
      required:
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_DURATION
          type: string
      x-discriminator-value: DV_DURATION
    UMDvIdentifier:
      title: DV_IDENTIFIER
      required:
        - id
        - _type
      type: object
      properties:
        issuer:
          type: string
        assigner:
          type: string
        id:
          type: string
        type:
          type: string
        _type:
          enum:
            - DV_IDENTIFIER
          type: string
      x-discriminator-value: DV_IDENTIFIER
      example:
        id: 16b74749-e6aa-4945-b760-b42bdc07098a
        type: Patient
    UMDvOrdinal:
      title: DV_ORDINAL
      required:
        - symbol
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_ORDINAL
          type: string
        symbol:
          $ref: '#/components/schemas/DvCodedText'
        value:
          type: integer
      x-discriminator-value: DV_ORDINAL
    UMDvProportion:
      title: DV_PROPORTION
      required:
        - numerator
        - denominator
        - semantic_type
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_PROPORTION
          type: string
        numerator:
          type: number
        denominator:
          type: number
        semantic_type:
          type: integer
        precision:
          type: integer
      x-discriminator-value: DV_PROPORTION
    UMDvQuantity:
      title: DV_QUANTITY
      required:
        - magnitude
        - units
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_QUANTITY
          type: string
        magnitude:
          type: number
        precision:
          type: integer
        units:
          type: string
        units_system:
          type: string
        units_display_name:
          type: string
      x-discriminator-value: DV_QUANTITY
    UMDvScale:
      title: DV_SCALE
      required:
        - symbol
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_SCALE
          type: string
        symbol:
          $ref: '#/components/schemas/DvCodedText'
        value:
          type: number
      x-discriminator-value: DV_SCALE
    UMDvState:
      title: DV_STATE
      required:
        - value
        - is_terminal
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_STATE
          type: string
        value:
          $ref: '#/components/schemas/DvCodedText'
        is_terminal:
          type: boolean
      x-discriminator-value: DV_STATE
    UMDvTime:
      title: DV_TIME
      required:
        - value
        - _type
      type: object
      properties:
        _type:
          enum:
            - DV_TIME
          type: string
        value:
          type: string
          format: time
      x-discriminator-value: DV_TIME
      example:
        _type: DV_DATE
        value: '2017-08-15'
    UDataValue:
      title: DATA_VALUE
      oneOf:
        - $ref: '#/components/schemas/UMDvBoolean'
        - $ref: '#/components/schemas/UMDvCodedText'
        - $ref: '#/components/schemas/UMDvCount'
        - $ref: '#/components/schemas/UMDvDate'
        - $ref: '#/components/schemas/UMDvDateTime'
        - $ref: '#/components/schemas/UMDvDuration'
        - $ref: '#/components/schemas/UMDvEhrUri'
        - $ref: '#/components/schemas/UMDvIdentifier'
        - $ref: '#/components/schemas/UMDvMultimedia'
        - $ref: '#/components/schemas/UMDvOrdinal'
        - $ref: '#/components/schemas/UMDvParsable'
        - $ref: '#/components/schemas/UMDvProportion'
        - $ref: '#/components/schemas/UMDvQuantity'
        - $ref: '#/components/schemas/UMDvScale'
        - $ref: '#/components/schemas/UMDvState'
        - $ref: '#/components/schemas/UMDvText'
        - $ref: '#/components/schemas/UMDvUri'
      discriminator:
        propertyName: _type
        mapping:
          DV_BOOLEAN: '#/components/schemas/UMDvBoolean'
          DV_CODED_TEXT: '#/components/schemas/UMDvCodedText'
          DV_COUNT: '#/components/schemas/UMDvCount'
          DV_DATE: '#/components/schemas/UMDvDate'
          DV_DATE_TIME: '#/components/schemas/UMDvDateTime'
          DV_DURATION: '#/components/schemas/UMDvDuration'
          DV_EHR_URI: '#/components/schemas/UMDvEhrUri'
          DV_IDENTIFIER: '#/components/schemas/UMDvIdentifier'
          DV_MULTIMEDIA: '#/components/schemas/UMDvMultimedia'
          DV_ORDINAL: '#/components/schemas/UMDvOrdinal'
          DV_PARSABLE: '#/components/schemas/UMDvParsable'
          DV_PROPORTION: '#/components/schemas/UMDvProportion'
          DV_QUANTITY: '#/components/schemas/UMDvQuantity'
          DV_SCALE: '#/components/schemas/UMDvScale'
          DV_STATE: '#/components/schemas/UMDvState'
          DV_TEXT: '#/components/schemas/UMDvText'
          DV_TIME: '#/components/schemas/UMDvTime'
          DV_URI: '#/components/schemas/UMDvUri'
    Element:
      title: ELEMENT
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ELEMENT
        null_flavour:
          $ref: '#/components/schemas/DvCodedText'
        value:
          $ref: '#/components/schemas/UDataValue'
        null_reason:
          $ref: '#/components/schemas/UDvText'
      x-discriminator-value: ELEMENT
      required:
        - name
        - archetype_node_id
    ItemSingle:
      title: ITEM_SINGLE
      required:
        - name
        - archetype_node_id
        - item
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_SINGLE
        item:
          $ref: '#/components/schemas/Element'
      x-discriminator-value: ITEM_SINGLE
    ItemList:
      title: ITEM_LIST
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_LIST
        items:
          type: array
          items:
            $ref: '#/components/schemas/Element'
      x-discriminator-value: ITEM_LIST
      required:
        - name
        - archetype_node_id
    Clstr:
      title: CLUSTER
      required:
        - name
        - archetype_node_id
        - items
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: CLUSTER
        items:
          type: array
          items:
            $ref: '#/components/schemas/UItem'
      x-discriminator-value: CLUSTER
    UItem:
      title: ITEM
      oneOf:
        - $ref: '#/components/schemas/Element'
        - $ref: '#/components/schemas/Clstr'
      discriminator:
        propertyName: _type
        mapping:
          ELEMENT: '#/components/schemas/Element'
          CLUSTER: '#/components/schemas/Clstr'
    ItemTable:
      title: ITEM_TABLE
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_TABLE
        items:
          type: array
          items:
            $ref: '#/components/schemas/Clstr'
      x-discriminator-value: ITEM_TABLE
      required:
        - name
        - archetype_node_id
    ItemTree:
      title: ITEM_TREE
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ITEM_TREE
        items:
          type: array
          items:
            $ref: '#/components/schemas/UItem'
      x-discriminator-value: ITEM_TREE
      required:
        - name
        - archetype_node_id
    UItemStructure:
      title: ITEM_STRUCTURE
      oneOf:
        - $ref: '#/components/schemas/ItemSingle'
        - $ref: '#/components/schemas/ItemList'
        - $ref: '#/components/schemas/ItemTable'
        - $ref: '#/components/schemas/ItemTree'
      discriminator:
        propertyName: _type
        mapping:
          ITEM_SINGLE: '#/components/schemas/ItemSingle'
          ITEM_LIST: '#/components/schemas/ItemList'
          ITEM_TABLE: '#/components/schemas/ItemTable'
          ITEM_TREE: '#/components/schemas/ItemTree'
    FeederAuditDetails:
      title: FEEDER_AUDIT_DETAILS
      required:
        - system_id
      type: object
      properties:
        system_id:
          type: string
        location:
          $ref: '#/components/schemas/UPartyIdentified'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyIdentified'
        time:
          $ref: '#/components/schemas/DvDateTime'
        version_id:
          type: string
        other_details:
          $ref: '#/components/schemas/UItemStructure'
    FeederAudit:
      title: FEEDER_AUDIT
      required:
        - originating_system_audit
      type: object
      properties:
        originating_system_item_ids:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        feeder_system_item_ids:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        original_content:
          $ref: '#/components/schemas/UDvEncapsulated'
        originating_system_audit:
          $ref: '#/components/schemas/FeederAuditDetails'
        feeder_system_audit:
          $ref: '#/components/schemas/FeederAuditDetails'
    AuditDetails:
      title: AUDIT_DETAILS
      required:
        - system_id
        - time_committed
        - change_type
        - committer
      type: object
      properties:
        _type:
          type: string
          default: AUDIT_DETAILS
        system_id:
          type: string
        time_committed:
          $ref: '#/components/schemas/DvDateTime'
        change_type:
          $ref: '#/components/schemas/DvCodedText'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
      description: The set of attributes required to document the committal of an information item to a repository.
      example:
        system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
        time_committed:
          value: '2017-08-15T10:37:15.422+02:00'
        change_type:
          value: creation
          defining_code:
            terminology_id:
              value: openehr
            code_string: '249'
        description:
          value: Description text
      x-discriminator-value: AUDIT_DETAILS
    DvIntervalOfDateTime:
      title: DV_INTERVAL_of_DATE_TIME
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower_unbounded:
          type: boolean
        upper_unbounded:
          type: boolean
        lower_included:
          type: boolean
        upper_included:
          type: boolean
        lower:
          $ref: '#/components/schemas/UMDvDateTime'
        upper:
          $ref: '#/components/schemas/UMDvDateTime'
      x-discriminator-value: DV_INTERVAL_of_DATE_TIME
      required:
        - lower_unbounded
        - upper_unbounded
        - lower_included
        - upper_included
    Participation:
      title: PARTICIPATION
      required:
        - function
        - performer
      type: object
      properties:
        function:
          $ref: '#/components/schemas/UDvText'
        mode:
          $ref: '#/components/schemas/DvCodedText'
        performer:
          $ref: '#/components/schemas/UPartyProxy'
        time:
          $ref: '#/components/schemas/DvIntervalOfDateTime'
    EventContext:
      title: EVENT_CONTEXT
      required:
        - start_time
        - setting
      type: object
      properties:
        start_time:
          $ref: '#/components/schemas/DvDateTime'
        end_time:
          $ref: '#/components/schemas/DvDateTime'
        location:
          type: string
        setting:
          $ref: '#/components/schemas/DvCodedText'
        other_context:
          $ref: '#/components/schemas/UItemStructure'
        health_care_facility:
          $ref: '#/components/schemas/UPartyIdentified'
        participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
      x-discriminator-value: EVENT_CONTEXT
    UMAdminEntry:
      title: ADMIN_ENTRY
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        _type:
          enum:
            - ADMIN_ENTRY
          type: string
        data:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: ADMIN_ENTRY
    Event:
      title: EVENT
      required:
        - name
        - archetype_node_id
        - time
        - data
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: EVENT
        time:
          $ref: '#/components/schemas/DvDateTime'
        state:
          $ref: '#/components/schemas/UItemStructure'
        data:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: EVENT
    History:
      title: HISTORY
      required:
        - name
        - archetype_node_id
        - origin
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: HISTORY
        origin:
          $ref: '#/components/schemas/DvDateTime'
        period:
          $ref: '#/components/schemas/DvDuration'
        duration:
          $ref: '#/components/schemas/DvDuration'
        summary:
          $ref: '#/components/schemas/UItemStructure'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      x-discriminator-value: HISTORY
    UMObservation:
      title: OBSERVATION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - OBSERVATION
          type: string
        data:
          $ref: '#/components/schemas/History'
        state:
          $ref: '#/components/schemas/History'
      x-discriminator-value: OBSERVATION
    UMEvaluation:
      title: EVALUATION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - data
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - EVALUATION
          type: string
        data:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: EVALUATION
    Activity:
      title: ACTIVITY
      required:
        - name
        - archetype_node_id
        - action_archetype_id
        - description
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        _type:
          type: string
          default: ACTIVITY
        timing:
          $ref: '#/components/schemas/DvParsable'
        action_archetype_id:
          type: string
        description:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: ACTIVITY
    UMInstruction:
      title: INSTRUCTION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - narrative
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - INSTRUCTION
          type: string
        narrative:
          $ref: '#/components/schemas/UDvText'
        expiry_time:
          $ref: '#/components/schemas/DvDateTime'
        wf_definition:
          $ref: '#/components/schemas/DvParsable'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
      x-discriminator-value: INSTRUCTION
    IsmTransition:
      title: ISM_TRANSITION
      required:
        - current_state
      type: object
      properties:
        _type:
          type: string
          default: ISM_TRANSITION
        current_state:
          $ref: '#/components/schemas/DvCodedText'
        transition:
          $ref: '#/components/schemas/DvCodedText'
        careflow_step:
          $ref: '#/components/schemas/DvCodedText'
        reason:
          type: array
          items:
            $ref: '#/components/schemas/UDvText'
      x-discriminator-value: ISM_TRANSITION
    LocatableRef:
      title: LOCATABLE_REF
      required:
        - namespace
        - type
        - id
      type: object
      properties:
        namespace:
          type: string
        type:
          type: string
        id:
          $ref: '#/components/schemas/UUidBasedId'
        path:
          type: string
    InstructionDetails:
      title: INSTRUCTION_DETAILS
      required:
        - instruction_id
        - activity_id
      type: object
      properties:
        _type:
          type: string
          default: INSTRUCTION_DETAILS
        instruction_id:
          $ref: '#/components/schemas/LocatableRef'
        activity_id:
          type: string
        wf_details:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: INSTRUCTION_DETAILS
    UMAction:
      title: ACTION
      required:
        - name
        - archetype_node_id
        - language
        - encoding
        - subject
        - time
        - ism_transition
        - description
        - _type
      type: object
      properties:
        name:
          $ref: '#/components/schemas/UDvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UUidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/UPartyProxy'
        provider:
          $ref: '#/components/schemas/UPartyProxy'
        protocol:
          $ref: '#/components/schemas/UItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
        _type:
          enum:
            - ACTION
          type: string
        time:
          $ref: '#/components/schemas/DvDateTime'
        ism_transition:
          $ref: '#/components/schemas/IsmTransition'
        instruction_details:
          $ref: '#/components/schemas/InstructionDetails'
        description:
          $ref: '#/components/schemas/UItemStructure'
      x-discriminator-value: ACTION
    UContentItem:
      title: CONTENT_ITEM
      oneOf:
        - $ref: '#/components/schemas/UMAdminEntry'
        - $ref: '#/components/schemas/UMObservation'
        - $ref: '#/components/schemas/UMEvaluation'
        - $ref: '#/components/schemas/UMInstruction'
        - $ref: '#/components/schemas/UMAction'
      discriminator:
        propertyName: _type
        mapping:
          ADMIN_ENTRY: '#/components/schemas/UMAdminEntry'
          OBSERVATION: '#/components/schemas/UMObservation'
          EVALUATION: '#/components/schemas/UMEvaluation'
          INSTRUCTION: '#/components/schemas/UMInstruction'
          ACTION: '#/components/schemas/UMAction'
    UVersionable:
      title: Versionable
      oneOf:
        - $ref: '#/components/schemas/Composition'
        - $ref: '#/components/schemas/EhrStatus'
      discriminator:
        propertyName: _type
        mapping:
          COMPOSITION: '#/components/schemas/Composition'
          EHR_STATUS: '#/components/schemas/EhrStatus'
    Attestation:
      title: ATTESTATION
      required:
        - system_id
        - time_committed
        - change_type
        - committer
        - reason
        - is_pending
      type: object
      properties:
        _type:
          type: string
          default: ATTESTATION
        system_id:
          type: string
        time_committed:
          $ref: '#/components/schemas/DvDateTime'
        change_type:
          $ref: '#/components/schemas/DvCodedText'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
        attested_view:
          $ref: '#/components/schemas/DvMultimedia'
        proof:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/DvEhrUri'
        reason:
          $ref: '#/components/schemas/UDvText'
        is_pending:
          type: boolean
      x-discriminator-value: ATTESTATION
      example:
        system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
        time_committed:
          value: '2017-08-15T10:37:15.422+02:00'
        change_type:
          value: creation
          defining_code:
            terminology_id:
              value: openehr
            code_string: '249'
        description:
          value: Description text
    OriginalVersion:
      title: ORIGINAL_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - uid
        - lifecycle_state
      type: object
      properties:
        _type:
          type: string
          default: ORIGINAL_VERSION
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/UVersionable'
        uid:
          $ref: '#/components/schemas/ObjectVersionId'
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        other_input_version_uids:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersionId'
        lifecycle_state:
          $ref: '#/components/schemas/DvCodedText'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
      x-discriminator-value: ORIGINAL_VERSION
    UMOriginalVersionOfEhrStatus:
      title: ORIGINAL_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - uid
        - lifecycle_state
        - _type
      type: object
      properties:
        _type:
          enum:
            - ORIGINAL_VERSION
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/EhrStatus'
        uid:
          $ref: '#/components/schemas/ObjectVersionId'
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        other_input_version_uids:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersionId'
        lifecycle_state:
          $ref: '#/components/schemas/DvCodedText'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
      x-discriminator-value: ORIGINAL_VERSION
    UMImportedVersionOfEhrStatus:
      title: IMPORTED_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - item
        - _type
      type: object
      properties:
        _type:
          enum:
            - IMPORTED_VERSION
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/EhrStatus'
        item:
          $ref: '#/components/schemas/UMOriginalVersionOfEhrStatus'
      x-discriminator-value: IMPORTED_VERSION
    UMOriginalVersionOfComposition:
      title: ORIGINAL_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - uid
        - lifecycle_state
        - _type
      type: object
      properties:
        _type:
          enum:
            - ORIGINAL_VERSION
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/Composition'
        uid:
          $ref: '#/components/schemas/ObjectVersionId'
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        other_input_version_uids:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersionId'
        lifecycle_state:
          $ref: '#/components/schemas/DvCodedText'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
      x-discriminator-value: ORIGINAL_VERSION
    UMImportedVersionOfComposition:
      title: IMPORTED_VERSION
      required:
        - contribution
        - commit_audit
        - data
        - item
        - _type
      type: object
      properties:
        _type:
          enum:
            - IMPORTED_VERSION
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/Composition'
        item:
          $ref: '#/components/schemas/UMOriginalVersionOfComposition'
      x-discriminator-value: IMPORTED_VERSION
    TerminologyCode:
      title: TERMINOLOGY_CODE
      required:
        - terminology_id
        - code_string
      type: object
      properties:
        terminology_id:
          type: string
        terminology_version:
          type: string
        code_string:
          type: string
        uri:
          type: string
          format: uri
      example:
        terminology_id: snomed_ct
        code_string: '308335008'
    UpdateAudit:
      title: UPDATE_AUDIT
      required:
        - change_type
        - committer
      type: object
      properties:
        _type:
          type: string
          default: UPDATE_AUDIT
        change_type:
          $ref: '#/components/schemas/TerminologyCode'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
      description: The set of attributes required to document the committal of an information item to a repository. Used by the server to create an AUDIT_DETAILS object.
      example:
        change_type:
          value: creation
          defining_code:
            terminology_id: openehr
            code_string: '249'
        description: Description text
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
      x-discriminator-value: UPDATE_AUDIT
    UpdateAttestation:
      title: UPDATE_ATTESTATION
      required:
        - change_type
        - committer
        - reason
        - is_pending
      type: object
      properties:
        _type:
          type: string
          default: UPDATE_ATTESTATION
        change_type:
          $ref: '#/components/schemas/TerminologyCode'
        description:
          $ref: '#/components/schemas/UDvText'
        committer:
          $ref: '#/components/schemas/UPartyProxy'
        attested_view:
          $ref: '#/components/schemas/DvMultimedia'
        proof:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/DvEhrUri'
        reason:
          $ref: '#/components/schemas/UDvText'
        is_pending:
          type: boolean
      x-discriminator-value: UPDATE_ATTESTATION
      example:
        change_type:
          value: creation
          defining_code:
            terminology_id: openehr
            code_string: '249'
        description: Description text
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
    UpdateVersion:
      title: UPDATE_VERSION
      required:
        - lifecycle_state
        - data
        - commit_audit
      type: object
      properties:
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        signature:
          type: string
        lifecycle_state:
          $ref: '#/components/schemas/TerminologyCode'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAttestation'
        data:
          $ref: '#/components/schemas/UVersionable'
        commit_audit:
          $ref: '#/components/schemas/UpdateAudit'
  headers:
    Allow:
      description: |
        The `Allow` header lists the set of methods supported.
      schema:
        type: string
        example: GET, POST, PUT, DELETE, OPTIONS
  responses:
    200_options:
      description: |
        `200 OK` is returned when options and conformance statement was retrieved successfully.
      headers:
        Allow:
          $ref: '#/components/headers/Allow'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Options'
