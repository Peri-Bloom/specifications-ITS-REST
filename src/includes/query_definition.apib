## STORED QUERY [/definition/query]

Management of stored (registered) queries in the system.

Stored queries must have a name (`qualified_query_name`) and an optional `version` number.

Implementers can choose a schema for query names, such as `<namespace>::<query-name>`, 
this way queries can be separated by domain, etc. 
Namespace (if used) should be reverse domain name, which allows for separation of 
stored queries by teams, companies, etc.
Example of a qualified query name: `org.openehr::compositions`.

In the future several standard openEHR stored queries might be developed, those will
use namespace `org.openehr`. 

Version numbers, if used must be in [SEMVER](https://semver.org/) style (i.e. `major.minor.patch`). 
If only a partial `version` is supplied or `version` is not supplied at all, the
system must use the latest `version` with the supplied prefix - i.e. if only `major` or `major.minor` 
is used, then the latest query version with supplied prefix will be used.

Queries can be executed using the [query endpoint](query.html#definitions-stored-query).

### List stored queries [GET /definition/query/{qualified_query_name}]

Parameter `qualified_query_name` is optional. If omitted they are treated as "wildcards" in the search.

Examples:
*   `GET {baseUrl}/definition/query/org.openehr` will list all versions of all
    queries with names starting with `org.openehr`
*   `GET {baseUrl}/definition/query/org.openehr::compositions` will
    list all versions of the query named `org.openehr::compositions`

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, optional) - query name

+ Response 200 (application/json) 

    `200 OK` is returned when the query resources are successfully retrieved.

    + Body

            [
                {
                    "name": "org.openehr::compositions",
                    "type": "aql",
                    "version": "1.0.1",
                    "saved": "2017-07-16T19:20:30.450+01:00",
                    "q": "SELECT c FROM EHR e[ehr_id/value=$ehr_id] CONTAINS COMPOSITION c[$compositionid] WHERE c/name/value = 'Vitals'"
                },
                {
                    "name": "org.openehr::compositions",
                    "type": "aql",
                    "version": "3.1.7",
                    "saved": "2018-06-13T09:37:20.530+01:00",
                    "q": "SELECT c FROM EHR e[ehr_id/value=$ehr_id] CONTAINS COMPOSITION c[$uid] WHERE c/name/value = 'Vitals'"
                }
            ]


### Store a query [PUT /definition/query/{qualified_query_name}/{version}{?type}]

Store a new query on the system.

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, required) - query name
    + version: `1.0.1` (string, optional) - query SEMVER version number
    + type: `AQL` (string, optional) - indicating the query language/type
 
+ Request (text/plain)

    + Body

            SELECT c 
            FROM EHR e[ehr_id/value=$ehr_id] 
            CONTAINS COMPOSITION c[openEHR-EHR-COMPOSITION.encounter.v1] 
            CONTAINS OBSERVATION obs[openEHR-EHR-OBSERVATION.blood_pressure.v1] 
            WHERE obs/data[at0001]/events[at0006]/data[at0003]/items[at0004]/value/magnitude >= $systolic_bp

+ Response 200 (application/json)

    `200 OK` is returned when the query was successfully stored.

    + Body

    + Headers

            Location: {baseUrl}/definition/query/org.openehr::compositions/1.0.1

+ Response 400

    `400 Bad Request` is returned when the server was unable to store the query. 
    Could be due to incorrect request body (could not be parsed, etc), unknown query type, etc.

    + Body 

+ Response 409

    `409 Conflict` is returned when a query with the given `qualified_query_name` and `version` already exists on the server.

    + Body


### Get stored query and info/metadata [GET /definition/query/{qualified_query_name}/{version}]

+ Parameters
    
    + qualified_query_name: `org.openehr::compositions` (string, required) - query name
    + version: `1.0.1` (string, optional) - query SEMVER version number

+ Response 200 (application/json)

    `200 OK` is returned when the stored AQL is successfully retrieved.
    
    + Body 

            {
                "name": "org.openehr::compositions",
                "type": "aql",
                "version": "1.0.1",
                "saved": "2017-07-16T19:20:30.450+01:00",
                "q": "SELECT c FROM EHR e[ehr_id/value=$ehr_id] CONTAINS COMPOSITION c[$compositionid] WHERE c/name/value = 'Vitals'"
            }

+ Response 404

    `404 Not Found` is returned when the stored AQL with supplied `qualified_query_name` and `version` does not exist.

    + Body


### Has query [HEAD /definition/query/{qualified_query_name}]

Checks if a particular query identified by `qualified_query_name` exists.

+ Parameters

    + qualified_query_name: `org.openehr::compositions` (string, required) - query name

+ Response 200

  `200 OK` without body content is returned when the query identified by `qualified_query_name` exists.

    + Body

+ Response 404

  `404 Not Found` is returned when the query identified by `qualified_query_name` does not exist.

    + Body

