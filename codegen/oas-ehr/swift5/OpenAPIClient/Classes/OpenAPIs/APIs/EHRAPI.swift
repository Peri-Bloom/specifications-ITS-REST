//
// EHRAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class EHRAPI {

    /**
     * enum for parameter prefer
     */
    public enum Prefer_ehrCreate: String, CaseIterable {
        case representation = "return=representation"
        case minimal = "return=minimal"
    }

    /**
     Create EHR
     
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to .returnEqualMinimal)
     - parameter ehrStatus: (body) An EHR_STATUS resource MAY be also supplied by the client as the request body.  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ehrCreate(prefer: Prefer_ehrCreate? = nil, ehrStatus: EhrStatus? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Ehr?, _ error: Error?) -> Void)) -> RequestTask {
        return ehrCreateWithRequestBuilder(prefer: prefer, ehrStatus: ehrStatus).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create EHR
     - POST /ehr
     - Create a new `EHR` with an auto-generated identifier.  An EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body.  If not supplied, a default EHR_STATUS will be used by the service with following attributes:   - `is_queryable`: true   - `is_modifiable`: true   - `subject`: a PARTY_SELF object  All other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics). 
     - responseHeaders: [ETag(String), Location(String)]
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to .returnEqualMinimal)
     - parameter ehrStatus: (body) An EHR_STATUS resource MAY be also supplied by the client as the request body.  (optional)
     - returns: RequestBuilder<Ehr> 
     */
    open class func ehrCreateWithRequestBuilder(prefer: Prefer_ehrCreate? = nil, ehrStatus: EhrStatus? = nil) -> RequestBuilder<Ehr> {
        let localVariablePath = "/ehr"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ehrStatus)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Prefer": prefer?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Ehr>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     * enum for parameter prefer
     */
    public enum Prefer_ehrCreateWithId: String, CaseIterable {
        case representation = "return=representation"
        case minimal = "return=minimal"
    }

    /**
     Create EHR with id
     
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to .returnEqualMinimal)
     - parameter ehrStatus: (body) An EHR_STATUS resource MAY be also supplied by the client as the request body.  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ehrCreateWithId(ehrId: String, prefer: Prefer_ehrCreateWithId? = nil, ehrStatus: EhrStatus? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Ehr?, _ error: Error?) -> Void)) -> RequestTask {
        return ehrCreateWithIdWithRequestBuilder(ehrId: ehrId, prefer: prefer, ehrStatus: ehrStatus).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create EHR with id
     - PUT /ehr/{ehr_id}
     - Create a new EHR with the specified `ehr_id` identifier.  The value of the `ehr_id` unique identifier MUST be valid [HIER_OBJECT_ID](https://specifications.openehr.org/releases/BASE/latest/base_types.html#_hier_object_id_class) value.  It is strongly RECOMMENDED that an UUID always be used for this.  An EHR_STATUS resource needs to be always created and committed in the new EHR. This resource MAY be also supplied by the client as the request body.  If not supplied, a default EHR_STATUS will be used by the service with following attributes:   - `is_queryable`: true   - `is_modifiable`: true   - `subject`: a PARTY_SELF object  All other required EHR attributes and resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics). 
     - responseHeaders: [ETag(String), Location(String)]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to .returnEqualMinimal)
     - parameter ehrStatus: (body) An EHR_STATUS resource MAY be also supplied by the client as the request body.  (optional)
     - returns: RequestBuilder<Ehr> 
     */
    open class func ehrCreateWithIdWithRequestBuilder(ehrId: String, prefer: Prefer_ehrCreateWithId? = nil, ehrStatus: EhrStatus? = nil) -> RequestBuilder<Ehr> {
        var localVariablePath = "/ehr/{ehr_id}"
        let ehrIdPreEscape = "\(APIHelper.mapValueToPathItem(ehrId))"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ehrStatus)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Prefer": prefer?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Ehr>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get EHR by id
     
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ehrGetById(ehrId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Ehr?, _ error: Error?) -> Void)) -> RequestTask {
        return ehrGetByIdWithRequestBuilder(ehrId: ehrId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get EHR by id
     - GET /ehr/{ehr_id}
     - Retrieve the EHR with the specified `ehr_id`. 
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - returns: RequestBuilder<Ehr> 
     */
    open class func ehrGetByIdWithRequestBuilder(ehrId: String) -> RequestBuilder<Ehr> {
        var localVariablePath = "/ehr/{ehr_id}"
        let ehrIdPreEscape = "\(APIHelper.mapValueToPathItem(ehrId))"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Ehr>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get EHR by subject id
     
     - parameter subjectId: (query) The EHR subject id.  
     - parameter subjectNamespace: (query) The EHR subject id namespace.  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ehrGetBySubject(subjectId: String, subjectNamespace: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Ehr?, _ error: Error?) -> Void)) -> RequestTask {
        return ehrGetBySubjectWithRequestBuilder(subjectId: subjectId, subjectNamespace: subjectNamespace).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get EHR by subject id
     - GET /ehr
     - Retrieve the EHR with the specified `subject_id` and `subject_namespace`.  These subject parameters will be matched against EHR's EHR_STATUS.subject.external_ref.id.value and  EHR_STATUS.subject.external_ref.namespace values. 
     - parameter subjectId: (query) The EHR subject id.  
     - parameter subjectNamespace: (query) The EHR subject id namespace.  
     - returns: RequestBuilder<Ehr> 
     */
    open class func ehrGetBySubjectWithRequestBuilder(subjectId: String, subjectNamespace: String) -> RequestBuilder<Ehr> {
        let localVariablePath = "/ehr"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "subject_id": (wrappedValue: subjectId.encodeToJSON(), isExplode: true),
            "subject_namespace": (wrappedValue: subjectNamespace.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Ehr>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
