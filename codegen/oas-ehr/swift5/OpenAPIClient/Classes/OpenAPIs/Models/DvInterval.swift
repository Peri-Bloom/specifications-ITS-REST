//
// DvInterval.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DvInterval: Codable, JSONEncodable, Hashable {

    public var type: String? = "DV_INTERVAL"
    public var lowerUnbounded: Bool
    public var upperUnbounded: Bool
    public var lowerIncluded: Bool
    public var upperIncluded: Bool

    public init(type: String? = "DV_INTERVAL", lowerUnbounded: Bool, upperUnbounded: Bool, lowerIncluded: Bool, upperIncluded: Bool) {
        self.type = type
        self.lowerUnbounded = lowerUnbounded
        self.upperUnbounded = upperUnbounded
        self.lowerIncluded = lowerIncluded
        self.upperIncluded = upperIncluded
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type = "_type"
        case lowerUnbounded = "lower_unbounded"
        case upperUnbounded = "upper_unbounded"
        case lowerIncluded = "lower_included"
        case upperIncluded = "upper_included"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encode(lowerUnbounded, forKey: .lowerUnbounded)
        try container.encode(upperUnbounded, forKey: .upperUnbounded)
        try container.encode(lowerIncluded, forKey: .lowerIncluded)
        try container.encode(upperIncluded, forKey: .upperIncluded)
    }
}

