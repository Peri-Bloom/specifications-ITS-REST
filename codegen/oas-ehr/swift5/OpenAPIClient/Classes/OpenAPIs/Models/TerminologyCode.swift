//
// TerminologyCode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TerminologyCode: Codable, JSONEncodable, Hashable {

    public var terminologyId: String
    public var terminologyVersion: String?
    public var codeString: String
    public var uri: String?

    public init(terminologyId: String, terminologyVersion: String? = nil, codeString: String, uri: String? = nil) {
        self.terminologyId = terminologyId
        self.terminologyVersion = terminologyVersion
        self.codeString = codeString
        self.uri = uri
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case terminologyId = "terminology_id"
        case terminologyVersion = "terminology_version"
        case codeString = "code_string"
        case uri
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(terminologyId, forKey: .terminologyId)
        try container.encodeIfPresent(terminologyVersion, forKey: .terminologyVersion)
        try container.encode(codeString, forKey: .codeString)
        try container.encodeIfPresent(uri, forKey: .uri)
    }
}

