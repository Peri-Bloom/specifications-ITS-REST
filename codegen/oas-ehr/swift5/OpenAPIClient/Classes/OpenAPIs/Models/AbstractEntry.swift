//
// AbstractEntry.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AbstractEntry: Codable, JSONEncodable, Hashable {

    public var language: CodePhrase
    public var encoding: CodePhrase
    public var otherParticipations: [Participation]?
    public var workflowId: ObjectRef?
    public var subject: PartyProxy
    public var provider: PartyProxy?

    public init(language: CodePhrase, encoding: CodePhrase, otherParticipations: [Participation]? = nil, workflowId: ObjectRef? = nil, subject: PartyProxy, provider: PartyProxy? = nil) {
        self.language = language
        self.encoding = encoding
        self.otherParticipations = otherParticipations
        self.workflowId = workflowId
        self.subject = subject
        self.provider = provider
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case language
        case encoding
        case otherParticipations = "other_participations"
        case workflowId = "workflow_id"
        case subject
        case provider
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(language, forKey: .language)
        try container.encode(encoding, forKey: .encoding)
        try container.encodeIfPresent(otherParticipations, forKey: .otherParticipations)
        try container.encodeIfPresent(workflowId, forKey: .workflowId)
        try container.encode(subject, forKey: .subject)
        try container.encodeIfPresent(provider, forKey: .provider)
    }
}

