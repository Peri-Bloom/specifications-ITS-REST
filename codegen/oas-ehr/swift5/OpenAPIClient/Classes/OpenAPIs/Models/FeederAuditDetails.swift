//
// FeederAuditDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct FeederAuditDetails: Codable, JSONEncodable, Hashable {

    public var systemId: String
    public var location: PartyIdentified?
    public var subject: PartyProxy?
    public var provider: PartyIdentified?
    public var time: DvDateTime?
    public var versionId: String?
    public var otherDetails: ItemStructure?

    public init(systemId: String, location: PartyIdentified? = nil, subject: PartyProxy? = nil, provider: PartyIdentified? = nil, time: DvDateTime? = nil, versionId: String? = nil, otherDetails: ItemStructure? = nil) {
        self.systemId = systemId
        self.location = location
        self.subject = subject
        self.provider = provider
        self.time = time
        self.versionId = versionId
        self.otherDetails = otherDetails
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case systemId = "system_id"
        case location
        case subject
        case provider
        case time
        case versionId = "version_id"
        case otherDetails = "other_details"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(systemId, forKey: .systemId)
        try container.encodeIfPresent(location, forKey: .location)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(provider, forKey: .provider)
        try container.encodeIfPresent(time, forKey: .time)
        try container.encodeIfPresent(versionId, forKey: .versionId)
        try container.encodeIfPresent(otherDetails, forKey: .otherDetails)
    }
}

