//
// DvText.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DvText: Codable, JSONEncodable, Hashable {

    public var type: String? = "DV_TEXT"
    public var value: String
    public var hyperlink: DvUri?
    public var language: CodePhrase?
    public var encoding: CodePhrase?
    public var formatting: String?

    public init(type: String? = "DV_TEXT", value: String, hyperlink: DvUri? = nil, language: CodePhrase? = nil, encoding: CodePhrase? = nil, formatting: String? = nil) {
        self.type = type
        self.value = value
        self.hyperlink = hyperlink
        self.language = language
        self.encoding = encoding
        self.formatting = formatting
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type = "_type"
        case value
        case hyperlink
        case language
        case encoding
        case formatting
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encode(value, forKey: .value)
        try container.encodeIfPresent(hyperlink, forKey: .hyperlink)
        try container.encodeIfPresent(language, forKey: .language)
        try container.encodeIfPresent(encoding, forKey: .encoding)
        try container.encodeIfPresent(formatting, forKey: .formatting)
    }
}

