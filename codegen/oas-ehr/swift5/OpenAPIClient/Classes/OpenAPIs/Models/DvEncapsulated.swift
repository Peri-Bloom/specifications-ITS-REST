//
// DvEncapsulated.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct DvEncapsulated: Codable, JSONEncodable, Hashable {

    public var type: String = "DV_ENCAPSULATED"
    public var charset: CodePhrase?
    public var language: CodePhrase?

    public init(type: String = "DV_ENCAPSULATED", charset: CodePhrase? = nil, language: CodePhrase? = nil) {
        self.type = type
        self.charset = charset
        self.language = language
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type = "_type"
        case charset
        case language
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(type, forKey: .type)
        try container.encodeIfPresent(charset, forKey: .charset)
        try container.encodeIfPresent(language, forKey: .language)
    }
}

