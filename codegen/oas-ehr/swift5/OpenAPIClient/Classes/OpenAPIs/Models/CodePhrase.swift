//
// CodePhrase.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CodePhrase: Codable, JSONEncodable, Hashable {

    public var terminologyId: TerminologyId
    public var codeString: String
    public var preferredTerm: String?

    public init(terminologyId: TerminologyId, codeString: String, preferredTerm: String? = nil) {
        self.terminologyId = terminologyId
        self.codeString = codeString
        self.preferredTerm = preferredTerm
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case terminologyId = "terminology_id"
        case codeString = "code_string"
        case preferredTerm = "preferred_term"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(terminologyId, forKey: .terminologyId)
        try container.encode(codeString, forKey: .codeString)
        try container.encodeIfPresent(preferredTerm, forKey: .preferredTerm)
    }
}

