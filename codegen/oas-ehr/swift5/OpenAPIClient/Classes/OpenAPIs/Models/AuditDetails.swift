//
// AuditDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The set of attributes required to document the committal of an information item to a repository. */
public struct AuditDetails: Codable, JSONEncodable, Hashable {

    public var type: String? = "AUDIT_DETAILS"
    public var systemId: String
    public var timeCommitted: DvDateTime
    public var changeType: DvCodedText
    public var description: DvText?
    public var committer: PartyProxy

    public init(type: String? = "AUDIT_DETAILS", systemId: String, timeCommitted: DvDateTime, changeType: DvCodedText, description: DvText? = nil, committer: PartyProxy) {
        self.type = type
        self.systemId = systemId
        self.timeCommitted = timeCommitted
        self.changeType = changeType
        self.description = description
        self.committer = committer
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type = "_type"
        case systemId = "system_id"
        case timeCommitted = "time_committed"
        case changeType = "change_type"
        case description
        case committer
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encode(systemId, forKey: .systemId)
        try container.encode(timeCommitted, forKey: .timeCommitted)
        try container.encode(changeType, forKey: .changeType)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(committer, forKey: .committer)
    }
}

