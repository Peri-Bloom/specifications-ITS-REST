package org.openapitools.model;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.model.AbstractEntry;
import org.openapitools.model.Action;
import org.openapitools.model.Activity;
import org.openapitools.model.AdminEntry;
import org.openapitools.model.Archetyped;
import org.openapitools.model.CareEntry;
import org.openapitools.model.Clstr;
import org.openapitools.model.Composition;
import org.openapitools.model.ContentItem;
import org.openapitools.model.DataStructure;
import org.openapitools.model.DvText;
import org.openapitools.model.EhrStatus;
import org.openapitools.model.Element;
import org.openapitools.model.Evaluation;
import org.openapitools.model.Event;
import org.openapitools.model.FeederAudit;
import org.openapitools.model.Folder;
import org.openapitools.model.History;
import org.openapitools.model.Instruction;
import org.openapitools.model.Item;
import org.openapitools.model.ItemList;
import org.openapitools.model.ItemSingle;
import org.openapitools.model.ItemStructure;
import org.openapitools.model.ItemTable;
import org.openapitools.model.ItemTree;
import org.openapitools.model.Link;
import org.openapitools.model.Observation;
import org.openapitools.model.Pathable;
import org.openapitools.model.UidBasedId;
import org.openapitools.model.Versionable;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * Locatable
 */

@JsonIgnoreProperties(
  value = "_type", // ignore manually set _type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the _type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "_type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = Action.class, name = "ACTION"),
  @JsonSubTypes.Type(value = Activity.class, name = "ACTIVITY"),
  @JsonSubTypes.Type(value = AdminEntry.class, name = "ADMIN_ENTRY"),
  @JsonSubTypes.Type(value = AbstractEntry.class, name = "AbstractEntry"),
  @JsonSubTypes.Type(value = Action.class, name = "Action"),
  @JsonSubTypes.Type(value = Activity.class, name = "Activity"),
  @JsonSubTypes.Type(value = AdminEntry.class, name = "AdminEntry"),
  @JsonSubTypes.Type(value = Clstr.class, name = "CLUSTER"),
  @JsonSubTypes.Type(value = Composition.class, name = "COMPOSITION"),
  @JsonSubTypes.Type(value = CareEntry.class, name = "CareEntry"),
  @JsonSubTypes.Type(value = Clstr.class, name = "Clstr"),
  @JsonSubTypes.Type(value = Composition.class, name = "Composition"),
  @JsonSubTypes.Type(value = ContentItem.class, name = "ContentItem"),
  @JsonSubTypes.Type(value = DataStructure.class, name = "DATE_STRUCTURE"),
  @JsonSubTypes.Type(value = DataStructure.class, name = "DataStructure"),
  @JsonSubTypes.Type(value = EhrStatus.class, name = "EHR_STATUS"),
  @JsonSubTypes.Type(value = Element.class, name = "ELEMENT"),
  @JsonSubTypes.Type(value = Evaluation.class, name = "EVALUATION"),
  @JsonSubTypes.Type(value = Event.class, name = "EVENT"),
  @JsonSubTypes.Type(value = EhrStatus.class, name = "EhrStatus"),
  @JsonSubTypes.Type(value = Element.class, name = "Element"),
  @JsonSubTypes.Type(value = Evaluation.class, name = "Evaluation"),
  @JsonSubTypes.Type(value = Event.class, name = "Event"),
  @JsonSubTypes.Type(value = Folder.class, name = "FOLDER"),
  @JsonSubTypes.Type(value = Folder.class, name = "Folder"),
  @JsonSubTypes.Type(value = History.class, name = "HISTORY"),
  @JsonSubTypes.Type(value = History.class, name = "History"),
  @JsonSubTypes.Type(value = Instruction.class, name = "INSTRUCTION"),
  @JsonSubTypes.Type(value = Item.class, name = "ITEM"),
  @JsonSubTypes.Type(value = ItemList.class, name = "ITEM_LIST"),
  @JsonSubTypes.Type(value = ItemSingle.class, name = "ITEM_SINGLE"),
  @JsonSubTypes.Type(value = ItemStructure.class, name = "ITEM_STRUCTURE"),
  @JsonSubTypes.Type(value = ItemTable.class, name = "ITEM_TABLE"),
  @JsonSubTypes.Type(value = ItemTree.class, name = "ITEM_TREE"),
  @JsonSubTypes.Type(value = Instruction.class, name = "Instruction"),
  @JsonSubTypes.Type(value = Item.class, name = "Item"),
  @JsonSubTypes.Type(value = ItemList.class, name = "ItemList"),
  @JsonSubTypes.Type(value = ItemSingle.class, name = "ItemSingle"),
  @JsonSubTypes.Type(value = ItemStructure.class, name = "ItemStructure"),
  @JsonSubTypes.Type(value = ItemTable.class, name = "ItemTable"),
  @JsonSubTypes.Type(value = ItemTree.class, name = "ItemTree"),
  @JsonSubTypes.Type(value = Observation.class, name = "OBSERVATION"),
  @JsonSubTypes.Type(value = Observation.class, name = "Observation"),
  @JsonSubTypes.Type(value = Versionable.class, name = "Versionable")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
public class Locatable extends Pathable {

  @JsonProperty("name")
  private DvText name;

  @JsonProperty("archetype_node_id")
  private String archetypeNodeId;

  @JsonProperty("uid")
  private UidBasedId uid;

  @JsonProperty("links")
  @Valid
  private List<Link> links = null;

  @JsonProperty("archetype_details")
  private Archetyped archetypeDetails;

  @JsonProperty("feeder_audit")
  private FeederAudit feederAudit;

  public Locatable name(DvText name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
  */
  @NotNull @Valid 
  @Schema(name = "name", required = true)
  public DvText getName() {
    return name;
  }

  public void setName(DvText name) {
    this.name = name;
  }

  public Locatable archetypeNodeId(String archetypeNodeId) {
    this.archetypeNodeId = archetypeNodeId;
    return this;
  }

  /**
   * Get archetypeNodeId
   * @return archetypeNodeId
  */
  @NotNull 
  @Schema(name = "archetype_node_id", required = true)
  public String getArchetypeNodeId() {
    return archetypeNodeId;
  }

  public void setArchetypeNodeId(String archetypeNodeId) {
    this.archetypeNodeId = archetypeNodeId;
  }

  public Locatable uid(UidBasedId uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Get uid
   * @return uid
  */
  @Valid 
  @Schema(name = "uid", required = false)
  public UidBasedId getUid() {
    return uid;
  }

  public void setUid(UidBasedId uid) {
    this.uid = uid;
  }

  public Locatable links(List<Link> links) {
    this.links = links;
    return this;
  }

  public Locatable addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Get links
   * @return links
  */
  @Valid 
  @Schema(name = "links", required = false)
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public Locatable archetypeDetails(Archetyped archetypeDetails) {
    this.archetypeDetails = archetypeDetails;
    return this;
  }

  /**
   * Get archetypeDetails
   * @return archetypeDetails
  */
  @Valid 
  @Schema(name = "archetype_details", required = false)
  public Archetyped getArchetypeDetails() {
    return archetypeDetails;
  }

  public void setArchetypeDetails(Archetyped archetypeDetails) {
    this.archetypeDetails = archetypeDetails;
  }

  public Locatable feederAudit(FeederAudit feederAudit) {
    this.feederAudit = feederAudit;
    return this;
  }

  /**
   * Get feederAudit
   * @return feederAudit
  */
  @Valid 
  @Schema(name = "feeder_audit", required = false)
  public FeederAudit getFeederAudit() {
    return feederAudit;
  }

  public void setFeederAudit(FeederAudit feederAudit) {
    this.feederAudit = feederAudit;
  }

  public Locatable type(String type) {
    super.setType(type);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Locatable locatable = (Locatable) o;
    return Objects.equals(this.name, locatable.name) &&
        Objects.equals(this.archetypeNodeId, locatable.archetypeNodeId) &&
        Objects.equals(this.uid, locatable.uid) &&
        Objects.equals(this.links, locatable.links) &&
        Objects.equals(this.archetypeDetails, locatable.archetypeDetails) &&
        Objects.equals(this.feederAudit, locatable.feederAudit) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, archetypeNodeId, uid, links, archetypeDetails, feederAudit, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Locatable {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    archetypeNodeId: ").append(toIndentedString(archetypeNodeId)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    archetypeDetails: ").append(toIndentedString(archetypeDetails)).append("\n");
    sb.append("    feederAudit: ").append(toIndentedString(feederAudit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

