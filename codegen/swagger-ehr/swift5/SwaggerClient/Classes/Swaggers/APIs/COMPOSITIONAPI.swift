//
// COMPOSITIONAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class COMPOSITIONAPI {
    /**
     * enum for parameter prefer
     */
    public enum Prefer_compositionCreate: String { 
        case representation = "return=representation"
        case minimal = "return=minimal"
    }

    /**
     Create COMPOSITION

     - parameter body: (body) The COMPOSITION.
 
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to return=minimal)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func compositionCreate(body: Composition, ehrId: String, prefer: Prefer_compositionCreate? = nil, completion: @escaping ((_ data: Composition?,_ error: Error?) -> Void)) {
        compositionCreateWithRequestBuilder(body: body, ehrId: ehrId, prefer: prefer).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Create COMPOSITION
     - POST /ehr/{ehr_id}/composition

     - responseHeaders: [ETag(String), Location(String)]
     - responseHeaders: [ETag(String), Location(String)]
     - examples: [{contentType=application/json, example={
  "archetype_node_id" : "openEHR-EHR-COMPOSITION.encounter.v1",
  "name" : {
    "value" : "Vital Signs"
  },
  "uid" : {
    "_type" : "OBJECT_VERSION_ID",
    "value" : "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
  },
  "archetype_details" : {
    "archetype_id" : {
      "value" : "openEHR-EHR-COMPOSITION.encounter.v1"
    },
    "template_id" : {
      "value" : "Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747"
    },
    "rm_version" : "1.0.2"
  },
  "language" : {
    "terminology_id" : {
      "value" : "ISO_639-1"
    },
    "code_string" : "en"
  },
  "territory" : {
    "terminology_id" : {
      "value" : "ISO_3166-1"
    },
    "code_string" : "NL"
  },
  "category" : {
    "value" : "event",
    "defining_code" : {
      "terminology_id" : {
        "value" : "openehr"
      },
      "code_string" : "433"
    }
  },
  "composer" : {
    "_type" : "PARTY_IDENTIFIED",
    "external_ref" : {
      "id" : {
        "_type" : "GENERIC_ID",
        "value" : "16b74749-e6aa-4945-b760-b42bdc07098a",
        "scheme" : "pid"
      },
      "namespace" : "openEHRSys.example.com",
      "type" : "PERSON"
    },
    "name" : "A name"
  },
  "context" : {
    "start_time" : {
      "value" : "2014-11-18T09:50:35.000+01:00"
    },
    "setting" : {
      "value" : "other care",
      "defining_code" : {
        "terminology_id" : {
          "value" : "openehr"
        },
        "code_string" : "238"
      }
    }
  },
  "content" : [ ]
}}]
     - parameter body: (body) The COMPOSITION.
 
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to return=minimal)

     - returns: RequestBuilder<Composition> 
     */
    open class func compositionCreateWithRequestBuilder(body: Composition, ehrId: String, prefer: Prefer_compositionCreate? = nil) -> RequestBuilder<Composition> {
        var path = "/ehr/{ehr_id}/composition"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Prefer": prefer?.rawValue
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Composition>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     Delete COMPOSITION

     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter uidBasedId: (path) An identifier in a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a &#x60;version_uid&#x60;).  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func compositionDelete(ehrId: String, uidBasedId: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        compositionDeleteWithRequestBuilder(ehrId: ehrId, uidBasedId: uidBasedId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Delete COMPOSITION
     - DELETE /ehr/{ehr_id}/composition/{uid_based_id}

     - responseHeaders: [ETag(String), Location(String)]
     - responseHeaders: [ETag(String), Location(String)]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter uidBasedId: (path) An identifier in a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a &#x60;version_uid&#x60;).  

     - returns: RequestBuilder<Void> 
     */
    open class func compositionDeleteWithRequestBuilder(ehrId: String, uidBasedId: String) -> RequestBuilder<Void> {
        var path = "/ehr/{ehr_id}/composition/{uid_based_id}"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let uidBasedIdPreEscape = "\(uidBasedId)"
        let uidBasedIdPostEscape = uidBasedIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{uid_based_id}", with: uidBasedIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get COMPOSITION

     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter uidBasedId: (path) An abstract identifier: it can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a &#x60;version_uid&#x60;), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a &#x60;versioned_object_uid&#x60;).  
     - parameter versionAtTime: (query) A given time in the extended ISO 8601 format.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func compositionGet(ehrId: String, uidBasedId: String, versionAtTime: String? = nil, completion: @escaping ((_ data: Composition?,_ error: Error?) -> Void)) {
        compositionGetWithRequestBuilder(ehrId: ehrId, uidBasedId: uidBasedId, versionAtTime: versionAtTime).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get COMPOSITION
     - GET /ehr/{ehr_id}/composition/{uid_based_id}

     - responseHeaders: [ETag(String), Location(String)]
     - responseHeaders: [ETag(String), Location(String)]
     - examples: [{contentType=application/json, example={
  "archetype_node_id" : "openEHR-EHR-COMPOSITION.encounter.v1",
  "name" : {
    "value" : "Vital Signs"
  },
  "uid" : {
    "_type" : "OBJECT_VERSION_ID",
    "value" : "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
  },
  "archetype_details" : {
    "archetype_id" : {
      "value" : "openEHR-EHR-COMPOSITION.encounter.v1"
    },
    "template_id" : {
      "value" : "Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747"
    },
    "rm_version" : "1.0.2"
  },
  "language" : {
    "terminology_id" : {
      "value" : "ISO_639-1"
    },
    "code_string" : "en"
  },
  "territory" : {
    "terminology_id" : {
      "value" : "ISO_3166-1"
    },
    "code_string" : "NL"
  },
  "category" : {
    "value" : "event",
    "defining_code" : {
      "terminology_id" : {
        "value" : "openehr"
      },
      "code_string" : "433"
    }
  },
  "composer" : {
    "_type" : "PARTY_IDENTIFIED",
    "external_ref" : {
      "id" : {
        "_type" : "GENERIC_ID",
        "value" : "16b74749-e6aa-4945-b760-b42bdc07098a",
        "scheme" : "pid"
      },
      "namespace" : "openEHRSys.example.com",
      "type" : "PERSON"
    },
    "name" : "A name"
  },
  "context" : {
    "start_time" : {
      "value" : "2014-11-18T09:50:35.000+01:00"
    },
    "setting" : {
      "value" : "other care",
      "defining_code" : {
        "terminology_id" : {
          "value" : "openehr"
        },
        "code_string" : "238"
      }
    }
  },
  "content" : [ ]
}}]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter uidBasedId: (path) An abstract identifier: it can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a &#x60;version_uid&#x60;), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a &#x60;versioned_object_uid&#x60;).  
     - parameter versionAtTime: (query) A given time in the extended ISO 8601 format.  (optional)

     - returns: RequestBuilder<Composition> 
     */
    open class func compositionGetWithRequestBuilder(ehrId: String, uidBasedId: String, versionAtTime: String? = nil) -> RequestBuilder<Composition> {
        var path = "/ehr/{ehr_id}/composition/{uid_based_id}"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let uidBasedIdPreEscape = "\(uidBasedId)"
        let uidBasedIdPostEscape = uidBasedIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{uid_based_id}", with: uidBasedIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "version_at_time": versionAtTime
        ])


        let requestBuilder: RequestBuilder<Composition>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     * enum for parameter prefer
     */
    public enum Prefer_compositionUpdate: String { 
        case representation = "return=representation"
        case minimal = "return=minimal"
    }

    /**
     Update COMPOSITION

     - parameter body: (body) The new COMPOSITION.
 
     - parameter ifMatch: (header) Header to make the request conditional.  Together with &#x60;ETag&#x60; request tag, it helps to prevent simultaneous updates of a resource from overwriting each other (\&quot;mid-air collisions\&quot;). The format is always an &#x60;version_uid&#x60; identifier enclosed by double quotes. The operation will be performed only if the existing latest &#x60;version_uid&#x60; of the resource (i.e. the &#x60;preceding_version_uid&#x60;) matches this header&#x27;s value.  
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter uidBasedId: (path) An identifier in a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a &#x60;versioned_object_uid&#x60;).  
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to return=minimal)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func compositionUpdate(body: Composition, ifMatch: String, ehrId: String, uidBasedId: String, prefer: Prefer_compositionUpdate? = nil, completion: @escaping ((_ data: Composition?,_ error: Error?) -> Void)) {
        compositionUpdateWithRequestBuilder(body: body, ifMatch: ifMatch, ehrId: ehrId, uidBasedId: uidBasedId, prefer: prefer).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Update COMPOSITION
     - PUT /ehr/{ehr_id}/composition/{uid_based_id}

     - responseHeaders: [ETag(String), Location(String)]
     - responseHeaders: [ETag(String), Location(String)]
     - examples: [{contentType=application/json, example={
  "archetype_node_id" : "openEHR-EHR-COMPOSITION.encounter.v1",
  "name" : {
    "value" : "Vital Signs"
  },
  "uid" : {
    "_type" : "OBJECT_VERSION_ID",
    "value" : "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
  },
  "archetype_details" : {
    "archetype_id" : {
      "value" : "openEHR-EHR-COMPOSITION.encounter.v1"
    },
    "template_id" : {
      "value" : "Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747"
    },
    "rm_version" : "1.0.2"
  },
  "language" : {
    "terminology_id" : {
      "value" : "ISO_639-1"
    },
    "code_string" : "en"
  },
  "territory" : {
    "terminology_id" : {
      "value" : "ISO_3166-1"
    },
    "code_string" : "NL"
  },
  "category" : {
    "value" : "event",
    "defining_code" : {
      "terminology_id" : {
        "value" : "openehr"
      },
      "code_string" : "433"
    }
  },
  "composer" : {
    "_type" : "PARTY_IDENTIFIED",
    "external_ref" : {
      "id" : {
        "_type" : "GENERIC_ID",
        "value" : "16b74749-e6aa-4945-b760-b42bdc07098a",
        "scheme" : "pid"
      },
      "namespace" : "openEHRSys.example.com",
      "type" : "PERSON"
    },
    "name" : "A name"
  },
  "context" : {
    "start_time" : {
      "value" : "2014-11-18T09:50:35.000+01:00"
    },
    "setting" : {
      "value" : "other care",
      "defining_code" : {
        "terminology_id" : {
          "value" : "openehr"
        },
        "code_string" : "238"
      }
    }
  },
  "content" : [ ]
}}]
     - parameter body: (body) The new COMPOSITION.
 
     - parameter ifMatch: (header) Header to make the request conditional.  Together with &#x60;ETag&#x60; request tag, it helps to prevent simultaneous updates of a resource from overwriting each other (\&quot;mid-air collisions\&quot;). The format is always an &#x60;version_uid&#x60; identifier enclosed by double quotes. The operation will be performed only if the existing latest &#x60;version_uid&#x60; of the resource (i.e. the &#x60;preceding_version_uid&#x60;) matches this header&#x27;s value.  
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter uidBasedId: (path) An identifier in a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a &#x60;versioned_object_uid&#x60;).  
     - parameter prefer: (header) Request header to indicate the preference over response details. The response will contain the entire resource when the &#x60;Prefer&#x60; header has a value of &#x60;return&#x3D;representation&#x60;.  (optional, default to return=minimal)

     - returns: RequestBuilder<Composition> 
     */
    open class func compositionUpdateWithRequestBuilder(body: Composition, ifMatch: String, ehrId: String, uidBasedId: String, prefer: Prefer_compositionUpdate? = nil) -> RequestBuilder<Composition> {
        var path = "/ehr/{ehr_id}/composition/{uid_based_id}"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let uidBasedIdPreEscape = "\(uidBasedId)"
        let uidBasedIdPostEscape = uidBasedIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{uid_based_id}", with: uidBasedIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "If-Match": ifMatch,
                        "Prefer": prefer?.rawValue
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Composition>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }
    /**
     Get versioned COMPOSITION

     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func versionedCompositionGet(ehrId: String, versionedObjectUid: String, completion: @escaping ((_ data: VersionedComposition?,_ error: Error?) -> Void)) {
        versionedCompositionGetWithRequestBuilder(ehrId: ehrId, versionedObjectUid: versionedObjectUid).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get versioned COMPOSITION
     - GET /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}

     - examples: [{contentType=application/json, example={
  "uid" : {
    "value" : "8849182c-82ad-4088-a07f-48ead4180515"
  },
  "owner_id" : {
    "id" : {
      "_type" : "HIER_OBJECT_ID",
      "value" : "7d44b88c-4199-4bad-97dc-d78268e01398"
    },
    "namespace" : "local",
    "type" : "EHR"
  },
  "time_created" : {
    "value" : "2015-01-20T19:30:22.765+01:00"
  }
}}]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  

     - returns: RequestBuilder<VersionedComposition> 
     */
    open class func versionedCompositionGetWithRequestBuilder(ehrId: String, versionedObjectUid: String) -> RequestBuilder<VersionedComposition> {
        var path = "/ehr/{ehr_id}/versioned_composition/{versioned_object_uid}"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let versionedObjectUidPreEscape = "\(versionedObjectUid)"
        let versionedObjectUidPostEscape = versionedObjectUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versioned_object_uid}", with: versionedObjectUidPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<VersionedComposition>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get versioned COMPOSITION revision history

     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func versionedCompositionRevisionHistory(ehrId: String, versionedObjectUid: String, completion: @escaping ((_ data: RevisionHistory?,_ error: Error?) -> Void)) {
        versionedCompositionRevisionHistoryWithRequestBuilder(ehrId: ehrId, versionedObjectUid: versionedObjectUid).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get versioned COMPOSITION revision history
     - GET /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/revision_history

     - examples: [{contentType=application/json, example={
  "items" : [ {
    "version_id" : {
      "value" : "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
    },
    "audits" : [ {
      "system_id" : "d60e2348-b083-48ce-93b9-916cef1d3a5a",
      "time_committed" : {
        "value" : "2015-01-20T19:30:22.765+01:00"
      },
      "change_type" : {
        "value" : "creation",
        "defining_code" : {
          "terminology_id" : {
            "value" : "openehr"
          },
          "code_string" : "249"
        }
      },
      "description" : {
        "value" : "An optional description string"
      },
      "committer" : {
        "_type" : "PARTY_IDENTIFIED",
        "name" : "A user name"
      }
    } ]
  }, {
    "version_id" : {
      "value" : "8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"
    },
    "audits" : [ {
      "system_id" : "d60e2348-b083-48ce-93b9-916cef1d3a5a",
      "time_committed" : {
        "value" : "2015-01-20T19:30:22.765+01:00"
      },
      "change_type" : {
        "value" : "creation",
        "defining_code" : {
          "terminology_id" : {
            "value" : "openehr"
          },
          "code_string" : "249"
        }
      },
      "description" : {
        "value" : "An optional description string"
      },
      "committer" : {
        "_type" : "PARTY_IDENTIFIED",
        "name" : "A user name"
      }
    } ]
  } ]
}}]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  

     - returns: RequestBuilder<RevisionHistory> 
     */
    open class func versionedCompositionRevisionHistoryWithRequestBuilder(ehrId: String, versionedObjectUid: String) -> RequestBuilder<RevisionHistory> {
        var path = "/ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/revision_history"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let versionedObjectUidPreEscape = "\(versionedObjectUid)"
        let versionedObjectUidPostEscape = versionedObjectUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versioned_object_uid}", with: versionedObjectUidPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<RevisionHistory>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get versioned COMPOSITION version at time

     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  
     - parameter versionAtTime: (query) A given time in the extended ISO 8601 format.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func versionedCompositionVersionGetAtTime(ehrId: String, versionedObjectUid: String, versionAtTime: String? = nil, completion: @escaping ((_ data: Version?,_ error: Error?) -> Void)) {
        versionedCompositionVersionGetAtTimeWithRequestBuilder(ehrId: ehrId, versionedObjectUid: versionedObjectUid, versionAtTime: versionAtTime).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get versioned COMPOSITION version at time
     - GET /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version

     - responseHeaders: [ETag(String), Location(String)]
     - responseHeaders: [ETag(String), Location(String)]
     - examples: [{contentType=application/json, example={
  "contribution" : {
    "id" : {
      "_type" : "OBJECT_VERSION_ID",
      "value" : "fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1"
    },
    "namespace" : "local",
    "type" : "COMPOSITION"
  },
  "data" : "",
  "signature" : "signature",
  "_type" : "_type",
  "commit_audit" : {
    "system_id" : "9624982A-9F42-41A5-9318-AE13D5F5031F",
    "committer" : {
      "_type" : "PARTY_IDENTIFIED",
      "name" : "A user name"
    },
    "time_committed" : {
      "value" : "2017-08-15T10:37:15.422+02:00"
    },
    "change_type" : {
      "value" : "creation",
      "defining_code" : {
        "terminology_id" : {
          "value" : "openehr"
        },
        "code_string" : "249"
      }
    },
    "description" : {
      "value" : "Description text"
    }
  }
}}]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  
     - parameter versionAtTime: (query) A given time in the extended ISO 8601 format.  (optional)

     - returns: RequestBuilder<Version> 
     */
    open class func versionedCompositionVersionGetAtTimeWithRequestBuilder(ehrId: String, versionedObjectUid: String, versionAtTime: String? = nil) -> RequestBuilder<Version> {
        var path = "/ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let versionedObjectUidPreEscape = "\(versionedObjectUid)"
        let versionedObjectUidPostEscape = versionedObjectUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versioned_object_uid}", with: versionedObjectUidPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "version_at_time": versionAtTime
        ])


        let requestBuilder: RequestBuilder<Version>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get versioned COMPOSITION version by id

     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  
     - parameter versionUid: (path) VERSION identifier taken from VERSION.uid.value.  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func versionedCompositionVersionGetById(ehrId: String, versionedObjectUid: String, versionUid: String, completion: @escaping ((_ data: Version?,_ error: Error?) -> Void)) {
        versionedCompositionVersionGetByIdWithRequestBuilder(ehrId: ehrId, versionedObjectUid: versionedObjectUid, versionUid: versionUid).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get versioned COMPOSITION version by id
     - GET /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version/{version_uid}

     - examples: [{contentType=application/json, example={
  "contribution" : {
    "id" : {
      "_type" : "OBJECT_VERSION_ID",
      "value" : "fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1"
    },
    "namespace" : "local",
    "type" : "COMPOSITION"
  },
  "data" : "",
  "signature" : "signature",
  "_type" : "_type",
  "commit_audit" : {
    "system_id" : "9624982A-9F42-41A5-9318-AE13D5F5031F",
    "committer" : {
      "_type" : "PARTY_IDENTIFIED",
      "name" : "A user name"
    },
    "time_committed" : {
      "value" : "2017-08-15T10:37:15.422+02:00"
    },
    "change_type" : {
      "value" : "creation",
      "defining_code" : {
        "terminology_id" : {
          "value" : "openehr"
        },
        "code_string" : "249"
      }
    },
    "description" : {
      "value" : "Description text"
    }
  }
}}]
     - parameter ehrId: (path) EHR identifier taken from EHR.ehr_id.value.  
     - parameter versionedObjectUid: (path) VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.  
     - parameter versionUid: (path) VERSION identifier taken from VERSION.uid.value.  

     - returns: RequestBuilder<Version> 
     */
    open class func versionedCompositionVersionGetByIdWithRequestBuilder(ehrId: String, versionedObjectUid: String, versionUid: String) -> RequestBuilder<Version> {
        var path = "/ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version/{version_uid}"
        let ehrIdPreEscape = "\(ehrId)"
        let ehrIdPostEscape = ehrIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{ehr_id}", with: ehrIdPostEscape, options: .literal, range: nil)
        let versionedObjectUidPreEscape = "\(versionedObjectUid)"
        let versionedObjectUidPostEscape = versionedObjectUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{versioned_object_uid}", with: versionedObjectUidPostEscape, options: .literal, range: nil)
        let versionUidPreEscape = "\(versionUid)"
        let versionUidPostEscape = versionUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{version_uid}", with: versionUidPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Version>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
