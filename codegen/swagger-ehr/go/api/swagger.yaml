openapi: 3.0.3
info:
  title: EHR API
  description: |+
    <table>
        <colgroup>
            <col style="width: 20%;">
            <col style="width: 80%;">
        </colgroup>
        <thead>
        <tr>
            <th colspan="2">© 2003 - 2022 The openEHR Foundation</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td colspan="2">
                The <a href="https://www.openEHR.org" target="_blank" rel="noopener">openEHR Foundation</a> is an independent, non-profit foundation, facilitating the sharing of health records by consumers and clinicians via open specifications, clinical models and open platform implementations.
            </td>
        </tr>
        <tr>
            <td><strong>Licence</strong></td>
            <td><span class="image"><img src="https://specifications.openehr.org/images/cc-by-nd-88x31.png" alt="image"></span> Creative Commons Attribution-NoDerivs 3.0 Unported.
                <a href="https://creativecommons.org/licenses/by-nd/3.0/" class="bare">https://creativecommons.org/licenses/by-nd/3.0/</a>
            </td>
        </tr>
        <tr>
            <td><strong>Support</strong></td>
            <td>Issues: <a href="https://specifications.openehr.org/components/ITS/open_issues" target="_blank" rel="noopener">Problem Reports</a><br>
                Web: <a href="https://specifications.openehr.org" target="_blank" rel="noopener">specifications.openEHR.org</a>
            </td>
        </tr>
        </tbody>
    </table>

    ### Amendment Record

    <table>
        <colgroup>
            <col style="width: 9%;">
            <col style="width: 55%;">
            <col style="width: 18%;">
            <col style="width: 18%;">
        </colgroup>
        <thead>
        <tr>
            <th>Issue</th>
            <th>Details</th>
            <th>Raiser, Implementer</th>
            <th>Completed</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/latest" target="_blank" rel="noopener">Release-1.0.3 (unreleased)</a></th>
        </tr>
        <tr>
            <td>5.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-66" target="_blank" rel="noopener">SPECITS-66</a>:
                Migrate REST API specs to openAPI format</td>
            <td>S Iancu</td>
            <td>14 Nov 2022</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.2" target="_blank" rel="noopener">Release-1.0.2</a></th>
        </tr>
        <tr>
            <td>4.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-41" target="_blank" rel="noopener">SPECITS-41</a>:
                Add double quotes to ETag and If-Match headers</td>
            <td>S Iancu</td>
            <td>21 Mar 2021</td>
        </tr>
        <tr>
            <td>4.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-49" target="_blank" rel="noopener">SPECITS-49</a>:
                Describing Resource Identification; add clarification over getting COMPOSITIONs by with `version_uid` vs `versioned_object_uid`</td>
            <td>J Smolka, M Polajnar, S Iancu</td>
            <td>08 Mar 2021</td>
        </tr>
        <tr>
            <td>4.0</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-52" target="_blank" rel="noopener">SPECITS-52</a>:
                Fix wrong example on revision history of the VERSIONED_COMPOSITION and VERSIONED_EHR_STATUS</td>
            <td>J Smolka, S Iancu</td>
            <td>06 Mar 2021</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.1" target="_blank" rel="noopener">Release-1.0.1</a></th>
        </tr>
        <tr>
            <td>3.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-38" target="_blank" rel="noopener">SPECITS-38</a>:
                Fix response status code for semantic validation errors (fixes also
                <a href="https://specifications.openehr.org/tickets/SPECPR-298" target="_blank" rel="noopener">SPECPR-298</a>)</td>
            <td>P Pazos, S Iancu</td>
            <td>01 Oct 2019</td>
        </tr>
        <tr>
            <td>3.1</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-40" target="_blank" rel="noopener">SPECITS-40</a>:
                Fix and improve documentation on EHR (fixes also
                <a href="https://specifications.openehr.org/tickets/SPECPR-312" target="_blank" rel="noopener">SPECPR-312</a>)</td>
            <td>P Pazos, S Iancu</td>
            <td>28 Sep 2019</td>
        </tr>
        <tr>
            <td>3.0</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-32" target="_blank" rel="noopener">SPECITS-32</a>: Fix typos and minor documentary errors (fixes
                <a href="https://specifications.openehr.org/tickets/SPECPR-252" target="_blank" rel="noopener">SPECPR-253</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-255" target="_blank" rel="noopener">SPECPR-255</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-298" target="_blank" rel="noopener">SPECPR-298</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-333" target="_blank" rel="noopener">SPECPR-333</a>,
                <a href="https://specifications.openehr.org/tickets/SPECPR-337" target="_blank" rel="noopener">SPECPR-337</a>)</td>
            <td>J Smolka, P Pazos, E Sundvall, T Beale, S Iancu</td>
            <td>1 Sep 2019</td>
        </tr>
        <tr>
            <td>2.2</td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-24" target="_blank" rel="noopener">SPECITS-24</a>: Added changelog</td>
            <td>J Smolka, S Iancu</td>
            <td>12 May 2019</td>
        </tr>
        <tr>
            <td></td>
            <td><a href="https://specifications.openehr.org/tickets/SPECITS-25" target="_blank" rel="noopener">SPECITS-25</a>,
                <a href="https://specifications.openehr.org/tickets/SPECITS-29" target="_blank" rel="noopener">SPECITS-29</a>: Change layout and structure</td>
            <td>J Smolka, S Iancu</td>
            <td>12 May 2019</td>
        </tr>
        <tr>
            <td>2.1</td>
            <td>Update links to new openEHR specifications website</td>
            <td>S Iancu</td>
            <td>16 Dec 2018</td>
        </tr>
        <tr>
            <th colspan="4"><a href="https://specifications.openehr.org/releases/ITS-REST/Release-1.0.0" target="_blank" rel="noopener">Release-1.0.0</a></th>
        </tr>
        </tbody>
    </table>


    # Intro


    ## Acknowledgements

    ### Editor
    - Sebastian Iancu, Architect, Code24, Netherlands

    ### Contributors
    This specification benefited from wide formal and informal input from the openEHR and wider health informatics community. The openEHR Foundation would like to recognise the following people for their contributions.
    - Birger Haarbrandt, MSc, Peter L. Reichertz Institut for Medical Informatics (PLRI), Germany
    - Bjørn Næss, DIPS, Norway
    - Bostjan Lah, Senior Architect, Better, Slovenia
    - Erik Sundvall, Information Architect at Karolinska University Hospital, Sweden
    - Heath Frankel, Ocean Informatics, Australia
    - Ian McNicoll MD, FreshEHR, UK
    - Jake Smolka, Software Engineer, Better, Slovenia
    - Matija Polajnar, PhD, Software Engineer, Better, Slovenia
    - Pablo Pazos Gutierrez, Senior engineer, CaboLabs, Uruguay
    - Rong Chen MD, PhD, Cambio Healthcare Systems, Sweden
    - Sebastian Iancu, Architect, Code24, Netherlands
    - Seref Arikan, MEcon, Ocean Informatics UK, Centre for Health Informatics and Multi-professional Education (CHIME) UK
    - Thomas Beale, Ars Semantica UK, openEHR Foundation Management Board

    ### Trademarks
    - 'openEHR' is a trademark of the [openEHR Foundation](https://www.openEHR.org)
    - 'OpenAPI' is a trademark of the [The Linux Foundation](https://www.linuxfoundation.org)


    ## Preface

    ### Purpose

    This specification describes service endpoints, resources and operations as well as details of requests and responses that interacts with EHR openEHR API in a RESTful manner.

    ### Related Documents

    Prerequisite documents for reading this document include:

    - The [EHR Information Model](https://specifications.openehr.org/releases/RM/latest/ehr.html#_the_ehr_information_model)

    Related documents include:

    - The [openEHR Architecture Overview](https://specifications.openehr.org/releases/BASE/latest/architecture_overview.html)
    - The [openEHR Global Class Index](https://specifications.openehr.org/classes)
    - The [XML-Schemas (XSD)](https://specifications.openehr.org/releases/ITS-XML/latest)
    - The [JSON-Schemas](https://specifications.openehr.org/releases/ITS-JSON/latest) and [Simplified Data Template (SDT)](simplified_data_template.html)
    - The [openEHR Platform Abstract Service Model](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html)

    ### Status

    This specification is in the `STABLE` state, and can be downloaded as [OpenAPI specification](https://spec.openapis.org/oas/v3.0.3) file (in yaml format) [for validation](computable/OAS/ehr-validation.openapi.yaml), or [for code generators](computable/OAS/ehr-codegen.openapi.yaml).
    Users are encouraged to comment on and/or advise on these paragraphs as well as the main content.

    The development version of this document can be found at <https://specifications.openehr.org/releases/ITS-REST/latest/ehr.html>.

    ### Feedback

    Feedback may be provided on the [Implementation Technology Specifications forum](https://discourse.openehr.org/c/specifications/its/41).

    Issues may be raised on the [specifications Problem Report tracker](https://openehr.atlassian.net/browse/SPECPR).

    To see changes made due to previously reported issues, see the [ITS component Change Request tracker](https://specifications.openehr.org/components/ITS/history).

    ### Conformance

    tbd.

  contact:
    name: Specifications Editorial Committee openEHR
    url: https://specifications.openehr.org/
    email: info@openehr.org
  license:
    name: Creative Commons Attribution-NoDerivs 3.0 Unported
    url: https://creativecommons.org/licenses/by-nd/3.0/
  version: latest
  x-status: STABLE
  x-spec: ehr
servers:
- url: "https://{baseUrl}/v1"
  description: An example openEHR server URL.
  variables:
    baseUrl:
      description: "The (example) server base URL prefix providing openEHR services.\
        \ This may contain server name, port and base path prefix."
      default: openEHRSys.example.com
tags:
- name: EHR
  description: |
    Management of [EHRs](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_class).
    Actions upon resources of this group are also formally described in the [I_EHR_SERVICE](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_service_interface) Abstract Service Model interface.
- name: EHR_STATUS
  description: |
    Management of [EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_status_class) and [VERSIONED_EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_ehr_status_class) resources.
    Actions upon resources of this group are also formally described in the [I_EHR_STATUS](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_status_interface) Abstract Service Model interface.
- name: COMPOSITION
  description: |
    Management of [COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_composition_class) and [VERSIONED_COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_composition_class) resources.
    Actions upon resources of this group are also formally described in the [I_EHR_COMPOSITION](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_composition_interface) Abstract Service Model interface.
- name: DIRECTORY
  description: |
    Management of the [directory](https://specifications.openehr.org/releases/RM/latest/ehr.html#_directory) [FOLDER](https://specifications.openehr.org/releases/RM/latest/common.html#_folder_class) resource.
    Actions upon resources of this group are also formally described in the [I_EHR_DIRECTORY](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_directory_interface) Abstract Service Model interface.
- name: CONTRIBUTION
  description: |
    Management of [CONTRIBUTION](https://specifications.openehr.org/releases/RM/latest/common.html#_contribution_class) resource.
    Actions upon resources of this group are also formally described in the [I_EHR_CONTRIBUTION](https://specifications.openehr.org/releases/SM/latest/openehr_platform.html#_i_ehr_contribution_interface) Abstract Service Model interface.
- name: EHR_schema
  description: |
    This is related to [EHR](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_class).

    <SchemaDefinition schemaRef="#/components/schemas/Ehr" />
  x-displayName: EHR
- name: EHR_STATUS_schema
  description: |
    This is related to [EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_status_class) and [VERSIONED_EHR_STATUS](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_ehr_status_class).

    <SchemaDefinition schemaRef="#/components/schemas/EhrStatus" />
    <SchemaDefinition schemaRef="#/components/schemas/VersionedEhrStatus" />
  x-displayName: EHR_STATUS
- name: COMPOSITION_schema
  description: |
    This is related to [COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_composition_class) and [VERSIONED_COMPOSITION](https://specifications.openehr.org/releases/RM/latest/ehr.html#_versioned_composition_class).

    <SchemaDefinition schemaRef="#/components/schemas/Composition" />
    <SchemaDefinition schemaRef="#/components/schemas/VersionedComposition" />
  x-displayName: COMPOSITION
- name: DIRECTORY_schema
  description: |
    This is related to [directory](https://specifications.openehr.org/releases/RM/latest/ehr.html#_directory) [FOLDER](https://specifications.openehr.org/releases/RM/latest/common.html#_folder_class).

    <SchemaDefinition schemaRef="#/components/schemas/Folder" />
  x-displayName: DIRECTORY
- name: ITEM_STRUCTURE_schema
  description: |
    This is related to [ITEM_STRUCTURE](https://specifications.openehr.org/releases/RM/latest/data_structures.html#_item_structure_class).

    <SchemaDefinition schemaRef="#/components/schemas/ItemStructure" />
  x-displayName: ITEM_STRUCTURE
- name: CONTRIBUTION_schema
  description: |
    This is related to [CONTRIBUTION](https://specifications.openehr.org/releases/RM/latest/common.html#_contribution_class).

    <SchemaDefinition schemaRef="#/components/schemas/Contribution" />
  x-displayName: CONTRIBUTION
paths:
  /ehr:
    get:
      tags:
      - EHR
      summary: Get EHR by subject id
      description: "Retrieve the EHR with the specified `subject_id` and `subject_namespace`.\n\
        \nThese subject parameters will be matched against EHR's EHR_STATUS.subject.external_ref.id.value\
        \ and \nEHR_STATUS.subject.external_ref.namespace values.\n"
      operationId: ehr_get_by_subject
      parameters:
      - name: subject_id
        in: query
        description: |
          The EHR subject id.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: ins01
      - name: subject_namespace
        in: query
        description: |
          The EHR subject id namespace.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: examples
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested EHR resource is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ehr'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with supplied subject parameters does not exist.
    post:
      tags:
      - EHR
      summary: Create EHR
      description: "Create a new `EHR` with an auto-generated identifier.\n\nAn EHR_STATUS\
        \ resource needs to be always created and committed in the new EHR.\nThis\
        \ resource MAY be also supplied by the client as the request body. \nIf not\
        \ supplied, a default EHR_STATUS will be used by the service with following\
        \ attributes:\n  - `is_queryable`: true\n  - `is_modifiable`: true\n  - `subject`:\
        \ a PARTY_SELF object\n\nAll other required EHR attributes and resources will\
        \ be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).\n"
      operationId: ehr_create
      parameters:
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          An EHR_STATUS resource MAY be also supplied by the client as the request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EhrStatus'
        required: false
      responses:
        "201":
          description: "`201 Created` is returned when the EHR has been successfully\
            \ created. \nThe new EHR resource is returned in the body when the request's\
            \ `Prefer` header value is `return=representation`, otherwise only headers\
            \ are returned.\n"
          headers:
            ETag:
              $ref: '#/components/headers/ETag_EHR'
            Location:
              $ref: '#/components/headers/Location_EHR'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ehr'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content.
        "409":
          description: |
            `409 Conflict` Unable to create a new EHR due to a conflict with an already existing EHR with the same subject id, namespace pair, whenever EHR_STATUS is supplied.
  /ehr/{ehr_id}:
    get:
      tags:
      - EHR
      summary: Get EHR by id
      description: |
        Retrieve the EHR with the specified `ehr_id`.
      operationId: ehr_get_by_id
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested EHR resource is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ehr'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
    put:
      tags:
      - EHR
      summary: Create EHR with id
      description: "Create a new EHR with the specified `ehr_id` identifier.\n\nThe\
        \ value of the `ehr_id` unique identifier MUST be valid [HIER_OBJECT_ID](https://specifications.openehr.org/releases/BASE/latest/base_types.html#_hier_object_id_class)\
        \ value. \nIt is strongly RECOMMENDED that an UUID always be used for this.\n\
        \nAn EHR_STATUS resource needs to be always created and committed in the new\
        \ EHR.\nThis resource MAY be also supplied by the client as the request body.\
        \ \nIf not supplied, a default EHR_STATUS will be used by the service with\
        \ following attributes:\n  - `is_queryable`: true\n  - `is_modifiable`: true\n\
        \  - `subject`: a PARTY_SELF object\n\nAll other required EHR attributes and\
        \ resources will be automatically created as needed by the [EHR creation semantics](https://specifications.openehr.org/releases/RM/latest/ehr.html#_ehr_creation_semantics).\n"
      operationId: ehr_create_with_id
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          An EHR_STATUS resource MAY be also supplied by the client as the request body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EhrStatus'
        required: false
      responses:
        "201":
          description: "`201 Created` is returned when the EHR has been successfully\
            \ created. \nThe new EHR resource is returned in the body when the request's\
            \ `Prefer` header value is `return=representation`, otherwise only headers\
            \ are returned.\n"
          headers:
            ETag:
              $ref: '#/components/headers/ETag_EHR'
            Location:
              $ref: '#/components/headers/Location_EHR'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ehr'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content.
        "409":
          description: "`409 Conflict` Unable to create a new EHR due to a conflict\
            \ with an already existing EHR. \nCan happen when the supplied `ehr_id`\
            \ is already used by an existing EHR.\n"
  /ehr/{ehr_id}/ehr_status/{version_uid}:
    get:
      tags:
      - EHR_STATUS
      summary: Get EHR_STATUS by version id
      description: |
        Retrieves a particular version of the EHR_STATUS identified by `version_uid` and associated with the EHR identified by `ehr_id`.
      operationId: ehr_status_get_by_version_id
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: version_uid
        in: path
        description: |
          VERSION identifier taken from VERSION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested EHR_STATUS is successfully retrieved.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              $ref: '#/components/headers/Location_EHR_STATUS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EhrStatus'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `version_uid` does not exist.
  /ehr/{ehr_id}/ehr_status:
    get:
      tags:
      - EHR_STATUS
      summary: Get EHR_STATUS at time
      description: |
        Retrieves a version of the EHR_STATUS associated with the EHR identified by `ehr_id`.

        If `version_at_time` is supplied, retrieves the version extant _at specified time_, otherwise retrieves the _latest_ EHR_STATUS version.
      operationId: ehr_status_get_at_time
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: version_at_time
        in: query
        description: |
          A given time in the extended ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2015-01-20T19:30:22.765+01:00
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested EHR_STATUS is successfully retrieved.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              $ref: '#/components/headers/Location_EHR_STATUS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EhrStatus'
        "400":
          description: |
            `400 Bad Request` is returned when the request has invalid content such as an invalid `version_at_time` format.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a version of the resource identified by the request parameters (at specified `version_at_time`) does not exist.
    put:
      tags:
      - EHR_STATUS
      summary: Update EHR_STATUS
      description: |
        Updates EHR_STATUS associated with the EHR identified by `ehr_id`.

        The existing latest `version_uid` of EHR_STATUS resource (i.e. the `preceding_version_uid`) must be specified in the `If-Match` header.

        The response will contain the updated EHR_STATUS resource when the `Prefer` header has a value of `return=representation`.
      operationId: ehr_status_update
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: If-Match
        in: header
        description: "Header to make the request conditional. \nTogether with `ETag`\
          \ request tag, it helps to prevent simultaneous updates of a resource from\
          \ overwriting each other (\"mid-air collisions\").\nThe format is always\
          \ an `version_uid` identifier enclosed by double quotes.\nThe operation\
          \ will be performed only if the existing latest `version_uid` of the resource\
          \ (i.e. the `preceding_version_uid`) matches this header's value.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          The new EHR_STATUS.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EhrStatus'
        required: true
      responses:
        "200":
          description: |
            `200 OK` is returned when the EHR_STATUS is successfully updated, and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              $ref: '#/components/headers/Location_EHR_STATUS'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EhrStatus'
        "204":
          description: |
            `204 No Content` is returned when the `Prefer` header is missing or is set to `return=minimal`.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              $ref: '#/components/headers/Location_EHR_STATUS'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
        "412":
          description: |
            `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
            Returns also latest `version_uid` in the `Location` and `ETag` headers.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
            Location:
              $ref: '#/components/headers/Location_EHR_STATUS'
  /ehr/{ehr_id}/versioned_ehr_status:
    get:
      tags:
      - EHR_STATUS
      summary: Get versioned EHR_STATUS
      description: |
        Retrieves a VERSIONED_EHR_STATUS associated with an EHR identified by `ehr_id`.
      operationId: versioned_ehr_status_get
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested VERSIONED_EHR_STATUS is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedEhrStatus'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
  /ehr/{ehr_id}/versioned_ehr_status/revision_history:
    get:
      tags:
      - EHR_STATUS
      summary: Get versioned EHR_STATUS revision history
      description: |
        Retrieves revision history of the VERSIONED_EHR_STATUS associated with the EHR identified by `ehr_id`.
      operationId: versioned_ehr_status_revision_history
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested REVISION_HISTORY is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionHistory'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
  /ehr/{ehr_id}/versioned_ehr_status/version:
    get:
      tags:
      - EHR_STATUS
      summary: Get versioned EHR_STATUS version at time
      description: |
        Retrieves a VERSION from the VERSIONED_EHR_STATUS associated with the EHR identified by `ehr_id`.

        If `version_at_time` is supplied, retrieves the VERSION extant _at specified time_, otherwise retrieves the _latest_ VERSION.
      operationId: versioned_ehr_status_version_get_at_time
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: version_at_time
        in: query
        description: |
          A given time in the extended ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2015-01-20T19:30:22.765+01:00
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested VERSION is successfully retrieved.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_VERSION'
            Location:
              $ref: '#/components/headers/Location_VERSIONED_EHR_STATUS_VERSION'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        "400":
          description: |
            `400 Bad Request` is returned when the request has invalid content such as an invalid `version_at_time` format.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a version of the resource identified by the request parameters (at specified `version_at_time`) does not exist.
  /ehr/{ehr_id}/versioned_ehr_status/version/{version_uid}:
    get:
      tags:
      - EHR_STATUS
      summary: Get versioned EHR_STATUS version by id
      description: |
        Retrieves a VERSION identified by `version_uid` of an EHR_STATUS associated with the EHR identified by `ehr_id`.
      operationId: versioned_ehr_status_version_get_by_id
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: version_uid
        in: path
        description: |
          VERSION identifier taken from VERSION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested VERSION is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `version_uid` does not exist.
  /ehr/{ehr_id}/composition:
    post:
      tags:
      - COMPOSITION
      summary: Create COMPOSITION
      description: |
        Creates the first version of a new COMPOSITION in the EHR identified by `ehr_id`.
      operationId: composition_create
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          The COMPOSITION.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: true
      responses:
        "201":
          description: "`201 Created` is returned when the COMPOSITION was created.\
            \ \nContent body is only returned when `Prefer` header has `return=representation`,\
            \ otherwise only headers are returned.\n"
          headers:
            ETag:
              $ref: '#/components/headers/ETag_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_COMPOSITION'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request could not be read, or could not be converted to a valid COMPOSITION object).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
        "422":
          description: |
            `422 Unprocessable Entity` is returned when the content could be converted to a COMPOSITION, but there are semantic validation errors, such as the underlying template is not known or is not validating the supplied COMPOSITION.
  /ehr/{ehr_id}/composition/{uid_based_id}:
    get:
      tags:
      - COMPOSITION
      summary: Get COMPOSITION
      description: |
        Retrieves a version of the COMPOSITION identified by `uid_based_id` and associated with the EHR identified by `ehr_id`.

        The `uid_based_id` can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
        The former is used to retrieve a specific known version of the COMPOSITION (e.g. one identified by `8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1`), whereas the later (e.g. an identifier like `8849182c-82ad-4088-a07f-48ead4180515`) is be used to retrieve a version from the version container whenever the _version_tree_id_ is unknown or irrelevant (such as when most recent version is requested).

        When the `uid_based_id` has the form of a HIER_OBJECT_ID, if the `version_at_time` is supplied, retrieves the version extant _at specified time_, otherwise retrieves the _latest_ COMPOSITION version.

        See [Resource identification](overview.html#tag/Resources/Resource-identification) for more details about the identifiers usage and meaning.
      operationId: composition_get
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: uid_based_id
        in: path
        description: |
          An abstract identifier: it can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      - name: version_at_time
        in: query
        description: |
          A given time in the extended ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2015-01-20T19:30:22.765+01:00
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested COMPOSITION is successfully retrieved.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_COMPOSITION'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
        "204":
          description: |
            `204 No Content` is returned when the resource identified by the request parameters (at specified `version_at_time`) time has been deleted.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a version of the resource identified by the request parameters (at specified `version_at_time`) does not exist.
    put:
      tags:
      - COMPOSITION
      summary: Update COMPOSITION
      description: "Updates COMPOSITION identified by `uid_based_id` and associated\
        \ with the EHR identified by `ehr_id`.\n\nThe `uid_based_id` can take only\
        \ a form of an HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value\
        \ (i.e. a `versioned_object_uid`).\n\nIf the request body already contains\
        \ a COMPOSITION.uid.value, it must match the `uid_based_id` in the URL. \n\
        \nThe existing latest `version_uid` of COMPOSITION resource (i.e. the `preceding_version_uid`)\
        \ must be specified in the `If-Match` header.\n"
      operationId: composition_update
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: uid_based_id
        in: path
        description: |
          An identifier in a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515
      - name: If-Match
        in: header
        description: "Header to make the request conditional. \nTogether with `ETag`\
          \ request tag, it helps to prevent simultaneous updates of a resource from\
          \ overwriting each other (\"mid-air collisions\").\nThe format is always\
          \ an `version_uid` identifier enclosed by double quotes.\nThe operation\
          \ will be performed only if the existing latest `version_uid` of the resource\
          \ (i.e. the `preceding_version_uid`) matches this header's value.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          The new COMPOSITION.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Composition'
        required: true
      responses:
        "200":
          description: |
            `200 OK` is returned when the COMPOSITION is successfully updated and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_COMPOSITION'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Composition'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request could not be read, or could not be converted to a valid COMPOSITION object).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `uid_based_id` does not exist.
        "412":
          description: |
            `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
            Returns also latest `version_uid` in the `Location` and `ETag` headers.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_COMPOSITION'
        "422":
          description: |
            `422 Unprocessable Entity` is returned when the content could be converted to a COMPOSITION, but there are semantic validation errors, such as the underlying template is not known or is not validating the supplied COMPOSITION.
    delete:
      tags:
      - COMPOSITION
      summary: Delete COMPOSITION
      description: |
        Deletes the COMPOSITION identified by `uid_based_id` and associated with the EHR identified by `ehr_id`.

        The `uid_based_id` MUST be in a form of an OBJECT_VERSION_ID identifier taken from the last (most recent) VERSION.uid.value, representing the `preceding_version_uid` to be deleted.
      operationId: composition_delete
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: uid_based_id
        in: path
        description: |
          An identifier in a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`).
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      responses:
        "204":
          description: |
            `204 No Content` is returned when COMPOSITION was deleted.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_COMPOSITION'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL could not be parsed (i.e. invalid format of request parameters) or when the resource identified by the request parameters is already deleted.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `uid_based_id` does not exist.
        "409":
          description: |
            `409 Conflict` is returned when supplied `uid_based_id` doesn't match the latest version.
            Returns also latest version in the `Location` and `ETag` headers.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_COMPOSITION'
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}:
    get:
      tags:
      - COMPOSITION
      summary: Get versioned COMPOSITION
      description: |
        Retrieves a VERSIONED_COMPOSITION identified by `versioned_object_uid` and associated with the EHR identified by `ehr_id`.
      operationId: versioned_composition_get
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: versioned_object_uid
        in: path
        description: |
          VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested VERSIONED_COMPOSITION is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedComposition'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `versioned_object_uid` does not exist.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/revision_history:
    get:
      tags:
      - COMPOSITION
      summary: Get versioned COMPOSITION revision history
      description: |
        Retrieves revision history of the VERSIONED_COMPOSITION identified by `versioned_object_uid` and associated with the EHR identified by `ehr_id`.
      operationId: versioned_composition_revision_history
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: versioned_object_uid
        in: path
        description: |
          VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested REVISION_HISTORY is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionHistory'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `versioned_object_uid` does not exist.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version:
    get:
      tags:
      - COMPOSITION
      summary: Get versioned COMPOSITION version at time
      description: |
        Retrieves a VERSION from the VERSIONED_COMPOSITION identified by `versioned_object_uid` and associated with the EHR identified by `ehr_id`.

        If `version_at_time` is supplied, retrieves the VERSION extant _at specified time_, otherwise retrieves the _latest_ VERSION.
      operationId: versioned_composition_version_get_at_time
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: versioned_object_uid
        in: path
        description: |
          VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515
      - name: version_at_time
        in: query
        description: |
          A given time in the extended ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2015-01-20T19:30:22.765+01:00
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested VERSION is successfully retrieved.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_VERSION_of_COMPOSITION'
            Location:
              $ref: '#/components/headers/Location_VERSIONED_COMPOSITION_VERSION'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when `versioned_object_uid` does not exist, or when a version of the resource does not exist at the specified `version_at_time`.
  /ehr/{ehr_id}/versioned_composition/{versioned_object_uid}/version/{version_uid}:
    get:
      tags:
      - COMPOSITION
      summary: Get versioned COMPOSITION version by id
      description: |
        Retrieves a VERSION identified by `version_uid` of a VERSIONED_COMPOSITION identified by `versioned_object_uid` and associated with the EHR identified by `ehr_id`.
      operationId: versioned_composition_version_get_by_id
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: versioned_object_uid
        in: path
        description: |
          VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515
      - name: version_uid
        in: path
        description: |
          VERSION identifier taken from VERSION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
      responses:
        "200":
          description: |
            `200 OK` is returned when the requested VERSION is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when `versioned_object_uid` does not exist, or when a VERSION with `version_uid` does not exist.
  /ehr/{ehr_id}/directory:
    get:
      tags:
      - DIRECTORY
      summary: Get folder in directory version at time
      description: "Retrieves the version of the directory FOLDER associated with\
        \ the EHR identified by `ehr_id`. \nIf `version_at_time` is supplied, retrieves\
        \ the version extant _at specified time_, otherwise retrieves the _latest_\
        \ directory FOLDER version. \n\nIf `path` is supplied, retrieves from the\
        \ directory only the sub-FOLDER that is associated with that path.\n"
      operationId: directory_get_at_time
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: version_at_time
        in: query
        description: |
          A given time in the extended ISO 8601 format.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 2015-01-20T19:30:22.765+01:00
      - name: path
        in: query
        description: |
          A path to a sub-folder; consists of slash-separated values of the name attribute of FOLDERs in the directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: episodes/a/b/c
      responses:
        "200":
          description: |
            `200 OK` is returned when the FOLDER is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        "204":
          description: |
            `204 No Content` is returned when the resource identified by the request parameters (at specified `version_at_time`) time has been deleted.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a directory does not exist at the specified `version_at_time`, or when `path` does not exists within the directory.
    put:
      tags:
      - DIRECTORY
      summary: Update directory
      description: |
        Updates directory FOLDER associated with the EHR identified by `ehr_id`.

        The existing latest `version_uid` of directory FOLDER resource (i.e. the `preceding_version_uid`) must be specified in the `If-Match` header.
      operationId: directory_update
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: If-Match
        in: header
        description: "Header to make the request conditional. \nTogether with `ETag`\
          \ request tag, it helps to prevent simultaneous updates of a resource from\
          \ overwriting each other (\"mid-air collisions\").\nThe format is always\
          \ an `version_uid` identifier enclosed by double quotes.\nThe operation\
          \ will be performed only if the existing latest `version_uid` of the resource\
          \ (i.e. the `preceding_version_uid`) matches this header's value.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          The new directory.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      responses:
        "200":
          description: |
            `200 OK` is returned when directory was successfully updated and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_FOLDER'
            Location:
              $ref: '#/components/headers/Location_directory'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        "204":
          description: |
            `204 No Content` is returned when directory was updated and `Prefer` header is missing or is set to `return=minimal`.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_FOLDER'
            Location:
              $ref: '#/components/headers/Location_directory'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request could not be read, or could not be converted to a valid FOLDER object).
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
        "412":
          description: |
            `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
            Returns also latest `version_uid` in the `Location` and `ETag` headers.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_FOLDER'
            Location:
              $ref: '#/components/headers/Location_directory'
    post:
      tags:
      - DIRECTORY
      summary: Create directory
      description: |
        Creates a new directory FOLDER associated with the EHR identified by `ehr_id`.
      operationId: directory_create
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          The directory.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Folder'
        required: true
      responses:
        "201":
          description: "`201 Created` is returned when the FOLDER was created. \n\
            Content body is only returned when `Prefer` header has `return=representation`,\
            \ otherwise only headers are returned.\n"
          headers:
            ETag:
              $ref: '#/components/headers/ETag_FOLDER'
            Location:
              $ref: '#/components/headers/Location_directory'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request could not be read, or could not be converted to a valid FOLDER object).
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
    delete:
      tags:
      - DIRECTORY
      summary: Delete directory
      description: |
        Deletes directory FOLDER associated with the EHR identified by `ehr_id`.

        The existing latest `version_uid` of directory FOLDER resource (i.e. the `preceding_version_uid`) must be specified in the `If-Match` header.
      operationId: directory_delete
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: If-Match
        in: header
        description: "Header to make the request conditional. \nTogether with `ETag`\
          \ request tag, it helps to prevent simultaneous updates of a resource from\
          \ overwriting each other (\"mid-air collisions\").\nThe format is always\
          \ an `version_uid` identifier enclosed by double quotes.\nThe operation\
          \ will be performed only if the existing latest `version_uid` of the resource\
          \ (i.e. the `preceding_version_uid`) matches this header's value.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
      responses:
        "204":
          description: |
            `204 No Content` is returned when the resource identified by the request parameters has been (logically) deleted.
        "400":
          description: |
            `400 Bad Request` is returned when the request has invalid `ehr_id`.
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
        "412":
          description: |
            `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
            Returns also latest `version_uid` in the `Location` and `ETag` headers.
          headers:
            ETag:
              $ref: '#/components/headers/ETag_FOLDER'
            Location:
              $ref: '#/components/headers/Location_directory'
  /ehr/{ehr_id}/directory/{version_uid}:
    get:
      tags:
      - DIRECTORY
      summary: Get folder in directory version
      description: |
        Retrieves a particular version of the directory FOLDER identified by `version_uid` and associated with the EHR identified by `ehr_id`.

        If `path` is supplied, retrieves from the directory only the sub-FOLDER that is associated with that path.
      operationId: directory_get_by_version_id
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: version_uid
        in: path
        description: |
          VERSION identifier taken from VERSION.uid.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      - name: path
        in: query
        description: |
          A path to a sub-folder; consists of slash-separated values of the name attribute of FOLDERs in the directory.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: episodes/a/b/c
      responses:
        "200":
          description: |
            `200 OK` is returned when the FOLDER is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a directory with `version_uid` does not exist, or when `path` does not exist within the directory.
  /ehr/{ehr_id}/contribution:
    post:
      tags:
      - CONTRIBUTION
      summary: Create CONTRIBUTION
      description: |
        We will use the relaxed CONTRIBUTION with the following optional attributes:
          - `uid`: when provided, it will be accepted in case is not in-use, otherwise error will be returned
          - `audit.time_committed`: server will always set it
          - `audit.system_id`: when provided, it will be validated
      operationId: contribution_create
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: Prefer
        in: header
        description: |
          Request header to indicate the preference over response details.
          The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
        required: false
        style: simple
        explode: false
        schema:
          type: string
          default: return=minimal
          enum:
          - return=representation
          - return=minimal
      requestBody:
        description: |
          The CONTRIBUTION.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewContribution'
        required: true
      responses:
        "201":
          description: "`201 Created` is returned when the CONTRIBUTION was created.\
            \ \nContent body is only returned when `Prefer` header has `return=representation`,\
            \ otherwise only headers are returned.\n"
          headers:
            ETag:
              $ref: '#/components/headers/ETag_CONTRIBUTION'
            Location:
              $ref: '#/components/headers/Location_CONTRIBUTION'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        "400":
          description: |
            `400 Bad Request` is returned when the request URL or body could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request not be converted to a valid CONTRIBUTION object, or the modification type doesn’t match the operation - i.e. first version of a composition with MODIFICATION).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
        "409":
          description: |
            `409 Conflict` is returned when a resource with same identifier(s) already exists.
  /ehr/{ehr_id}/contribution/{contribution_uid}:
    get:
      tags:
      - CONTRIBUTION
      summary: Get CONTRIBUTION by id
      description: |
        Retrieves a CONTRIBUTION identified by `contribution_uid` and associated with the EHR identified by `ehr_id`.
      operationId: contribution_get
      parameters:
      - name: ehr_id
        in: path
        description: |
          EHR identifier taken from EHR.ehr_id.value.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 7d44b88c-4199-4bad-97dc-d78268e01398
      - name: contribution_uid
        in: path
        description: |
          The CONTRIBUTION uid.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 0826851c-c4c2-4d61-92b9-410fb8275ff0
      responses:
        "200":
          description: |
            `200 OK` is returned when the CONTRIBUTION is successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        "404":
          description: |
            `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a CONTRIBUTION with `contribution_uid` does not exist.
components:
  schemas:
    ObjectId:
      title: OBJECT_ID
      required:
      - value
      type: object
      properties:
        _type:
          type: string
        value:
          type: string
      discriminator:
        propertyName: _type
        mapping:
          ARCHETYPE_ID: '#/components/schemas/ArchetypeId'
          TEMPLATE_ID: '#/components/schemas/TemplateId'
          TERMINOLOGY_ID: '#/components/schemas/TerminologyId'
          GENERIC_ID: '#/components/schemas/GenericId'
          HIER_OBJECT_ID: '#/components/schemas/HierObjectId'
          OBJECT_VERSION_ID: '#/components/schemas/ObjectVersionId'
    UidBasedId:
      title: UID_BASED_ID
      type: object
      properties:
        _type:
          type: string
          default: UID_BASED_ID
      discriminator:
        propertyName: Type_
        mapping:
          HIER_OBJECT_ID: '#/components/schemas/HierObjectId'
          OBJECT_VERSION_ID: '#/components/schemas/ObjectVersionId'
      allOf:
      - $ref: '#/components/schemas/ObjectId'
      x-discriminator-value: UID_BASED_ID
    HierObjectId:
      title: HIER_OBJECT_ID
      required:
      - value
      type: object
      properties:
        value:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b
      allOf:
      - $ref: '#/components/schemas/UidBasedId'
      x-discriminator-value: HIER_OBJECT_ID
    ArchetypeId:
      title: ARCHETYPE_ID
      type: object
      properties:
        _type:
          type: string
          default: ARCHETYPE_ID
      allOf:
      - $ref: '#/components/schemas/ObjectId'
      x-discriminator-value: ARCHETYPE_ID
    TemplateId:
      title: TEMPLATE_ID
      type: object
      properties:
        _type:
          type: string
          default: TEMPLATE_ID
      allOf:
      - $ref: '#/components/schemas/ObjectId'
      x-discriminator-value: TEMPLATE_ID
    TerminologyId:
      title: TERMINOLOGY_ID
      type: object
      properties:
        _type:
          type: string
          default: TERMINOLOGY_ID
      allOf:
      - $ref: '#/components/schemas/ObjectId'
      x-discriminator-value: TERMINOLOGY_ID
    GenericId:
      title: GENERIC_ID
      required:
      - scheme
      type: object
      properties:
        _type:
          type: string
          default: GENERIC_ID
        scheme:
          type: string
      allOf:
      - $ref: '#/components/schemas/ObjectId'
      x-discriminator-value: GENERIC_ID
    ObjectVersionId:
      title: OBJECT_VERSION_ID
      required:
      - value
      type: object
      properties:
        value:
          type: string
          example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
      allOf:
      - $ref: '#/components/schemas/UidBasedId'
      x-discriminator-value: OBJECT_VERSION_ID
    ObjectRef:
      title: OBJECT_REF
      required:
      - id
      - namespace
      - type
      type: object
      properties:
        namespace:
          type: string
        type:
          type: string
        id:
          $ref: '#/components/schemas/ObjectId'
      example:
        id:
          _type: OBJECT_VERSION_ID
          value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
        namespace: local
        type: COMPOSITION
    DataValue:
      title: DATA_VALUE
      type: object
      properties:
        _type:
          type: string
      discriminator:
        propertyName: _type
        mapping:
          DV_TEXT: '#/components/schemas/DvText'
          DV_CODED_TEXT: '#/components/schemas/DvCodedText'
          DV_URI: '#/components/schemas/DvUri'
          DV_EHR_URI: '#/components/schemas/DvEhrUri'
          DV_MULTIMEDIA: '#/components/schemas/DvMultimedia'
          DV_PARSABLE: '#/components/schemas/DvParsable'
          DV_DATE_TIME: '#/components/schemas/DvDateTime'
          DV_DURATION: '#/components/schemas/DvDuration'
          DV_INTERVAL: '#/components/schemas/DvInterval'
          DV_INTERVAL_of_DATE_TIME: '#/components/schemas/DvIntervalOfDateTime'
          DV_IDENTIFIER: '#/components/schemas/DvIdentifier'
          DV_BOOLEAN: '#/components/schemas/DvBoolean'
          DV_QUANTITY: '#/components/schemas/DvQuantity'
          DV_ORDINAL: '#/components/schemas/DvOrdinal'
          DV_SCALE: '#/components/schemas/DvScale'
          DV_COUNT: '#/components/schemas/DvCount'
          DV_PROPORTION: '#/components/schemas/DvProportion'
    DvDateTime:
      title: DV_DATE_TIME
      required:
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_DATE_TIME
        value:
          type: string
          format: date-time
      example:
        _type: DV_DATE_TIME
        value: 2017-08-15T10:37:15.422+02:00
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_DATE_TIME
    Ehr:
      title: EHR
      type: object
      properties:
        system_id:
          $ref: '#/components/schemas/HierObjectId'
        ehr_id:
          $ref: '#/components/schemas/HierObjectId'
        ehr_status:
          $ref: '#/components/schemas/ObjectRef'
        ehr_access:
          $ref: '#/components/schemas/ObjectRef'
        time_created:
          $ref: '#/components/schemas/DvDateTime'
      description: An EHR resource
      example:
        system_id:
          value: 9624982A-9F42-41A5-9318-AE13D5F5031F
        ehr_id:
          value: 7d44b88c-4199-4bad-97dc-d78268e01398
        ehr_status:
          id:
            _type: OBJECT_VERSION_ID
            value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
          namespace: local
          type: EHR_STATUS
        ehr_access:
          id:
            _type: OBJECT_VERSION_ID
            value: 59a8d0ac-140e-4feb-b2d6-af99f8e68af8::openEHRSys.example.com::1
          namespace: local
          type: EHR_ACCESS
        time_created:
          value: 2015-01-20T19:30:22.765+01:00
    Pathable:
      title: PATHABLE
      type: object
      properties:
        _type:
          type: string
      discriminator:
        propertyName: _type
    DvUri:
      title: DV_URI
      required:
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_URI
        value:
          type: string
      discriminator:
        propertyName: Type_
        mapping:
          DV_URI: '#/components/schemas/DvUri'
          DV_EHR_URI: '#/components/schemas/DvEhrUri'
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_URI
    DvEhrUri:
      title: DV_EHR_URI
      type: object
      properties:
        _type:
          type: string
          default: DV_EHR_URI
      example:
        _type: DV_EHR_URI
        value: ehr://system_id/ehr_id/top_level_structure_locator/path_inside_top_level_structure
      allOf:
      - $ref: '#/components/schemas/DvUri'
      x-discriminator-value: DV_EHR_URI
    CodePhrase:
      title: CODE_PHRASE
      required:
      - code_string
      - terminology_id
      type: object
      properties:
        terminology_id:
          $ref: '#/components/schemas/TerminologyId'
        code_string:
          type: string
        preferred_term:
          type: string
      example:
        terminology_id:
          value: local
        code_string: at0001
    DvText:
      title: DV_TEXT
      required:
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_TEXT
        value:
          type: string
        hyperlink:
          $ref: '#/components/schemas/DvUri'
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        formatting:
          type: string
      discriminator:
        propertyName: Type_
        mapping:
          DV_TEXT: '#/components/schemas/DvText'
          DV_CODED_TEXT: '#/components/schemas/DvCodedText'
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_TEXT
    DvCodedText:
      title: DV_CODED_TEXT
      required:
      - defining_code
      type: object
      properties:
        _type:
          type: string
          default: DV_CODED_TEXT
        defining_code:
          $ref: '#/components/schemas/CodePhrase'
      example:
        value: Coded text value
        defining_code:
          terminology_id:
            value: local
          code_string: at0001
      allOf:
      - $ref: '#/components/schemas/DvText'
      x-discriminator-value: DV_CODED_TEXT
    Link:
      title: LINK
      required:
      - meaning
      - target
      - type
      type: object
      properties:
        meaning:
          $ref: '#/components/schemas/DvText'
        type:
          $ref: '#/components/schemas/DvText'
        target:
          $ref: '#/components/schemas/DvEhrUri'
    Archetyped:
      title: ARCHETYPED
      required:
      - archetype_id
      - rm_version
      type: object
      properties:
        archetype_id:
          $ref: '#/components/schemas/ArchetypeId'
        template_id:
          $ref: '#/components/schemas/TemplateId'
        rm_version:
          type: string
      additionalProperties: false
      example:
        archetype_id:
          value: openEHR-EHR-COMPOSITION.encounter.v1
        template_id:
          value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
        rm_version: 1.0.2
    DvIdentifier:
      title: DV_IDENTIFIER
      required:
      - id
      type: object
      properties:
        issuer:
          type: string
        assigner:
          type: string
        id:
          type: string
        type:
          type: string
      description: |
        Type for representing identifiers of real-world entities. Typical identifiers include drivers licence number, social security number, veterans affairs number, prescription id, order id, and so on.

        DV_IDENTIFIER is used to represent any identifier of a real thing, issued by some authority or agency.
      example:
        id: 16b74749-e6aa-4945-b760-b42bdc07098a
        type: Patient
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_IDENTIFIER
    DvEncapsulated:
      title: DV_ENCAPSULATED
      required:
      - _type
      type: object
      properties:
        _type:
          type: string
          default: DV_ENCAPSULATED
        charset:
          $ref: '#/components/schemas/CodePhrase'
        language:
          $ref: '#/components/schemas/CodePhrase'
      discriminator:
        propertyName: Type_
        mapping:
          DV_MULTIMEDIA: '#/components/schemas/DvMultimedia'
          DV_PARSABLE: '#/components/schemas/DvParsable'
      allOf:
      - $ref: '#/components/schemas/DataValue'
    DvMultimedia:
      title: DV_MULTIMEDIA
      required:
      - media_type
      - size
      type: object
      properties:
        _type:
          type: string
          default: DV_MULTIMEDIA
        alternate_text:
          type: string
        uri:
          $ref: '#/components/schemas/DvUri'
        data:
          type: string
        media_type:
          $ref: '#/components/schemas/CodePhrase'
        compression_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        integrity_check:
          type: string
        integrity_check_algorithm:
          $ref: '#/components/schemas/CodePhrase'
        thumbnail:
          $ref: '#/components/schemas/DvMultimedia'
        size:
          type: integer
      allOf:
      - $ref: '#/components/schemas/DvEncapsulated'
      x-discriminator-value: DV_MULTIMEDIA
    DvParsable:
      title: DV_PARSABLE
      required:
      - formalism
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_PARSABLE
        value:
          type: string
        formalism:
          type: string
      allOf:
      - $ref: '#/components/schemas/DvEncapsulated'
      x-discriminator-value: DV_PARSABLE
    PartyRef:
      title: PARTY_REF
      required:
      - id
      - namespace
      - type
      type: object
      properties:
        namespace:
          type: string
        type:
          pattern: ^PERSON|ORGANISATION|GROUP|AGENT|ROLE|PARTY|ACTOR$
          type: string
        id:
          $ref: '#/components/schemas/ObjectId'
      description: Identifier for parties in a demographic or identity service.
      example:
        id:
          _type: OBJECT_VERSION_ID
          value: b52b9408-7048-4ec8-94bd-831fb0727e67::openEHRSys.example.com::1
        namespace: local
        type: PERSON
    PartyProxy:
      title: PARTY_PROXY
      required:
      - _type
      type: object
      properties:
        _type:
          type: string
          default: PARTY_PROXY
        external_ref:
          $ref: '#/components/schemas/PartyRef'
      discriminator:
        propertyName: _type
        mapping:
          PARTY_SELF: '#/components/schemas/PartySelf'
          PARTY_IDENTIFIED: '#/components/schemas/PartyIdentified'
    PartyIdentified:
      title: PARTY_IDENTIFIED
      type: object
      properties:
        _type:
          type: string
          default: PARTY_IDENTIFIED
        name:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
      example:
        _type: PARTY_IDENTIFIED
        external_ref:
          id:
            _type: GENERIC_ID
            value: 16b74749-e6aa-4945-b760-b42bdc07098a
            scheme: pid
          namespace: openEHRSys.example.com
          type: PERSON
        name: A name
      discriminator:
        propertyName: Type_
        mapping:
          PARTY_IDENTIFIED: '#/components/schemas/PartyIdentified'
          PARTY_RELATED: '#/components/schemas/PartyRelated'
      allOf:
      - $ref: '#/components/schemas/PartyProxy'
      x-discriminator-value: PARTY_IDENTIFIED
    PartyRelated:
      title: PARTY_RELATED
      required:
      - relationship
      type: object
      properties:
        _type:
          type: string
          default: PARTY_RELATED
        relationship:
          $ref: '#/components/schemas/DvCodedText'
      allOf:
      - $ref: '#/components/schemas/PartyIdentified'
      x-discriminator-value: PARTY_RELATED
    PartySelf:
      title: PARTY_SELF
      type: object
      properties:
        _type:
          type: string
          default: PARTY_SELF
      allOf:
      - $ref: '#/components/schemas/PartyProxy'
      x-discriminator-value: PARTY_SELF
    Locatable:
      title: LOCATABLE
      required:
      - archetype_node_id
      - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/DvText'
        archetype_node_id:
          type: string
          xml:
            attribute: true
        uid:
          $ref: '#/components/schemas/UidBasedId'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        archetype_details:
          $ref: '#/components/schemas/Archetyped'
        feeder_audit:
          $ref: '#/components/schemas/FeederAudit'
      discriminator:
        propertyName: Type_
        mapping:
          COMPOSITION: '#/components/schemas/Composition'
          EHR_STATUS: '#/components/schemas/EhrStatus'
          FOLDER: '#/components/schemas/Folder'
      allOf:
      - $ref: '#/components/schemas/Pathable'
    DataStructure:
      title: DATE_STRUCTURE
      type: object
      properties:
        _type:
          type: string
          default: DATE_STRUCTURE
      allOf:
      - $ref: '#/components/schemas/Locatable'
      x-discriminator-value: DATE_STRUCTURE
    ItemStructure:
      title: ITEM_STRUCTURE
      type: object
      properties:
        _type:
          type: string
      discriminator:
        propertyName: Type_
        mapping:
          ITEM_SINGLE: '#/components/schemas/ItemSingle'
          ITEM_LIST: '#/components/schemas/ItemList'
          ITEM_TABLE: '#/components/schemas/ItemTable'
          ITEM_TREE: '#/components/schemas/ItemTree'
      allOf:
      - $ref: '#/components/schemas/DataStructure'
      x-discriminator-value: ITEM_STRUCTURE
    Item:
      title: ITEM
      type: object
      properties:
        _type:
          type: string
      discriminator:
        propertyName: Type_
        mapping:
          ELEMENT: '#/components/schemas/Element'
          CLUSTER: '#/components/schemas/Clstr'
      allOf:
      - $ref: '#/components/schemas/Locatable'
      x-discriminator-value: ITEM
    DvInterval:
      title: DV_INTERVAL
      required:
      - lower_included
      - lower_unbounded
      - upper_included
      - upper_unbounded
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower_unbounded:
          type: boolean
        upper_unbounded:
          type: boolean
        lower_included:
          type: boolean
        upper_included:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_INTERVAL
    ReferenceRange:
      title: REFERENCE_RANGE
      required:
      - meaning
      - range
      type: object
      properties:
        meaning:
          $ref: '#/components/schemas/DvText'
        range:
          $ref: '#/components/schemas/DvInterval'
    DvOrdered:
      title: DV_ORDERED
      type: object
      properties:
        _type:
          type: string
          default: DV_ORDERED
        normal_status:
          $ref: '#/components/schemas/CodePhrase'
        normal_range:
          $ref: '#/components/schemas/DvInterval'
        other_reference_ranges:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceRange'
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_ORDERED
    DvQuantified:
      title: DV_QUANTIFIED
      type: object
      properties:
        _type:
          type: string
          default: DV_QUANTIFIED
        magnitude_status:
          type: string
          default: =
      allOf:
      - $ref: '#/components/schemas/DvOrdered'
      x-discriminator-value: DV_QUANTIFIED
    DvAmount:
      title: DV_AMOUNT
      type: object
      properties:
        _type:
          type: string
          default: DV_AMOUNT
        accuracy_is_percent:
          type: boolean
        accuracy:
          type: number
      allOf:
      - $ref: '#/components/schemas/DvQuantified'
      x-discriminator-value: DV_AMOUNT
    DvDuration:
      title: DV_DURATION
      type: object
      properties:
        _type:
          type: string
          default: DV_DURATION
      allOf:
      - $ref: '#/components/schemas/DvAmount'
      x-discriminator-value: DV_DURATION
    DvBoolean:
      title: DV_BOOLEAN
      required:
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_BOOLEAN
        value:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/DataValue'
      x-discriminator-value: DV_BOOLEAN
    DvQuantity:
      title: DV_QUANTITY
      required:
      - magnitude
      - units
      type: object
      properties:
        _type:
          type: string
          default: DV_QUANTITY
        magnitude:
          type: number
        precision:
          type: integer
        units:
          type: string
        units_system:
          type: string
        units_display_name:
          type: string
      allOf:
      - $ref: '#/components/schemas/DvAmount'
      x-discriminator-value: DV_QUANTITY
    DvOrdinal:
      title: DV_ORDINAL
      required:
      - symbol
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_ORDINAL
        symbol:
          $ref: '#/components/schemas/DvCodedText'
        value:
          type: integer
      allOf:
      - $ref: '#/components/schemas/DvOrdered'
      x-discriminator-value: DV_ORDINAL
    DvScale:
      title: DV_SCALE
      required:
      - symbol
      - value
      type: object
      properties:
        _type:
          type: string
          default: DV_SCALE
        symbol:
          $ref: '#/components/schemas/DvCodedText'
        value:
          type: number
      allOf:
      - $ref: '#/components/schemas/DvOrdered'
      x-discriminator-value: DV_SCALE
    DvCount:
      title: DV_COUNT
      required:
      - magnitude
      type: object
      properties:
        _type:
          type: string
          default: DV_COUNT
        magnitude:
          type: integer
      allOf:
      - $ref: '#/components/schemas/DvAmount'
      x-discriminator-value: DV_COUNT
    DvProportion:
      title: DV_PROPORTION
      required:
      - denominator
      - numerator
      - semantic_type
      type: object
      properties:
        _type:
          type: string
          default: DV_PROPORTION
        numerator:
          type: number
        denominator:
          type: number
        semantic_type:
          type: integer
        precision:
          type: integer
      allOf:
      - $ref: '#/components/schemas/DvAmount'
      x-discriminator-value: DV_PROPORTION
    Element:
      title: ELEMENT
      type: object
      properties:
        _type:
          type: string
          default: ELEMENT
        null_flavour:
          $ref: '#/components/schemas/DvCodedText'
        value:
          $ref: '#/components/schemas/DataValue'
        null_reason:
          $ref: '#/components/schemas/DvText'
      allOf:
      - $ref: '#/components/schemas/Item'
      x-discriminator-value: ELEMENT
    ItemSingle:
      title: ITEM_SINGLE
      required:
      - item
      type: object
      properties:
        _type:
          type: string
          default: ITEM_SINGLE
        item:
          $ref: '#/components/schemas/Element'
      allOf:
      - $ref: '#/components/schemas/ItemStructure'
      x-discriminator-value: ITEM_SINGLE
    ItemList:
      title: ITEM_LIST
      type: object
      properties:
        _type:
          type: string
          default: ITEM_LIST
        items:
          type: array
          items:
            $ref: '#/components/schemas/Element'
      allOf:
      - $ref: '#/components/schemas/ItemStructure'
      x-discriminator-value: ITEM_LIST
    Clstr:
      title: CLUSTER
      required:
      - items
      type: object
      properties:
        _type:
          type: string
          default: CLUSTER
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      allOf:
      - $ref: '#/components/schemas/Item'
      x-discriminator-value: CLUSTER
    ItemTable:
      title: ITEM_TABLE
      type: object
      properties:
        _type:
          type: string
          default: ITEM_TABLE
        items:
          type: array
          items:
            $ref: '#/components/schemas/Clstr'
      allOf:
      - $ref: '#/components/schemas/ItemStructure'
      x-discriminator-value: ITEM_TABLE
    ItemTree:
      title: ITEM_TREE
      type: object
      properties:
        _type:
          type: string
          default: ITEM_TREE
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      allOf:
      - $ref: '#/components/schemas/ItemStructure'
      x-discriminator-value: ITEM_TREE
    FeederAuditDetails:
      title: FEEDER_AUDIT_DETAILS
      required:
      - system_id
      type: object
      properties:
        system_id:
          type: string
        location:
          $ref: '#/components/schemas/PartyIdentified'
        subject:
          $ref: '#/components/schemas/PartyProxy'
        provider:
          $ref: '#/components/schemas/PartyIdentified'
        time:
          $ref: '#/components/schemas/DvDateTime'
        version_id:
          type: string
        other_details:
          $ref: '#/components/schemas/ItemStructure'
    FeederAudit:
      title: FEEDER_AUDIT
      required:
      - originating_system_audit
      type: object
      properties:
        originating_system_item_ids:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        feeder_system_item_ids:
          type: array
          items:
            $ref: '#/components/schemas/DvIdentifier'
        original_content:
          $ref: '#/components/schemas/DvEncapsulated'
        originating_system_audit:
          $ref: '#/components/schemas/FeederAuditDetails'
        feeder_system_audit:
          $ref: '#/components/schemas/FeederAuditDetails'
    Versionable:
      title: Versionable
      type: object
      description: A Versionable resource
      discriminator:
        propertyName: Type_
        mapping:
          COMPOSITION: '#/components/schemas/Composition'
          EHR_STATUS: '#/components/schemas/EhrStatus'
      allOf:
      - $ref: '#/components/schemas/Locatable'
    EhrStatus:
      title: EHR_STATUS
      required:
      - is_modifiable
      - is_queryable
      - subject
      type: object
      properties:
        _type:
          type: string
          default: EHR_STATUS
        subject:
          $ref: '#/components/schemas/PartyProxy'
        is_queryable:
          type: boolean
          default: true
        is_modifiable:
          type: boolean
          default: true
        other_details:
          $ref: '#/components/schemas/ItemStructure'
      description: An EHR_STATUS resource
      example:
        archetype_node_id: openEHR-EHR-EHR_STATUS.generic.v1
        name:
          value: EHR status
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        subject:
          _type: PARTY_SELF
        is_queryable: true
        is_modifiable: true
      allOf:
      - $ref: '#/components/schemas/Versionable'
      x-discriminator-value: EHR_STATUS
    VersionedObject:
      title: VERSIONED_OBJECT
      required:
      - owner_id
      - time_created
      - uid
      type: object
      properties:
        _type:
          type: string
        uid:
          $ref: '#/components/schemas/HierObjectId'
        owner_id:
          $ref: '#/components/schemas/ObjectRef'
        time_created:
          $ref: '#/components/schemas/DvDateTime'
      discriminator:
        propertyName: _type
        mapping:
          VERSIONED_COMPOSITION: '#/components/schemas/VersionedComposition'
          VERSIONED_EHR_STATUS: '#/components/schemas/VersionedEhrStatus'
    VersionedEhrStatus:
      title: VERSIONED_EHR_STATUS
      type: object
      properties:
        _type:
          type: string
          default: VERSIONED_EHR_STATUS
      description: A VERSIONED_EHR_STATUS resource
      example:
        uid:
          value: 6cb19121-4307-4648-9da0-d62e4d51f19b
        owner_id:
          id:
            _type: HIER_OBJECT_ID
            value: 7d44b88c-4199-4bad-97dc-d78268e01398
          namespace: local
          type: EHR
        time_created:
          value: 2015-01-20T19:30:22.765+01:00
      allOf:
      - $ref: '#/components/schemas/VersionedObject'
      x-discriminator-value: VERSIONED_EHR_STATUS
    AuditDetails:
      title: AUDIT_DETAILS
      required:
      - change_type
      - committer
      - system_id
      - time_committed
      type: object
      properties:
        _type:
          type: string
          default: AUDIT_DETAILS
        system_id:
          type: string
        time_committed:
          $ref: '#/components/schemas/DvDateTime'
        change_type:
          $ref: '#/components/schemas/DvCodedText'
        description:
          $ref: '#/components/schemas/DvText'
        committer:
          $ref: '#/components/schemas/PartyProxy'
      description: The set of attributes required to document the committal of an
        information item to a repository.
      example:
        system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
        time_committed:
          value: 2017-08-15T10:37:15.422+02:00
        change_type:
          value: creation
          defining_code:
            terminology_id:
              value: openehr
            code_string: "249"
        description:
          value: Description text
      discriminator:
        propertyName: _type
        mapping:
          AUDIT_DETAILS: '#/components/schemas/AuditDetails'
          ATTESTATION: '#/components/schemas/Attestation'
      x-discriminator-value: AUDIT_DETAILS
    RevisionHistoryItem:
      title: REVISION_HISTORY_ITEM
      required:
      - audits
      - version_id
      type: object
      properties:
        version_id:
          $ref: '#/components/schemas/ObjectVersionId'
        audits:
          type: array
          items:
            $ref: '#/components/schemas/AuditDetails'
      description: A REVISION_HISTORY_ITEM resource
      example:
        version_id:
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        audits:
        - system_id: d60e2348-b083-48ce-93b9-916cef1d3a5a
          time_committed:
            value: 2015-01-20T19:30:22.765+01:00
          change_type:
            value: creation
            defining_code:
              terminology_id:
                value: openehr
              code_string: "249"
          description:
            value: An optional description string
          committer:
            _type: PARTY_IDENTIFIED
            name: A user name
    RevisionHistory:
      title: REVISION_HISTORY
      required:
      - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RevisionHistoryItem'
      description: A REVISION_HISTORY resource
      example:
        items:
        - version_id:
            value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
          audits:
          - system_id: d60e2348-b083-48ce-93b9-916cef1d3a5a
            time_committed:
              value: 2015-01-20T19:30:22.765+01:00
            change_type:
              value: creation
              defining_code:
                terminology_id:
                  value: openehr
                code_string: "249"
            description:
              value: An optional description string
            committer:
              _type: PARTY_IDENTIFIED
              name: A user name
        - version_id:
            value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
          audits:
          - system_id: d60e2348-b083-48ce-93b9-916cef1d3a5a
            time_committed:
              value: 2015-01-20T19:30:22.765+01:00
            change_type:
              value: creation
              defining_code:
                terminology_id:
                  value: openehr
                code_string: "249"
            description:
              value: An optional description string
            committer:
              _type: PARTY_IDENTIFIED
              name: A user name
    DvIntervalOfDateTime:
      title: DV_INTERVAL_of_DATE_TIME
      type: object
      properties:
        _type:
          type: string
          default: DV_INTERVAL
        lower:
          $ref: '#/components/schemas/DvDateTime'
        upper:
          $ref: '#/components/schemas/DvDateTime'
      allOf:
      - $ref: '#/components/schemas/DvInterval'
      x-discriminator-value: DV_INTERVAL_of_DATE_TIME
    Participation:
      title: PARTICIPATION
      required:
      - function
      - performer
      type: object
      properties:
        function:
          $ref: '#/components/schemas/DvText'
        mode:
          $ref: '#/components/schemas/DvCodedText'
        performer:
          $ref: '#/components/schemas/PartyProxy'
        time:
          $ref: '#/components/schemas/DvIntervalOfDateTime'
    EventContext:
      title: EVENT_CONTEXT
      required:
      - setting
      - start_time
      type: object
      properties:
        start_time:
          $ref: '#/components/schemas/DvDateTime'
        end_time:
          $ref: '#/components/schemas/DvDateTime'
        location:
          type: string
        setting:
          $ref: '#/components/schemas/DvCodedText'
        other_context:
          $ref: '#/components/schemas/ItemStructure'
        health_care_facility:
          $ref: '#/components/schemas/PartyIdentified'
        participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
      allOf:
      - $ref: '#/components/schemas/Pathable'
      x-discriminator-value: EVENT_CONTEXT
    ContentItem:
      title: CONTENT_ITEM
      type: object
      discriminator:
        propertyName: Type_
        mapping:
          ADMIN_ENTRY: '#/components/schemas/AdminEntry'
          OBSERVATION: '#/components/schemas/Observation'
          EVALUATION: '#/components/schemas/Evaluation'
          INSTRUCTION: '#/components/schemas/Instruction'
          ACTION: '#/components/schemas/Action'
      allOf:
      - $ref: '#/components/schemas/Locatable'
    AbstractEntry:
      title: ENTRY
      required:
      - encoding
      - language
      - subject
      type: object
      properties:
        language:
          $ref: '#/components/schemas/CodePhrase'
        encoding:
          $ref: '#/components/schemas/CodePhrase'
        other_participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        workflow_id:
          $ref: '#/components/schemas/ObjectRef'
        subject:
          $ref: '#/components/schemas/PartyProxy'
        provider:
          $ref: '#/components/schemas/PartyProxy'
      discriminator:
        propertyName: Type_
        mapping:
          ADMIN_ENTRY: '#/components/schemas/AdminEntry'
          OBSERVATION: '#/components/schemas/Observation'
          EVALUATION: '#/components/schemas/Evaluation'
          INSTRUCTION: '#/components/schemas/Instruction'
          ACTION: '#/components/schemas/Action'
      allOf:
      - $ref: '#/components/schemas/ContentItem'
    AdminEntry:
      title: ADMIN_ENTRY
      required:
      - data
      type: object
      properties:
        _type:
          type: string
          default: ADMIN_ENTRY
        data:
          $ref: '#/components/schemas/ItemStructure'
      allOf:
      - $ref: '#/components/schemas/AbstractEntry'
      x-discriminator-value: ADMIN_ENTRY
    CareEntry:
      title: CARE_ENTRY
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/ItemStructure'
        guideline_id:
          $ref: '#/components/schemas/ObjectRef'
      discriminator:
        propertyName: Type_
        mapping:
          OBSERVATION: '#/components/schemas/Observation'
          EVALUATION: '#/components/schemas/Evaluation'
          INSTRUCTION: '#/components/schemas/Instruction'
          ACTION: '#/components/schemas/Action'
      allOf:
      - $ref: '#/components/schemas/AbstractEntry'
    Event:
      title: EVENT
      required:
      - data
      - time
      type: object
      properties:
        _type:
          type: string
          default: EVENT
        time:
          $ref: '#/components/schemas/DvDateTime'
        state:
          $ref: '#/components/schemas/ItemStructure'
        data:
          $ref: '#/components/schemas/ItemStructure'
      allOf:
      - $ref: '#/components/schemas/Locatable'
      x-discriminator-value: EVENT
    History:
      title: HISTORY
      required:
      - origin
      type: object
      properties:
        _type:
          type: string
          default: HISTORY
        origin:
          $ref: '#/components/schemas/DvDateTime'
        period:
          $ref: '#/components/schemas/DvDuration'
        duration:
          $ref: '#/components/schemas/DvDuration'
        summary:
          $ref: '#/components/schemas/ItemStructure'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
      allOf:
      - $ref: '#/components/schemas/Locatable'
      x-discriminator-value: HISTORY
    Observation:
      title: OBSERVATION
      required:
      - data
      type: object
      properties:
        _type:
          type: string
          default: OBSERVATION
        data:
          $ref: '#/components/schemas/History'
        state:
          $ref: '#/components/schemas/History'
      allOf:
      - $ref: '#/components/schemas/CareEntry'
      x-discriminator-value: OBSERVATION
    Evaluation:
      title: EVALUATION
      required:
      - data
      type: object
      properties:
        _type:
          type: string
          default: EVALUATION
        data:
          $ref: '#/components/schemas/ItemStructure'
      allOf:
      - $ref: '#/components/schemas/CareEntry'
      x-discriminator-value: EVALUATION
    Activity:
      title: ACTIVITY
      required:
      - action_archetype_id
      - description
      type: object
      properties:
        _type:
          type: string
          default: ACTIVITY
        timing:
          $ref: '#/components/schemas/DvParsable'
        action_archetype_id:
          type: string
        description:
          $ref: '#/components/schemas/ItemStructure'
      allOf:
      - $ref: '#/components/schemas/Locatable'
      x-discriminator-value: ACTIVITY
    Instruction:
      title: INSTRUCTION
      required:
      - narrative
      type: object
      properties:
        _type:
          type: string
          default: INSTRUCTION
        narrative:
          $ref: '#/components/schemas/DvText'
        expiry_time:
          $ref: '#/components/schemas/DvDateTime'
        wf_definition:
          $ref: '#/components/schemas/DvParsable'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
      allOf:
      - $ref: '#/components/schemas/CareEntry'
      x-discriminator-value: INSTRUCTION
    IsmTransition:
      title: ISM_TRANSITION
      required:
      - current_state
      type: object
      properties:
        _type:
          type: string
          default: ISM_TRANSITION
        current_state:
          $ref: '#/components/schemas/DvCodedText'
        transition:
          $ref: '#/components/schemas/DvCodedText'
        careflow_step:
          $ref: '#/components/schemas/DvCodedText'
        reason:
          type: array
          items:
            $ref: '#/components/schemas/DvText'
      allOf:
      - $ref: '#/components/schemas/Pathable'
      x-discriminator-value: ISM_TRANSITION
    LocatableRef:
      title: LOCATABLE_REF
      required:
      - id
      - namespace
      - type
      type: object
      properties:
        namespace:
          type: string
        type:
          type: string
        id:
          $ref: '#/components/schemas/UidBasedId'
        path:
          type: string
    InstructionDetails:
      title: INSTRUCTION_DETAILS
      required:
      - activity_id
      - instruction_id
      type: object
      properties:
        _type:
          type: string
          default: INSTRUCTION_DETAILS
        instruction_id:
          $ref: '#/components/schemas/LocatableRef'
        activity_id:
          type: string
        wf_details:
          $ref: '#/components/schemas/ItemStructure'
      allOf:
      - $ref: '#/components/schemas/Pathable'
      x-discriminator-value: INSTRUCTION_DETAILS
    Action:
      title: ACTION
      required:
      - description
      - ism_transition
      - time
      type: object
      properties:
        _type:
          type: string
          default: ACTION
        time:
          $ref: '#/components/schemas/DvDateTime'
        ism_transition:
          $ref: '#/components/schemas/IsmTransition'
        instruction_details:
          $ref: '#/components/schemas/InstructionDetails'
        description:
          $ref: '#/components/schemas/ItemStructure'
      allOf:
      - $ref: '#/components/schemas/CareEntry'
      x-discriminator-value: ACTION
    Composition:
      title: COMPOSITION
      required:
      - category
      - composer
      - content
      - context
      - language
      - territory
      type: object
      properties:
        _type:
          type: string
          default: COMPOSITION
        language:
          $ref: '#/components/schemas/CodePhrase'
        territory:
          $ref: '#/components/schemas/CodePhrase'
        category:
          $ref: '#/components/schemas/DvCodedText'
        context:
          $ref: '#/components/schemas/EventContext'
        composer:
          $ref: '#/components/schemas/PartyProxy'
        content:
          type: array
          items:
            $ref: '#/components/schemas/ContentItem'
      description: A COMPOSITION resource
      example:
        archetype_node_id: openEHR-EHR-COMPOSITION.encounter.v1
        name:
          value: Vital Signs
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        archetype_details:
          archetype_id:
            value: openEHR-EHR-COMPOSITION.encounter.v1
          template_id:
            value: Example.v1::c7ec861c-c413-39ff-9965-a198ebf44747
          rm_version: 1.0.2
        language:
          terminology_id:
            value: ISO_639-1
          code_string: en
        territory:
          terminology_id:
            value: ISO_3166-1
          code_string: NL
        category:
          value: event
          defining_code:
            terminology_id:
              value: openehr
            code_string: "433"
        composer:
          _type: PARTY_IDENTIFIED
          external_ref:
            id:
              _type: GENERIC_ID
              value: 16b74749-e6aa-4945-b760-b42bdc07098a
              scheme: pid
            namespace: openEHRSys.example.com
            type: PERSON
          name: A name
        context:
          start_time:
            value: 2014-11-18T09:50:35.000+01:00
          setting:
            value: other care
            defining_code:
              terminology_id:
                value: openehr
              code_string: "238"
        content: []
      allOf:
      - $ref: '#/components/schemas/Versionable'
      x-discriminator-value: COMPOSITION
    Version:
      title: VERSION
      required:
      - commit_audit
      - contribution
      - data
      type: object
      properties:
        _type:
          type: string
        contribution:
          $ref: '#/components/schemas/ObjectRef'
        signature:
          type: string
        commit_audit:
          $ref: '#/components/schemas/AuditDetails'
        data:
          $ref: '#/components/schemas/Versionable'
      description: A VERSION resource
      example:
        contribution:
          id:
            _type: OBJECT_VERSION_ID
            value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
          namespace: local
          type: COMPOSITION
        data: ""
        signature: signature
        _type: _type
        commit_audit:
          system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
          committer:
            _type: PARTY_IDENTIFIED
            name: A user name
          time_committed:
            value: 2017-08-15T10:37:15.422+02:00
          change_type:
            value: creation
            defining_code:
              terminology_id:
                value: openehr
              code_string: "249"
          description:
            value: Description text
      discriminator:
        propertyName: _type
        mapping:
          ORIGINAL_VERSION: '#/components/schemas/OriginalVersion'
          IMPORTED_VERSION: '#/components/schemas/ImportedVersion'
    Attestation:
      title: ATTESTATION
      required:
      - is_pending
      - reason
      type: object
      properties:
        _type:
          type: string
          default: ATTESTATION
        attested_view:
          $ref: '#/components/schemas/DvMultimedia'
        proof:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/DvEhrUri'
        reason:
          $ref: '#/components/schemas/DvText'
        is_pending:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/AuditDetails'
      x-discriminator-value: ATTESTATION
    OriginalVersion:
      title: ORIGINAL_VERSION
      required:
      - lifecycle_state
      - uid
      type: object
      properties:
        _type:
          type: string
          default: ORIGINAL_VERSION
        uid:
          $ref: '#/components/schemas/ObjectVersionId'
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        other_input_version_uids:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersionId'
        lifecycle_state:
          $ref: '#/components/schemas/DvCodedText'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
      allOf:
      - $ref: '#/components/schemas/Version'
      x-discriminator-value: ORIGINAL_VERSION
    ImportedVersion:
      title: IMPORTED_VERSION
      required:
      - item
      type: object
      properties:
        _type:
          type: string
          default: IMPORTED_VERSION
        item:
          $ref: '#/components/schemas/OriginalVersion'
      allOf:
      - $ref: '#/components/schemas/Version'
      x-discriminator-value: IMPORTED_VERSION
    Error:
      title: Error
      required:
      - message
      - validationErrors
      type: object
      properties:
        message:
          type: string
        validationErrors:
          type: array
          description: ""
          items:
            type: string
      example:
        message: Error message
        validationErrors:
        - error1
        - error2
    VersionedComposition:
      title: VERSIONED_COMPOSITION
      type: object
      properties:
        _type:
          type: string
          default: VERSIONED_COMPOSITION
      description: A VERSIONED_COMPOSITION resource
      example:
        uid:
          value: 8849182c-82ad-4088-a07f-48ead4180515
        owner_id:
          id:
            _type: HIER_OBJECT_ID
            value: 7d44b88c-4199-4bad-97dc-d78268e01398
          namespace: local
          type: EHR
        time_created:
          value: 2015-01-20T19:30:22.765+01:00
      allOf:
      - $ref: '#/components/schemas/VersionedObject'
      x-discriminator-value: VERSIONED_COMPOSITION
    Folder:
      title: FOLDER
      type: object
      properties:
        _type:
          type: string
          default: FOLDER
        items:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        folders:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
        details:
          $ref: '#/components/schemas/ItemStructure'
      description: A FOLDER resource
      example:
        archetype_node_id: openEHR-EHR-FOLDER.directory.v1
        name:
          value: Directory
        uid:
          _type: OBJECT_VERSION_ID
          value: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
        items: []
        folders: []
      allOf:
      - $ref: '#/components/schemas/Locatable'
      x-discriminator-value: FOLDER
    TerminologyCode:
      title: TERMINOLOGY_CODE
      required:
      - code_string
      - terminology_id
      type: object
      properties:
        terminology_id:
          type: string
        terminology_version:
          type: string
        code_string:
          type: string
        uri:
          type: string
          format: uri
      example:
        terminology_id: snomed_ct
        code_string: "308335008"
    UpdateAudit:
      title: UPDATE_AUDIT
      required:
      - change_type
      - committer
      type: object
      properties:
        _type:
          type: string
          default: UPDATE_AUDIT
        change_type:
          $ref: '#/components/schemas/TerminologyCode'
        description:
          $ref: '#/components/schemas/DvText'
        committer:
          $ref: '#/components/schemas/PartyProxy'
      description: The set of attributes required to document the committal of an
        information item to a repository. Used by the server to create an AUDIT_DETAILS
        object.
      example:
        change_type:
          value: creation
          defining_code:
            terminology_id: openehr
            code_string: "249"
        description: Description text
        committer:
          _type: PARTY_IDENTIFIED
          name: A user name
      discriminator:
        propertyName: _type
        mapping:
          UPDATE_AUDIT: '#/components/schemas/UpdateAudit'
          UPDATE_ATTESTATION: '#/components/schemas/UpdateAttestation'
      x-discriminator-value: UPDATE_AUDIT
    UpdateAttestation:
      title: UPDATE_ATTESTATION
      required:
      - is_pending
      - reason
      type: object
      properties:
        _type:
          type: string
          default: UPDATE_ATTESTATION
        attested_view:
          $ref: '#/components/schemas/DvMultimedia'
        proof:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/DvEhrUri'
        reason:
          $ref: '#/components/schemas/DvText'
        is_pending:
          type: boolean
      allOf:
      - $ref: '#/components/schemas/UpdateAudit'
      x-discriminator-value: UPDATE_ATTESTATION
    UpdateVersion:
      title: UPDATE_VERSION
      required:
      - commit_audit
      - data
      - lifecycle_state
      type: object
      properties:
        preceding_version_uid:
          $ref: '#/components/schemas/ObjectVersionId'
        signature:
          type: string
        lifecycle_state:
          $ref: '#/components/schemas/TerminologyCode'
        attestations:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAttestation'
        data:
          $ref: '#/components/schemas/Versionable'
        commit_audit:
          $ref: '#/components/schemas/UpdateAudit'
    NewContribution:
      title: NewContribution
      required:
      - audit
      - versions
      type: object
      properties:
        uid:
          $ref: '#/components/schemas/HierObjectId'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/UpdateVersion'
        audit:
          $ref: '#/components/schemas/UpdateAudit'
      description: A new (un-committed) CONTRIBUTION resource
    Contribution:
      title: CONTRIBUTION
      required:
      - audit
      - uid
      - versions
      type: object
      properties:
        uid:
          $ref: '#/components/schemas/HierObjectId'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ObjectRef'
        audit:
          $ref: '#/components/schemas/AuditDetails'
      description: A CONTRIBUTION resource
      example:
        uid:
          value: 0826851c-c4c2-4d61-92b9-410fb8275ff0
        versions:
        - _type: OBJECT_REF
          id:
            _type: OBJECT_VERSION_ID
            value: fb458d9c-1323-42bc-b7f8-787f3660a0b5::openEHRSys.example.com::1
          namespace: local
          type: COMPOSITION
        - _type: OBJECT_REF
          id:
            _type: OBJECT_VERSION_ID
            value: abcdefgh-1323-42bc-b7f8-787f3660a0ba::openEHRSys.example.com::1
          namespace: local
          type: FOLDER
        audit:
          system_id: 9624982A-9F42-41A5-9318-AE13D5F5031F
          committer:
            _type: PARTY_IDENTIFIED
            name: A user name
          time_committed:
            value: 2017-08-15T10:37:15.422+02:00
          change_type:
            value: creation
            defining_code:
              terminology_id:
                value: openehr
              code_string: "249"
          description:
            value: Description text
  responses:
    "400":
      description: |
        `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content.
    "409":
      description: |
        `409 Conflict` is returned when a resource with same identifier(s) already exists.
    "200_EHR":
      description: |
        `200 OK` is returned when the requested EHR resource is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ehr'
    "404_EHR_subject":
      description: |
        `404 Not Found` is returned when an EHR with supplied subject parameters does not exist.
    "201_EHR":
      description: "`201 Created` is returned when the EHR has been successfully created.\
        \ \nThe new EHR resource is returned in the body when the request's `Prefer`\
        \ header value is `return=representation`, otherwise only headers are returned.\n"
      headers:
        ETag:
          $ref: '#/components/headers/ETag_EHR'
        Location:
          $ref: '#/components/headers/Location_EHR'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ehr'
    "409_EHR":
      description: |
        `409 Conflict` Unable to create a new EHR due to a conflict with an already existing EHR with the same subject id, namespace pair, whenever EHR_STATUS is supplied.
    "404_unknown_ehr_id":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist.
    "409_EHR_with_id":
      description: "`409 Conflict` Unable to create a new EHR due to a conflict with\
        \ an already existing EHR. \nCan happen when the supplied `ehr_id` is already\
        \ used by an existing EHR.\n"
    "200_EHR_STATUS_retrieved":
      description: |
        `200 OK` is returned when the requested EHR_STATUS is successfully retrieved.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EhrStatus'
    "404_unknown_ehr_id_or_version_uid":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `version_uid` does not exist.
    "400_invalid_version_at_time":
      description: |
        `400 Bad Request` is returned when the request has invalid content such as an invalid `version_at_time` format.
    "404_unknown_ehr_id_or_no_version_at_time":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a version of the resource identified by the request parameters (at specified `version_at_time`) does not exist.
    "200_EHR_STATUS_updated":
      description: |
        `200 OK` is returned when the EHR_STATUS is successfully updated, and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EhrStatus'
    "204_EHR_STATUS":
      description: |
        `204 No Content` is returned when the `Prefer` header is missing or is set to `return=minimal`.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
    "412_EHR_STATUS":
      description: |
        `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
        Returns also latest `version_uid` in the `Location` and `ETag` headers.
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
        Location:
          $ref: '#/components/headers/Location_EHR_STATUS'
    "200_VERSIONED_EHR_STATUS":
      description: |
        `200 OK` is returned when the requested VERSIONED_EHR_STATUS is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VersionedEhrStatus'
    "200_REVISION_HISTORY":
      description: |
        `200 OK` is returned when the requested REVISION_HISTORY is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevisionHistory'
    "200_VERSION_at_time":
      description: |
        `200 OK` is returned when the requested VERSION is successfully retrieved.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_VERSION'
        Location:
          $ref: '#/components/headers/Location_VERSIONED_EHR_STATUS_VERSION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Version'
    "200_VERSION":
      description: |
        `200 OK` is returned when the requested VERSION is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Version'
    "201_COMPOSITION":
      description: "`201 Created` is returned when the COMPOSITION was created. \n\
        Content body is only returned when `Prefer` header has `return=representation`,\
        \ otherwise only headers are returned.\n"
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Composition'
    "400_COMPOSITION":
      description: |
        `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request could not be read, or could not be converted to a valid COMPOSITION object).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    "422_COMPOSITION":
      description: |
        `422 Unprocessable Entity` is returned when the content could be converted to a COMPOSITION, but there are semantic validation errors, such as the underlying template is not known or is not validating the supplied COMPOSITION.
    "200_COMPOSITION_retrieved":
      description: |
        `200 OK` is returned when the requested COMPOSITION is successfully retrieved.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Composition'
    "204_because_deleted_at_time":
      description: |
        `204 No Content` is returned when the resource identified by the request parameters (at specified `version_at_time`) time has been deleted.
    "200_COMPOSITION_updated":
      description: |
        `200 OK` is returned when the COMPOSITION is successfully updated and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Composition'
    "404_unknown_ehr_id_or_uid_based_id":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `uid_based_id` does not exist.
    "412_COMPOSITION":
      description: |
        `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
        Returns also latest `version_uid` in the `Location` and `ETag` headers.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
    "204_COMPOSITION_deleted":
      description: |
        `204 No Content` is returned when COMPOSITION was deleted.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
    "400_already_deleted":
      description: |
        `400 Bad Request` is returned when the request URL could not be parsed (i.e. invalid format of request parameters) or when the resource identified by the request parameters is already deleted.
    "409_COMPOSITION_with_uid_based_id":
      description: |
        `409 Conflict` is returned when supplied `uid_based_id` doesn't match the latest version.
        Returns also latest version in the `Location` and `ETag` headers.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_COMPOSITION'
    "200_VERSIONED_COMPOSITION":
      description: |
        `200 OK` is returned when the requested VERSIONED_COMPOSITION is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VersionedComposition'
    "404_unknown_ehr_id_or_versioned_object_uid":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when the `versioned_object_uid` does not exist.
    "200_VERSION_of_COMPOSITION_at_time":
      description: |
        `200 OK` is returned when the requested VERSION is successfully retrieved.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_VERSION_of_COMPOSITION'
        Location:
          $ref: '#/components/headers/Location_VERSIONED_COMPOSITION_VERSION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Version'
    "404_unknown_ehr_id_or_versioned_object_uid_or_no_version_at_time":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when `versioned_object_uid` does not exist, or when a version of the resource does not exist at the specified `version_at_time`.
    "404_unknown_ehr_id_or_versioned_object_uid_or_version_uid":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when `versioned_object_uid` does not exist, or when a VERSION with `version_uid` does not exist.
    "200_FOLDER_retrieved":
      description: |
        `200 OK` is returned when the FOLDER is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
    "404_directory_unknown_ehr_id_or_no_version_at_time_or_no_path":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a directory does not exist at the specified `version_at_time`, or when `path` does not exists within the directory.
    "200_directory_updated":
      description: |
        `200 OK` is returned when directory was successfully updated and the updated resource is returned in the body when `Prefer` header value is `return=representation`.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
    "204_directory_updated":
      description: |
        `204 No Content` is returned when directory was updated and `Prefer` header is missing or is set to `return=minimal`.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
    "400_FOLDER":
      description: |
        `400 Bad Request` is returned when the request URL or body (if provided) could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request could not be read, or could not be converted to a valid FOLDER object).
    "412_directory":
      description: |
        `412 Precondition Failed` is returned when `If-Match` request header doesn't match the latest version on the service side.
        Returns also latest `version_uid` in the `Location` and `ETag` headers.
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
    "201_directory":
      description: "`201 Created` is returned when the FOLDER was created. \nContent\
        \ body is only returned when `Prefer` header has `return=representation`,\
        \ otherwise only headers are returned.\n"
      headers:
        ETag:
          $ref: '#/components/headers/ETag_FOLDER'
        Location:
          $ref: '#/components/headers/Location_directory'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Folder'
    "204_because_deleted":
      description: |
        `204 No Content` is returned when the resource identified by the request parameters has been (logically) deleted.
    "400_invalid_ehr_id":
      description: |
        `400 Bad Request` is returned when the request has invalid `ehr_id`.
    "404_directory_unknown_ehr_id_or_no_version_uid_or_no_path":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a directory with `version_uid` does not exist, or when `path` does not exist within the directory.
    "201_CONTRIBUTION":
      description: "`201 Created` is returned when the CONTRIBUTION was created. \n\
        Content body is only returned when `Prefer` header has `return=representation`,\
        \ otherwise only headers are returned.\n"
      headers:
        ETag:
          $ref: '#/components/headers/ETag_CONTRIBUTION'
        Location:
          $ref: '#/components/headers/Location_CONTRIBUTION'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contribution'
    "400_CONTRIBUTION":
      description: |
        `400 Bad Request` is returned when the request URL or body could not be parsed or has invalid content (e.g. invalid `ehr_id`, or either the body of the request not be converted to a valid CONTRIBUTION object, or the modification type doesn’t match the operation - i.e. first version of a composition with MODIFICATION).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    "200_CONTRIBUTION":
      description: |
        `200 OK` is returned when the CONTRIBUTION is successfully retrieved.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contribution'
    "404_CONTRIBUTION":
      description: |
        `404 Not Found` is returned when an EHR with `ehr_id` does not exist, or when a CONTRIBUTION with `contribution_uid` does not exist.
  parameters:
    subject_id:
      name: subject_id
      in: query
      description: |
        The EHR subject id.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: ins01
    subject_namespace:
      name: subject_namespace
      in: query
      description: |
        The EHR subject id namespace.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: examples
    Prefer:
      name: Prefer
      in: header
      description: |
        Request header to indicate the preference over response details.
        The response will contain the entire resource when the `Prefer` header has a value of `return=representation`.
      required: false
      style: simple
      explode: false
      schema:
        type: string
        default: return=minimal
        enum:
        - return=representation
        - return=minimal
    ehr_id:
      name: ehr_id
      in: path
      description: |
        EHR identifier taken from EHR.ehr_id.value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 7d44b88c-4199-4bad-97dc-d78268e01398
    version_uid:
      name: version_uid
      in: path
      description: |
        VERSION identifier taken from VERSION.uid.value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
    version_at_time:
      name: version_at_time
      in: query
      description: |
        A given time in the extended ISO 8601 format.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: 2015-01-20T19:30:22.765+01:00
    If-Match:
      name: If-Match
      in: header
      description: "Header to make the request conditional. \nTogether with `ETag`\
        \ request tag, it helps to prevent simultaneous updates of a resource from\
        \ overwriting each other (\"mid-air collisions\").\nThe format is always an\
        \ `version_uid` identifier enclosed by double quotes.\nThe operation will\
        \ be performed only if the existing latest `version_uid` of the resource (i.e.\
        \ the `preceding_version_uid`) matches this header's value.\n"
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1"'
    uid_based_id:
      name: uid_based_id
      in: path
      description: |
        An abstract identifier: it can take a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`), or a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    uid_based_id_as_versioned_object_uid:
      name: uid_based_id
      in: path
      description: |
        An identifier in a form of a HIER_OBJECT_ID identifier taken from VERSIONED_OBJECT.uid.value (i.e. a `versioned_object_uid`).
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515
    uid_based_id_as_version_uid:
      name: uid_based_id
      in: path
      description: |
        An identifier in a form of an OBJECT_VERSION_ID identifier taken from VERSION.uid.value (i.e. a `version_uid`).
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    versioned_object_uid_COMPOSITION:
      name: versioned_object_uid
      in: path
      description: |
        VERSIONED_COMPOSITION identifier taken from VERSIONED_COMPOSITION.uid.value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515
    version_uid_COMPOSITION:
      name: version_uid
      in: path
      description: |
        VERSION identifier taken from VERSION.uid.value.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    path:
      name: path
      in: query
      description: |
        A path to a sub-folder; consists of slash-separated values of the name attribute of FOLDERs in the directory.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: episodes/a/b/c
    contribution_uid:
      name: contribution_uid
      in: path
      description: |
        The CONTRIBUTION uid.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 0826851c-c4c2-4d61-92b9-410fb8275ff0
  headers:
    ETag_EHR:
      description: |
        The `ETag` (i.e. entity tag) response header is the `ehr_id` identifier, enclosed by double quotes.
      style: simple
      explode: false
      schema:
        type: string
        example: '"7d44b88c-4199-4bad-97dc-d78268e01398"'
    Location_EHR:
      description: |
        The `Location` response header indicates the URL of the EHR resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398
    ETag:
      description: |
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a `version_uid` enclosed by double quotes) for a specific version of a resource.
      style: simple
      explode: false
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2"'
    Location_EHR_STATUS:
      description: |
        The `Location` response header indicates the URL of the EHR_STATUS resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/ehr_status/6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2
    ETag_VERSION:
      description: |
        The `ETag` (i.e. entity tag) response header is the VERSION identifier (i.e. the `version_uid`) enclosed by double quotes.
      style: simple
      explode: false
      schema:
        type: string
        example: '"6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::2"'
    Location_VERSIONED_EHR_STATUS_VERSION:
      description: |
        The `Location` response header indicates the URL of the VERSION resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/versioned_ehr_status/version/6cb19121-4307-4648-9da0-d62e4d51f19b::openEHRSys.example.com::1
    ETag_COMPOSITION:
      description: |
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a `version_uid` enclosed by double quotes) for a specific version of a resource.
      style: simple
      explode: false
      schema:
        type: string
        example: '"8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"'
    Location_COMPOSITION:
      description: |
        The `Location` response header indicates the URL of the COMPOSITION resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/composition/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    ETag_VERSION_of_COMPOSITION:
      description: |
        The `ETag` (i.e. entity tag) response header is the VERSION identifier (i.e. the `version_uid`) enclosed by double quotes.
      style: simple
      explode: false
      schema:
        type: string
        example: '"8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::2"'
    Location_VERSIONED_COMPOSITION_VERSION:
      description: |
        The `Location` response header indicates the URL of the VERSION resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/versioned_composition/8849182c-82ad-4088-a07f-48ead4180515/version/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    ETag_FOLDER:
      description: |
        The `ETag` (i.e. entity tag) response header is an identifier (e.g. a `version_uid` enclosed by double quotes) for a specific version of a resource.
      style: simple
      explode: false
      schema:
        type: string
        example: '"8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1"'
    Location_directory:
      description: |
        The `Location` response header indicates the URL of the directory FOLDER resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/directory/8849182c-82ad-4088-a07f-48ead4180515::openEHRSys.example.com::1
    ETag_CONTRIBUTION:
      description: |
        The `ETag` (i.e. entity tag) response header is the `contribution_uid` identifier, enclosed by double quotes.
      style: simple
      explode: false
      schema:
        type: string
        example: '"0826851c-c4c2-4d61-92b9-410fb8275ff0"'
    Location_CONTRIBUTION:
      description: |
        The `Location` response header indicates the URL of the CONTRIBUTION resource.
      style: simple
      explode: false
      schema:
        type: string
        format: url
        example: https://openEHRSys.example.com/v1/ehr/7d44b88c-4199-4bad-97dc-d78268e01398/contribution/0826851c-c4c2-4d61-92b9-410fb8275ff0
x-tagGroups:
- name: Resource endpoints
  tags:
  - EHR
  - EHR_STATUS
  - COMPOSITION
  - DIRECTORY
  - CONTRIBUTION
- name: Resource schemas
  tags:
  - EHR_schema
  - EHR_STATUS_schema
  - COMPOSITION_schema
  - DIRECTORY_schema
  - ITEM_STRUCTURE_schema
  - CONTRIBUTION_schema
